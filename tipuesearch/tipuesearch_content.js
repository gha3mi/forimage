var tipuesearch = {"pages":[{"title":" ForImage ","text":"ForImage ForImage : A Fortran library for reading and writing images. fpm dependency How to run examples API documentation Contributing fpm dependency If you want to use ForImage as a dependency in your own fpm project,\nyou can easily include it by adding the following line to your fpm.toml file: [dependencies] forimage = { git = \"https://github.com/gha3mi/forimage.git\" } How to run examples Clone the repository: You can clone the ForImage repository from GitHub using the following command: git clone https://github.com/gha3mi/forimage.git cd forimage fpm --example run --all API documentation The most up-to-date API documentation for the master branch is available here .\nTo generate the API documentation for ForImage using ford run the following\ncommand: ford ford.yml Contributing Contributions to ForImage are welcome!\nIf you find any issues or would like to suggest improvements, please open an issue. Developer Info Seyed Ali Ghasemi","tags":"home","loc":"index.html"},{"title":"format_pnm – ForImage ","text":"type, public :: format_pnm Components Type Visibility Attributes Name Initial character(len=2), public :: magic_number integer, public :: width integer, public :: height character(len=70), public :: comment integer, public :: max_color integer, public, dimension(:,:), allocatable :: pixels character(len=3), public :: file_format character(len=6), public :: encoding Type-Bound Procedures procedure, public :: set_format private pure elemental subroutine set_format (this, encoding) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: encoding procedure, public :: set_file_format private pure elemental subroutine set_file_format (this, file_format) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=3), intent(in) :: file_format procedure, public :: set_magicnumber private pure elemental subroutine set_magicnumber (this, magic_number) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: magic_number procedure, public :: set_width private pure elemental subroutine set_width (this, width) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this integer, intent(in) :: width procedure, public :: set_height private pure elemental subroutine set_height (this, height) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this integer, intent(in) :: height procedure, public :: set_comment private pure elemental subroutine set_comment (this, comment) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: comment procedure, public :: set_max_color private pure elemental subroutine set_max_color (this, max_color) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this integer, intent(in) :: max_color procedure, public :: set_header private pure elemental subroutine set_header (this, magic_number, width, height, comment, max_color) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: magic_number integer, intent(in) :: width integer, intent(in) :: height character(len=*), intent(in) :: comment integer, intent(in), optional :: max_color procedure, public :: allocate_pixels private pure elemental subroutine allocate_pixels (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this procedure, public :: set_pixels private pure subroutine set_pixels (this, pixels) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this integer, intent(in), dimension(:,:) :: pixels procedure, public :: export_pnm private impure subroutine export_pnm (this, file_name, encoding) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: file_name character(len=*), intent(in), optional :: encoding procedure, public :: set_pnm private pure subroutine set_pnm (this, encoding, file_format, width, height, max_color, comment, pixels) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: encoding character(len=3), intent(in) :: file_format integer, intent(in) :: width integer, intent(in) :: height integer, intent(in), optional :: max_color character(len=*), intent(in) :: comment integer, intent(in), dimension(:,:) :: pixels procedure, public :: import_pnm private impure subroutine import_pnm (this, file_name, file_format, encoding) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: file_name character(len=3), intent(in) :: file_format character(len=*), intent(in) :: encoding procedure, public :: finalize => deallocate_pnm private pure elemental subroutine deallocate_pnm (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this procedure, public :: negative private pure elemental subroutine negative (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this procedure, public :: brighten private pure elemental subroutine brighten (this, factor) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this integer, intent(in) :: factor procedure, public :: swap_channels private pure elemental subroutine swap_channels (this, swap) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: swap procedure, public :: remove_channels private pure elemental subroutine remove_channels (this, remove_r, remove_g, remove_b) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this logical, intent(in), optional :: remove_r logical, intent(in), optional :: remove_g logical, intent(in), optional :: remove_b procedure, public :: greyscale private pure elemental subroutine greyscale (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this procedure, public :: rotate private pure elemental subroutine rotate (this, angle) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this integer, intent(in) :: angle procedure, public :: flip_horizontal private pure elemental subroutine flip_horizontal (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this procedure, public :: flip_vertical private pure elemental subroutine flip_vertical (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this procedure, public :: crop private pure elemental subroutine crop (this, start_row, end_row, start_col, end_col) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this integer, intent(in) :: start_row integer, intent(in) :: end_row integer, intent(in) :: start_col integer, intent(in) :: end_col Source Code type format_pnm character ( 2 ) :: magic_number integer :: width integer :: height character ( 70 ) :: comment integer :: max_color integer , dimension (:,:), allocatable :: pixels character ( 3 ) :: file_format character ( 6 ) :: encoding contains procedure :: set_format procedure :: set_file_format procedure :: set_magicnumber procedure :: set_width procedure :: set_height procedure :: set_comment procedure :: set_max_color procedure :: set_header procedure :: allocate_pixels procedure :: set_pixels procedure :: export_pnm procedure :: set_pnm procedure :: import_pnm procedure :: finalize => deallocate_pnm procedure :: negative procedure :: brighten procedure :: swap_channels procedure :: remove_channels procedure :: greyscale procedure :: rotate procedure :: flip_horizontal procedure :: flip_vertical procedure :: crop end type format_pnm","tags":"","loc":"type/format_pnm.html"},{"title":"format_lut – ForImage ","text":"type, public :: format_lut Components Type Visibility Attributes Name Initial integer, public :: num_colors integer, public :: dim_colors integer, public, dimension(:,:), allocatable :: colors Type-Bound Procedures procedure, public :: allocate_colors private pure elemental subroutine allocate_colors (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_lut ), intent(inout) :: this procedure, public :: set private pure subroutine set (this, num_colors, dim_colors, colors) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_lut ), intent(inout) :: this integer, intent(in) :: num_colors integer, intent(in) :: dim_colors integer, intent(in), dimension(:,:) :: colors procedure, public :: set_num_colors private pure elemental subroutine set_num_colors (this, num_colors) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_lut ), intent(inout) :: this integer, intent(in) :: num_colors procedure, public :: get_num_colors private pure elemental function get_num_colors (this) result(num_colors) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_lut ), intent(in) :: this Return Value integer procedure, public :: set_dim_colors private pure elemental subroutine set_dim_colors (this, dim_colors) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_lut ), intent(inout) :: this integer, intent(in) :: dim_colors procedure, public :: get_dim_colors private pure elemental function get_dim_colors (this) result(dim_colors) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_lut ), intent(in) :: this Return Value integer procedure, public :: set_colors private pure subroutine set_colors (this, colors) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_lut ), intent(inout) :: this integer, intent(in), dimension(:,:) :: colors procedure, public :: get_colors private pure function get_colors (this) result(colors) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_lut ), intent(in) :: this Return Value integer, dimension(:,:), allocatable procedure, public :: export private impure subroutine export (this, file_name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_lut ), intent(inout) :: this character(len=*), intent(in) :: file_name procedure, public :: import private impure subroutine import (this, file_name, dim_colors) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_lut ), intent(inout) :: this character(len=*), intent(in) :: file_name integer, intent(in) :: dim_colors procedure, public :: finalize => deallocate_lut private pure elemental subroutine deallocate_lut (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_lut ), intent(inout) :: this Source Code type format_lut integer :: num_colors integer :: dim_colors integer , dimension (:,:), allocatable :: colors contains procedure :: allocate_colors procedure :: set procedure :: set_num_colors procedure :: get_num_colors procedure :: set_dim_colors procedure :: get_dim_colors procedure :: set_colors procedure :: get_colors procedure :: export procedure :: import procedure :: finalize => deallocate_lut end type format_lut","tags":"","loc":"type/format_lut.html"},{"title":"crop – ForImage","text":"private pure elemental subroutine crop(this, start_row, end_row, start_col, end_col) Type Bound format_pnm Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this integer, intent(in) :: start_row integer, intent(in) :: end_row integer, intent(in) :: start_col integer, intent(in) :: end_col Calls proc~~crop~~CallsGraph proc~crop pnm::format_pnm%crop proc~allocate_pixels pnm::format_pnm%allocate_pixels proc~crop->proc~allocate_pixels Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~crop~~CalledByGraph proc~crop pnm::format_pnm%crop program~example24 example24 program~example24->proc~crop Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code elemental pure subroutine crop ( this , start_row , end_row , start_col , end_col ) class ( format_pnm ), intent ( inout ) :: this integer , intent ( in ) :: start_row , end_row , start_col , end_col integer :: cropped_start_row , cropped_end_row , cropped_start_col , cropped_end_col integer , dimension (:,:), allocatable :: cropped_pixels integer :: i , j , cropped_height , cropped_width ! Check if the cropping coordinates are within the image boundaries cropped_start_row = max ( 1 , start_row ) cropped_end_row = min ( this % height , end_row ) cropped_start_col = max ( 1 , start_col ) cropped_end_col = min ( this % width , end_col ) ! Calculate the dimensions of the cropped image cropped_height = cropped_end_row - cropped_start_row + 1 cropped_width = cropped_end_col - cropped_start_col + 1 select case ( this % file_format ) case ( 'pbm' , 'pgm' ) ! Allocate memory for cropped image pixels allocate ( cropped_pixels ( cropped_height , cropped_width )) ! Copy the cropped pixels to the new array do i = 1 , cropped_height do j = 1 , cropped_width cropped_pixels ( i , j ) = this % pixels ( cropped_start_row - 1 + i , ( cropped_start_col - 1 ) + j ) end do end do case ( 'ppm' ) ! Allocate memory for cropped image pixels allocate ( cropped_pixels ( cropped_height , 3 * cropped_width )) ! Copy the cropped pixels to the new array do i = 1 , cropped_height do j = 1 , 3 * cropped_width cropped_pixels ( i , j ) = this % pixels ( cropped_start_row - 1 + i , ( cropped_start_col - 1 ) * 3 + j ) end do end do end select ! Update image dimensions and pixels this % height = cropped_height this % width = cropped_width deallocate ( this % pixels ) call this % allocate_pixels () this % pixels = cropped_pixels ! Deallocate temporary array deallocate ( cropped_pixels ) end subroutine crop","tags":"","loc":"proc/crop.html"},{"title":"flip_vertical – ForImage","text":"private pure elemental subroutine flip_vertical(this) Type Bound format_pnm Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this Called by proc~~flip_vertical~~CalledByGraph proc~flip_vertical pnm::format_pnm%flip_vertical program~example23 example23 program~example23->proc~flip_vertical Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code elemental pure subroutine flip_vertical ( this ) class ( format_pnm ), intent ( inout ) :: this this % pixels (:,:) = this % pixels ( size ( this % pixels , 1 ): 1 : - 1 , :) end subroutine flip_vertical","tags":"","loc":"proc/flip_vertical.html"},{"title":"flip_horizontal – ForImage","text":"private pure elemental subroutine flip_horizontal(this) Type Bound format_pnm Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this Called by proc~~flip_horizontal~~CalledByGraph proc~flip_horizontal pnm::format_pnm%flip_horizontal program~example23 example23 program~example23->proc~flip_horizontal Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code elemental pure subroutine flip_horizontal ( this ) class ( format_pnm ), intent ( inout ) :: this integer , dimension ( size ( this % pixels , 1 )) :: buffer integer , dimension ( size ( this % pixels , 1 ), 3 ) :: buffer3 integer :: j select case ( this % file_format ) case ( 'pbm' , 'pgm' ) do j = 1 , this % width / 2 buffer (:) = this % pixels (:, this % width - j + 1 ) this % pixels (:, this % width - j + 1 ) = this % pixels (:, j ) this % pixels (:, j ) = buffer (:) end do case ( 'ppm' ) do j = 1 , this % width / 2 buffer3 (:, :) = this % pixels (:, 3 * j - 2 : 3 * j ) this % pixels (:, 3 * j - 2 : 3 * j ) = this % pixels (:, 3 * ( this % width - j + 1 ) - 2 : 3 * ( this % width - j + 1 )) this % pixels (:, 3 * ( this % width - j + 1 ) - 2 : 3 * ( this % width - j + 1 )) = buffer3 (:, :) end do end select end subroutine flip_horizontal","tags":"","loc":"proc/flip_horizontal.html"},{"title":"rotate – ForImage","text":"private pure elemental subroutine rotate(this, angle) Type Bound format_pnm Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this integer, intent(in) :: angle Calls proc~~rotate~~CallsGraph proc~rotate pnm::format_pnm%rotate proc~allocate_pixels pnm::format_pnm%allocate_pixels proc~rotate->proc~allocate_pixels Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~rotate~~CalledByGraph proc~rotate pnm::format_pnm%rotate program~example22 example22 program~example22->proc~rotate Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code elemental pure subroutine rotate ( this , angle ) class ( format_pnm ), intent ( inout ) :: this integer , intent ( in ) :: angle integer , dimension (:,:), allocatable :: rotated_pixels integer :: target_height , target_width integer :: i , j ! Determine the target height and width based on the rotation angle select case ( angle ) case ( 90 , - 90 , 270 , - 270 ) target_height = this % width target_width = this % height case ( 180 , - 180 ) target_height = this % height target_width = this % width case default error stop \"Invalid rotation angle. Valid angles are 90, 180, 270, -90, -180, -270.\" end select select case ( this % file_format ) case ( 'pbm' , 'pgm' ) ! Allocate memory for rotated_pixels array allocate ( rotated_pixels ( target_height , target_width )) ! Rotate pixels based on the specified angle select case ( angle ) case ( 90 , - 270 ) do i = 1 , this % height do j = 1 , this % width rotated_pixels ( j , this % height - i + 1 ) = this % pixels ( i , j ) end do end do case ( 180 , - 180 ) do i = 1 , this % height do j = 1 , this % width rotated_pixels ( this % height - i + 1 , this % width - j + 1 ) = this % pixels ( i , j ) end do end do case ( 270 , - 90 ) do i = 1 , this % height do j = 1 , this % width rotated_pixels ( this % width - j + 1 , i ) = this % pixels ( i , j ) end do end do end select case ( 'ppm' ) ! Allocate memory for rotated_pixels array allocate ( rotated_pixels ( target_height , 3 * target_width )) ! Rotate pixels based on the specified angle select case ( angle ) case ( 90 , - 270 ) do i = 1 , this % height do j = 1 , this % width rotated_pixels ( j , 3 * ( this % height - i + 1 ) - 2 : 3 * ( this % height - i + 1 )) = this % pixels ( i , 3 * j - 2 : 3 * j ) end do end do case ( 180 , - 180 ) do i = 1 , this % height do j = 1 , this % width rotated_pixels ( this % height - i + 1 , 3 * ( this % width - j + 1 ) - 2 : 3 * ( this % width - j + 1 )) = this % pixels ( i , 3 * j - 2 : 3 * j ) end do end do case ( 270 , - 90 ) do i = 1 , this % height do j = 1 , this % width rotated_pixels ( this % width - j + 1 , 3 * i - 2 : 3 * i ) = this % pixels ( i , 3 * j - 2 : 3 * j ) end do end do end select end select ! Update height and width of the image this % height = target_height this % width = target_width deallocate ( this % pixels ) call this % allocate_pixels () ! Update the original pixels with rotated pixels this % pixels = rotated_pixels ! Deallocate rotated_pixels array deallocate ( rotated_pixels ) end subroutine rotate","tags":"","loc":"proc/rotate.html"},{"title":"greyscale – ForImage","text":"private pure elemental subroutine greyscale(this) Type Bound format_pnm Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this Called by proc~~greyscale~~CalledByGraph proc~greyscale pnm::format_pnm%greyscale program~example21 example21 program~example21->proc~greyscale Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code elemental pure subroutine greyscale ( this ) class ( format_pnm ), intent ( inout ) :: this real ( rk ) :: gsc integer :: i , j ! Check if the file is ppm if ( this % file_format /= 'ppm' ) error stop 'greyscale: This function is only for ppm files.' do i = 1 , this % height do j = 1 , this % width ! Calculate a weighed average (here based on ITU Rec.709) of the 3 channels to get a gray color with the same brightness. gsc = 0.2126_rk * real ( this % pixels ( i , 3 * j - 2 ), kind = rk ) + & 0.7152_rk * real ( this % pixels ( i , 3 * j - 1 ), kind = rk ) + & 0.0722_rk * real ( this % pixels ( i , 3 * j - 0 ), kind = rk ) ! Convert the greyscale value back to integer and set it for all RGB channels this % pixels ( i , 3 * j - 2 : 3 * j ) = int ( gsc ) end do end do end subroutine greyscale","tags":"","loc":"proc/greyscale.html"},{"title":"remove_channels – ForImage","text":"private pure elemental subroutine remove_channels(this, remove_r, remove_g, remove_b) Type Bound format_pnm Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this logical, intent(in), optional :: remove_r logical, intent(in), optional :: remove_g logical, intent(in), optional :: remove_b Called by proc~~remove_channels~~CalledByGraph proc~remove_channels pnm::format_pnm%remove_channels program~example20 example20 program~example20->proc~remove_channels Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code elemental pure subroutine remove_channels ( this , remove_r , remove_g , remove_b ) class ( format_pnm ), intent ( inout ) :: this logical , optional , intent ( in ) :: remove_r , remove_g , remove_b ! Check if the file is ppm if ( this % file_format /= 'ppm' ) error stop 'remove_channels: This function is only for ppm files.' ! Remove R channel if ( present ( remove_r )) then if ( remove_r ) then this % pixels (:, 1 : size ( this % pixels , 2 ): 3 ) = 0 end if end if ! Remove G channel if ( present ( remove_g )) then if ( remove_g ) then this % pixels (:, 2 : size ( this % pixels , 2 ): 3 ) = 0 end if end if ! Remove B channel if ( present ( remove_b )) then if ( remove_b ) then this % pixels (:, 3 : size ( this % pixels , 2 ): 3 ) = 0 end if end if end subroutine remove_channels","tags":"","loc":"proc/remove_channels.html"},{"title":"swap_channels – ForImage","text":"private pure elemental subroutine swap_channels(this, swap) Type Bound format_pnm Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: swap Called by proc~~swap_channels~~CalledByGraph proc~swap_channels pnm::format_pnm%swap_channels program~example19 example19 program~example19->proc~swap_channels Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code elemental pure subroutine swap_channels ( this , swap ) class ( format_pnm ), intent ( inout ) :: this character ( * ), intent ( in ) :: swap integer :: i , j , temp ! Check if the file is ppm if ( this % file_format /= 'ppm' ) error stop 'swap_channels: This function is only for ppm files.' ! Swap R and G channels if ( swap == 'rg' . or . swap == 'gr' . or . swap == 'RG' . or . swap == 'GR' ) then do i = 1 , this % height do j = 1 , this % width temp = this % pixels ( i , 3 * j - 2 ) this % pixels ( i , 3 * j - 2 ) = this % pixels ( i , 3 * j - 1 ) this % pixels ( i , 3 * j - 1 ) = temp end do end do end if ! Swap G and B channels if ( swap == 'gb' . or . swap == 'bg' . or . swap == 'GB' . or . swap == 'BG' ) then do i = 1 , this % height do j = 1 , this % width temp = this % pixels ( i , 3 * j - 1 ) this % pixels ( i , 3 * j - 1 ) = this % pixels ( i , 3 * j - 0 ) this % pixels ( i , 3 * j - 0 ) = temp end do end do end if ! Swap R and B channels if ( swap == 'rb' . or . swap == 'br' . or . swap == 'RB' . or . swap == 'BR' ) then do i = 1 , this % height do j = 1 , this % width temp = this % pixels ( i , 3 * j - 2 ) this % pixels ( i , 3 * j - 2 ) = this % pixels ( i , 3 * j - 0 ) this % pixels ( i , 3 * j - 0 ) = temp end do end do end if end subroutine swap_channels","tags":"","loc":"proc/swap_channels.html"},{"title":"brighten – ForImage","text":"private pure elemental subroutine brighten(this, factor) Type Bound format_pnm Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this integer, intent(in) :: factor Called by proc~~brighten~~CalledByGraph proc~brighten pnm::format_pnm%brighten program~example18 example18 program~example18->proc~brighten Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code elemental pure subroutine brighten ( this , factor ) class ( format_pnm ), intent ( inout ) :: this integer , intent ( in ) :: factor this % pixels = min ( this % max_color , max ( 0 , this % pixels + factor )) end subroutine brighten","tags":"","loc":"proc/brighten.html"},{"title":"negative – ForImage","text":"private pure elemental subroutine negative(this) Type Bound format_pnm Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this Called by proc~~negative~~CalledByGraph proc~negative pnm::format_pnm%negative program~example17 example17 program~example17->proc~negative Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code elemental pure subroutine negative ( this ) class ( format_pnm ), intent ( inout ) :: this this % pixels = this % max_color - this % pixels end subroutine negative","tags":"","loc":"proc/negative.html"},{"title":"set_file_format – ForImage","text":"private pure elemental subroutine set_file_format(this, file_format) Type Bound format_pnm Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=3), intent(in) :: file_format Called by proc~~set_file_format~~CalledByGraph proc~set_file_format pnm::format_pnm%set_file_format proc~import_pnm pnm::format_pnm%import_pnm proc~import_pnm->proc~set_file_format proc~set_pnm pnm::format_pnm%set_pnm proc~set_pnm->proc~set_file_format program~example example program~example->proc~set_pnm program~example1 example1 program~example1->proc~set_pnm program~example10 example10 program~example10->proc~import_pnm program~example11 example11 program~example11->proc~import_pnm program~example12 example12 program~example12->proc~import_pnm program~example13 example13 program~example13->proc~import_pnm program~example14 example14 program~example14->proc~import_pnm program~example17 example17 program~example17->proc~set_pnm program~example18 example18 program~example18->proc~set_pnm program~example19 example19 program~example19->proc~set_pnm program~example2 example2 program~example2->proc~set_pnm program~example20 example20 program~example20->proc~set_pnm program~example21 example21 program~example21->proc~set_pnm program~example22 example22 program~example22->proc~set_pnm program~example23 example23 program~example23->proc~set_pnm program~example24 example24 program~example24->proc~set_pnm program~example3 example3 program~example3->proc~set_pnm program~example4 example4 program~example4->proc~set_pnm program~example6 example6 program~example6->proc~set_pnm program~example7 example7 program~example7->proc~import_pnm program~example8 example8 program~example8->proc~import_pnm program~example9 example9 program~example9->proc~import_pnm Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code elemental pure subroutine set_file_format ( this , file_format ) class ( format_pnm ), intent ( inout ) :: this character ( 3 ), intent ( in ) :: file_format this % file_format = file_format end subroutine set_file_format","tags":"","loc":"proc/set_file_format.html"},{"title":"set_format – ForImage","text":"private pure elemental subroutine set_format(this, encoding) Type Bound format_pnm Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: encoding Called by proc~~set_format~~CalledByGraph proc~set_format pnm::format_pnm%set_format proc~export_pnm pnm::format_pnm%export_pnm proc~export_pnm->proc~set_format proc~import_pnm pnm::format_pnm%import_pnm proc~import_pnm->proc~set_format proc~set_pnm pnm::format_pnm%set_pnm proc~set_pnm->proc~set_format program~example example program~example->proc~export_pnm program~example->proc~set_pnm program~example1 example1 program~example1->proc~export_pnm program~example1->proc~set_pnm program~example10 example10 program~example10->proc~export_pnm program~example10->proc~import_pnm program~example11 example11 program~example11->proc~export_pnm program~example11->proc~import_pnm program~example12 example12 program~example12->proc~export_pnm program~example12->proc~import_pnm program~example13 example13 program~example13->proc~export_pnm program~example13->proc~import_pnm program~example14 example14 program~example14->proc~export_pnm program~example14->proc~import_pnm program~example17 example17 program~example17->proc~export_pnm program~example17->proc~set_pnm program~example18 example18 program~example18->proc~export_pnm program~example18->proc~set_pnm program~example19 example19 program~example19->proc~export_pnm program~example19->proc~set_pnm program~example2 example2 program~example2->proc~export_pnm program~example2->proc~set_pnm program~example20 example20 program~example20->proc~export_pnm program~example20->proc~set_pnm program~example21 example21 program~example21->proc~export_pnm program~example21->proc~set_pnm program~example22 example22 program~example22->proc~export_pnm program~example22->proc~set_pnm program~example23 example23 program~example23->proc~export_pnm program~example23->proc~set_pnm program~example24 example24 program~example24->proc~export_pnm program~example24->proc~set_pnm program~example3 example3 program~example3->proc~export_pnm program~example3->proc~set_pnm program~example4 example4 program~example4->proc~export_pnm program~example4->proc~set_pnm program~example6 example6 program~example6->proc~export_pnm program~example6->proc~set_pnm program~example7 example7 program~example7->proc~export_pnm program~example7->proc~import_pnm program~example8 example8 program~example8->proc~export_pnm program~example8->proc~import_pnm program~example9 example9 program~example9->proc~export_pnm program~example9->proc~import_pnm Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code elemental pure subroutine set_format ( this , encoding ) class ( format_pnm ), intent ( inout ) :: this character ( * ), intent ( in ) :: encoding this % encoding = trim ( encoding ) end subroutine set_format","tags":"","loc":"proc/set_format.html"},{"title":"deallocate_pnm – ForImage","text":"private pure elemental subroutine deallocate_pnm(this) Type Bound format_pnm Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this Called by proc~~deallocate_pnm~~CalledByGraph proc~deallocate_pnm pnm::format_pnm%deallocate_pnm program~example example program~example->proc~deallocate_pnm program~example1 example1 program~example1->proc~deallocate_pnm program~example10 example10 program~example10->proc~deallocate_pnm program~example11 example11 program~example11->proc~deallocate_pnm program~example12 example12 program~example12->proc~deallocate_pnm program~example13 example13 program~example13->proc~deallocate_pnm program~example14 example14 program~example14->proc~deallocate_pnm program~example17 example17 program~example17->proc~deallocate_pnm program~example18 example18 program~example18->proc~deallocate_pnm program~example19 example19 program~example19->proc~deallocate_pnm program~example2 example2 program~example2->proc~deallocate_pnm program~example20 example20 program~example20->proc~deallocate_pnm program~example21 example21 program~example21->proc~deallocate_pnm program~example22 example22 program~example22->proc~deallocate_pnm program~example23 example23 program~example23->proc~deallocate_pnm program~example24 example24 program~example24->proc~deallocate_pnm program~example3 example3 program~example3->proc~deallocate_pnm program~example4 example4 program~example4->proc~deallocate_pnm program~example6 example6 program~example6->proc~deallocate_pnm program~example7 example7 program~example7->proc~deallocate_pnm program~example8 example8 program~example8->proc~deallocate_pnm program~example9 example9 program~example9->proc~deallocate_pnm Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code elemental pure subroutine deallocate_pnm ( this ) class ( format_pnm ), intent ( inout ) :: this if ( allocated ( this % pixels )) deallocate ( this % pixels ) end subroutine deallocate_pnm","tags":"","loc":"proc/deallocate_pnm.html"},{"title":"import_pnm – ForImage","text":"private impure subroutine import_pnm(this, file_name, file_format, encoding) Type Bound format_pnm Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: file_name character(len=3), intent(in) :: file_format character(len=*), intent(in) :: encoding Calls proc~~import_pnm~~CallsGraph proc~import_pnm pnm::format_pnm%import_pnm proc~allocate_pixels pnm::format_pnm%allocate_pixels proc~import_pnm->proc~allocate_pixels proc~set_file_format pnm::format_pnm%set_file_format proc~import_pnm->proc~set_file_format proc~set_format pnm::format_pnm%set_format proc~import_pnm->proc~set_format Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~import_pnm~~CalledByGraph proc~import_pnm pnm::format_pnm%import_pnm program~example10 example10 program~example10->proc~import_pnm program~example11 example11 program~example11->proc~import_pnm program~example12 example12 program~example12->proc~import_pnm program~example13 example13 program~example13->proc~import_pnm program~example14 example14 program~example14->proc~import_pnm program~example7 example7 program~example7->proc~import_pnm program~example8 example8 program~example8->proc~import_pnm program~example9 example9 program~example9->proc~import_pnm Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code impure subroutine import_pnm ( this , file_name , file_format , encoding ) class ( format_pnm ), intent ( inout ) :: this character ( * ), intent ( in ) :: file_name , encoding character ( 3 ), intent ( in ) :: file_format integer :: nunit , i , iostat character :: temp character , dimension (:), allocatable :: buffer_ch integer , dimension (:), allocatable :: buffer_int logical :: file_exists inquire ( file = file_name // '.' // file_format , exist = file_exists ) if ( file_exists ) then call this % set_file_format ( file_format ) call this % set_format ( encoding ) select case ( this % encoding ) case ( 'binary' , 'raw' ) select case ( file_format ) case ( 'pbm' ) open ( newunit = nunit , file = file_name // '.' // file_format , iostat = iostat ) if ( iostat /= 0 ) error stop 'Error opening the file.' read ( nunit , * ) this % magic_number read ( nunit , '(a,a)' ) temp , this % comment read ( nunit , * ) this % width , this % height allocate ( buffer_ch ( this % height * this % width )) buffer_ch = achar ( 0 ) read ( nunit , '(*(a))' , advance = 'yes' ) buffer_ch close ( nunit ) call this % allocate_pixels () this % pixels = transpose ( reshape ( ichar ( buffer_ch ), [ this % height , this % width ])) case ( 'pgm' ) open ( newunit = nunit , file = file_name // '.' // file_format , iostat = iostat ) if ( iostat /= 0 ) error stop 'Error opening the file.' read ( nunit , * ) this % magic_number read ( nunit , '(a,a)' ) temp , this % comment read ( nunit , * ) this % width , this % height read ( nunit , * ) this % max_color allocate ( buffer_ch ( this % height * this % width )) buffer_ch = achar ( 0 ) read ( nunit , '(*(a))' , advance = 'yes' ) buffer_ch close ( nunit ) call this % allocate_pixels () this % pixels = transpose ( reshape ( ichar ( buffer_ch ), [ this % height , this % width ])) case ( 'ppm' ) open ( newunit = nunit , file = file_name // '.' // file_format , iostat = iostat ) if ( iostat /= 0 ) error stop 'Error opening the file.' read ( nunit , * ) this % magic_number read ( nunit , '(a,a)' ) temp , this % comment read ( nunit , * ) this % width , this % height read ( nunit , * ) this % max_color allocate ( buffer_ch ( this % height * this % width * 3 )) buffer_ch = achar ( 0 ) read ( nunit , '(*(a))' , advance = 'yes' ) buffer_ch close ( nunit ) call this % allocate_pixels () this % pixels = transpose ( reshape ( ichar ( buffer_ch ), [ this % height , 3 * this % width ])) end select case ( 'ascii' , 'plain' ) select case ( file_format ) case ( 'pbm' ) open ( newunit = nunit , file = file_name // '.' // file_format , iostat = iostat ) if ( iostat /= 0 ) error stop 'Error opening the file.' read ( nunit , * ) this % magic_number read ( nunit , '(a,a)' ) temp , this % comment read ( nunit , * ) this % width , this % height call this % allocate_pixels () allocate ( buffer_int ( this % width )) buffer_int = 0 do i = 1 , size ( this % pixels , 1 ) read ( nunit , * ) buffer_int this % pixels ( i ,:) = buffer_int end do close ( nunit ) case ( 'pgm' ) open ( newunit = nunit , file = file_name // '.' // file_format , iostat = iostat ) if ( iostat /= 0 ) error stop 'Error opening the file.' read ( nunit , * ) this % magic_number read ( nunit , '(a,a)' ) temp , this % comment read ( nunit , * ) this % width , this % height read ( nunit , * ) this % max_color call this % allocate_pixels () allocate ( buffer_int ( this % width )) buffer_int = 0 do i = 1 , size ( this % pixels , 1 ) read ( nunit , * ) buffer_int this % pixels ( i ,:) = buffer_int end do close ( nunit ) case ( 'ppm' ) open ( newunit = nunit , file = file_name // '.' // file_format , iostat = iostat ) if ( iostat /= 0 ) error stop 'Error opening the file.' read ( nunit , * ) this % magic_number read ( nunit , '(a,a)' ) temp , this % comment read ( nunit , * ) this % width , this % height read ( nunit , * ) this % max_color call this % allocate_pixels () allocate ( buffer_int ( 3 * this % width )) buffer_int = 0 do i = 1 , size ( this % pixels , 1 ) read ( nunit , * ) buffer_int this % pixels ( i ,:) = buffer_int end do close ( nunit ) end select end select else error stop 'Error: File does not exist.' end if end subroutine import_pnm","tags":"","loc":"proc/import_pnm.html"},{"title":"set_pnm – ForImage","text":"private pure subroutine set_pnm(this, encoding, file_format, width, height, max_color, comment, pixels) Type Bound format_pnm Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: encoding character(len=3), intent(in) :: file_format integer, intent(in) :: width integer, intent(in) :: height integer, intent(in), optional :: max_color character(len=*), intent(in) :: comment integer, intent(in), dimension(:,:) :: pixels Calls proc~~set_pnm~~CallsGraph proc~set_pnm pnm::format_pnm%set_pnm proc~allocate_pixels pnm::format_pnm%allocate_pixels proc~set_pnm->proc~allocate_pixels proc~set_file_format pnm::format_pnm%set_file_format proc~set_pnm->proc~set_file_format proc~set_format pnm::format_pnm%set_format proc~set_pnm->proc~set_format proc~set_header pnm::format_pnm%set_header proc~set_pnm->proc~set_header proc~set_pixels pnm::format_pnm%set_pixels proc~set_pnm->proc~set_pixels proc~set_comment pnm::format_pnm%set_comment proc~set_header->proc~set_comment proc~set_height pnm::format_pnm%set_height proc~set_header->proc~set_height proc~set_magicnumber pnm::format_pnm%set_magicnumber proc~set_header->proc~set_magicnumber proc~set_max_color pnm::format_pnm%set_max_color proc~set_header->proc~set_max_color proc~set_width pnm::format_pnm%set_width proc~set_header->proc~set_width Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~set_pnm~~CalledByGraph proc~set_pnm pnm::format_pnm%set_pnm program~example example program~example->proc~set_pnm program~example1 example1 program~example1->proc~set_pnm program~example17 example17 program~example17->proc~set_pnm program~example18 example18 program~example18->proc~set_pnm program~example19 example19 program~example19->proc~set_pnm program~example2 example2 program~example2->proc~set_pnm program~example20 example20 program~example20->proc~set_pnm program~example21 example21 program~example21->proc~set_pnm program~example22 example22 program~example22->proc~set_pnm program~example23 example23 program~example23->proc~set_pnm program~example24 example24 program~example24->proc~set_pnm program~example3 example3 program~example3->proc~set_pnm program~example4 example4 program~example4->proc~set_pnm program~example6 example6 program~example6->proc~set_pnm Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code pure subroutine set_pnm ( this , encoding , file_format , width , height , max_color , comment , pixels ) class ( format_pnm ), intent ( inout ) :: this integer , intent ( in ) :: width integer , intent ( in ) :: height character ( * ), intent ( in ) :: comment integer , optional , intent ( in ) :: max_color integer , dimension (:,:), intent ( in ) :: pixels character ( * ), intent ( in ) :: encoding character ( 3 ), intent ( in ) :: file_format character ( 2 ) :: magic_number call this % set_format ( encoding ) call this % set_file_format ( file_format ) select case ( this % encoding ) case ( 'ascii' , 'plain' ) select case ( this % file_format ) case ( 'pbm' ) magic_number = 'P1' case ( 'pgm' ) magic_number = 'P2' case ( 'ppm' ) magic_number = 'P3' end select case ( 'binary' , 'raw' ) select case ( this % file_format ) case ( 'pbm' ) magic_number = 'P4' case ( 'pgm' ) magic_number = 'P5' case ( 'ppm' ) magic_number = 'P6' end select end select call this % set_header ( magic_number , width , height , comment , max_color ) call this % allocate_pixels () call this % set_pixels ( pixels ) end subroutine set_pnm","tags":"","loc":"proc/set_pnm.html"},{"title":"allocate_pixels – ForImage","text":"private pure elemental subroutine allocate_pixels(this) Type Bound format_pnm Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this Called by proc~~allocate_pixels~~CalledByGraph proc~allocate_pixels pnm::format_pnm%allocate_pixels proc~crop pnm::format_pnm%crop proc~crop->proc~allocate_pixels proc~import_pnm pnm::format_pnm%import_pnm proc~import_pnm->proc~allocate_pixels proc~rotate pnm::format_pnm%rotate proc~rotate->proc~allocate_pixels proc~set_pnm pnm::format_pnm%set_pnm proc~set_pnm->proc~allocate_pixels program~example example program~example->proc~set_pnm program~example1 example1 program~example1->proc~set_pnm program~example10 example10 program~example10->proc~import_pnm program~example11 example11 program~example11->proc~import_pnm program~example12 example12 program~example12->proc~import_pnm program~example13 example13 program~example13->proc~import_pnm program~example14 example14 program~example14->proc~import_pnm program~example17 example17 program~example17->proc~set_pnm program~example18 example18 program~example18->proc~set_pnm program~example19 example19 program~example19->proc~set_pnm program~example2 example2 program~example2->proc~set_pnm program~example20 example20 program~example20->proc~set_pnm program~example21 example21 program~example21->proc~set_pnm program~example22 example22 program~example22->proc~rotate program~example22->proc~set_pnm program~example23 example23 program~example23->proc~set_pnm program~example24 example24 program~example24->proc~crop program~example24->proc~set_pnm program~example3 example3 program~example3->proc~set_pnm program~example4 example4 program~example4->proc~set_pnm program~example6 example6 program~example6->proc~set_pnm program~example7 example7 program~example7->proc~import_pnm program~example8 example8 program~example8->proc~import_pnm program~example9 example9 program~example9->proc~import_pnm Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code elemental pure subroutine allocate_pixels ( this ) class ( format_pnm ), intent ( inout ) :: this select case ( this % magic_number ) case ( 'P1' ) if (. not . allocated ( this % pixels )) allocate ( this % pixels ( this % height , this % width )) case ( 'P2' ) if (. not . allocated ( this % pixels )) allocate ( this % pixels ( this % height , this % width )) case ( 'P3' ) if (. not . allocated ( this % pixels )) allocate ( this % pixels ( this % height , 3 * this % width )) case ( 'P4' ) if (. not . allocated ( this % pixels )) allocate ( this % pixels ( this % height , this % width )) case ( 'P5' ) if (. not . allocated ( this % pixels )) allocate ( this % pixels ( this % height , this % width )) case ( 'P6' ) if (. not . allocated ( this % pixels )) allocate ( this % pixels ( this % height , 3 * this % width )) end select end subroutine allocate_pixels","tags":"","loc":"proc/allocate_pixels.html"},{"title":"set_magicnumber – ForImage","text":"private pure elemental subroutine set_magicnumber(this, magic_number) Type Bound format_pnm Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: magic_number Called by proc~~set_magicnumber~~CalledByGraph proc~set_magicnumber pnm::format_pnm%set_magicnumber proc~set_header pnm::format_pnm%set_header proc~set_header->proc~set_magicnumber proc~set_pnm pnm::format_pnm%set_pnm proc~set_pnm->proc~set_header program~example example program~example->proc~set_pnm program~example1 example1 program~example1->proc~set_pnm program~example17 example17 program~example17->proc~set_pnm program~example18 example18 program~example18->proc~set_pnm program~example19 example19 program~example19->proc~set_pnm program~example2 example2 program~example2->proc~set_pnm program~example20 example20 program~example20->proc~set_pnm program~example21 example21 program~example21->proc~set_pnm program~example22 example22 program~example22->proc~set_pnm program~example23 example23 program~example23->proc~set_pnm program~example24 example24 program~example24->proc~set_pnm program~example3 example3 program~example3->proc~set_pnm program~example4 example4 program~example4->proc~set_pnm program~example6 example6 program~example6->proc~set_pnm Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code elemental pure subroutine set_magicnumber ( this , magic_number ) class ( format_pnm ), intent ( inout ) :: this character ( * ), intent ( in ) :: magic_number this % magic_number = magic_number end subroutine set_magicnumber","tags":"","loc":"proc/set_magicnumber.html"},{"title":"set_width – ForImage","text":"private pure elemental subroutine set_width(this, width) Type Bound format_pnm Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this integer, intent(in) :: width Called by proc~~set_width~~CalledByGraph proc~set_width pnm::format_pnm%set_width proc~set_header pnm::format_pnm%set_header proc~set_header->proc~set_width proc~set_pnm pnm::format_pnm%set_pnm proc~set_pnm->proc~set_header program~example example program~example->proc~set_pnm program~example1 example1 program~example1->proc~set_pnm program~example17 example17 program~example17->proc~set_pnm program~example18 example18 program~example18->proc~set_pnm program~example19 example19 program~example19->proc~set_pnm program~example2 example2 program~example2->proc~set_pnm program~example20 example20 program~example20->proc~set_pnm program~example21 example21 program~example21->proc~set_pnm program~example22 example22 program~example22->proc~set_pnm program~example23 example23 program~example23->proc~set_pnm program~example24 example24 program~example24->proc~set_pnm program~example3 example3 program~example3->proc~set_pnm program~example4 example4 program~example4->proc~set_pnm program~example6 example6 program~example6->proc~set_pnm Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code elemental pure subroutine set_width ( this , width ) class ( format_pnm ), intent ( inout ) :: this integer , intent ( in ) :: width this % width = width end subroutine set_width","tags":"","loc":"proc/set_width.html"},{"title":"set_height – ForImage","text":"private pure elemental subroutine set_height(this, height) Type Bound format_pnm Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this integer, intent(in) :: height Called by proc~~set_height~~CalledByGraph proc~set_height pnm::format_pnm%set_height proc~set_header pnm::format_pnm%set_header proc~set_header->proc~set_height proc~set_pnm pnm::format_pnm%set_pnm proc~set_pnm->proc~set_header program~example example program~example->proc~set_pnm program~example1 example1 program~example1->proc~set_pnm program~example17 example17 program~example17->proc~set_pnm program~example18 example18 program~example18->proc~set_pnm program~example19 example19 program~example19->proc~set_pnm program~example2 example2 program~example2->proc~set_pnm program~example20 example20 program~example20->proc~set_pnm program~example21 example21 program~example21->proc~set_pnm program~example22 example22 program~example22->proc~set_pnm program~example23 example23 program~example23->proc~set_pnm program~example24 example24 program~example24->proc~set_pnm program~example3 example3 program~example3->proc~set_pnm program~example4 example4 program~example4->proc~set_pnm program~example6 example6 program~example6->proc~set_pnm Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code elemental pure subroutine set_height ( this , height ) class ( format_pnm ), intent ( inout ) :: this integer , intent ( in ) :: height this % height = height end subroutine set_height","tags":"","loc":"proc/set_height.html"},{"title":"set_comment – ForImage","text":"private pure elemental subroutine set_comment(this, comment) Type Bound format_pnm Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: comment Called by proc~~set_comment~~CalledByGraph proc~set_comment pnm::format_pnm%set_comment proc~set_header pnm::format_pnm%set_header proc~set_header->proc~set_comment proc~set_pnm pnm::format_pnm%set_pnm proc~set_pnm->proc~set_header program~example example program~example->proc~set_pnm program~example1 example1 program~example1->proc~set_pnm program~example17 example17 program~example17->proc~set_pnm program~example18 example18 program~example18->proc~set_pnm program~example19 example19 program~example19->proc~set_pnm program~example2 example2 program~example2->proc~set_pnm program~example20 example20 program~example20->proc~set_pnm program~example21 example21 program~example21->proc~set_pnm program~example22 example22 program~example22->proc~set_pnm program~example23 example23 program~example23->proc~set_pnm program~example24 example24 program~example24->proc~set_pnm program~example3 example3 program~example3->proc~set_pnm program~example4 example4 program~example4->proc~set_pnm program~example6 example6 program~example6->proc~set_pnm Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code elemental pure subroutine set_comment ( this , comment ) class ( format_pnm ), intent ( inout ) :: this character ( * ), intent ( in ) :: comment this % comment = comment end subroutine set_comment","tags":"","loc":"proc/set_comment.html"},{"title":"set_max_color – ForImage","text":"private pure elemental subroutine set_max_color(this, max_color) Type Bound format_pnm Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this integer, intent(in) :: max_color Called by proc~~set_max_color~~CalledByGraph proc~set_max_color pnm::format_pnm%set_max_color proc~set_header pnm::format_pnm%set_header proc~set_header->proc~set_max_color proc~set_pnm pnm::format_pnm%set_pnm proc~set_pnm->proc~set_header program~example example program~example->proc~set_pnm program~example1 example1 program~example1->proc~set_pnm program~example17 example17 program~example17->proc~set_pnm program~example18 example18 program~example18->proc~set_pnm program~example19 example19 program~example19->proc~set_pnm program~example2 example2 program~example2->proc~set_pnm program~example20 example20 program~example20->proc~set_pnm program~example21 example21 program~example21->proc~set_pnm program~example22 example22 program~example22->proc~set_pnm program~example23 example23 program~example23->proc~set_pnm program~example24 example24 program~example24->proc~set_pnm program~example3 example3 program~example3->proc~set_pnm program~example4 example4 program~example4->proc~set_pnm program~example6 example6 program~example6->proc~set_pnm Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code elemental pure subroutine set_max_color ( this , max_color ) class ( format_pnm ), intent ( inout ) :: this integer , intent ( in ) :: max_color this % max_color = max_color end subroutine set_max_color","tags":"","loc":"proc/set_max_color.html"},{"title":"set_header – ForImage","text":"private pure elemental subroutine set_header(this, magic_number, width, height, comment, max_color) Type Bound format_pnm Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: magic_number integer, intent(in) :: width integer, intent(in) :: height character(len=*), intent(in) :: comment integer, intent(in), optional :: max_color Calls proc~~set_header~~CallsGraph proc~set_header pnm::format_pnm%set_header proc~set_comment pnm::format_pnm%set_comment proc~set_header->proc~set_comment proc~set_height pnm::format_pnm%set_height proc~set_header->proc~set_height proc~set_magicnumber pnm::format_pnm%set_magicnumber proc~set_header->proc~set_magicnumber proc~set_max_color pnm::format_pnm%set_max_color proc~set_header->proc~set_max_color proc~set_width pnm::format_pnm%set_width proc~set_header->proc~set_width Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~set_header~~CalledByGraph proc~set_header pnm::format_pnm%set_header proc~set_pnm pnm::format_pnm%set_pnm proc~set_pnm->proc~set_header program~example example program~example->proc~set_pnm program~example1 example1 program~example1->proc~set_pnm program~example17 example17 program~example17->proc~set_pnm program~example18 example18 program~example18->proc~set_pnm program~example19 example19 program~example19->proc~set_pnm program~example2 example2 program~example2->proc~set_pnm program~example20 example20 program~example20->proc~set_pnm program~example21 example21 program~example21->proc~set_pnm program~example22 example22 program~example22->proc~set_pnm program~example23 example23 program~example23->proc~set_pnm program~example24 example24 program~example24->proc~set_pnm program~example3 example3 program~example3->proc~set_pnm program~example4 example4 program~example4->proc~set_pnm program~example6 example6 program~example6->proc~set_pnm Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code elemental pure subroutine set_header ( this , magic_number , width , height , comment , max_color ) class ( format_pnm ), intent ( inout ) :: this character ( * ), intent ( in ) :: magic_number integer , intent ( in ) :: width integer , intent ( in ) :: height character ( * ), intent ( in ) :: comment integer , optional , intent ( in ) :: max_color call this % set_magicnumber ( magic_number ) call this % set_width ( width ) call this % set_height ( height ) call this % set_comment ( comment ) if ( this % file_format /= 'pbm' ) call this % set_max_color ( max_color ) end subroutine set_header","tags":"","loc":"proc/set_header.html"},{"title":"set_pixels – ForImage","text":"private pure subroutine set_pixels(this, pixels) Type Bound format_pnm Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this integer, intent(in), dimension(:,:) :: pixels Called by proc~~set_pixels~~CalledByGraph proc~set_pixels pnm::format_pnm%set_pixels proc~set_pnm pnm::format_pnm%set_pnm proc~set_pnm->proc~set_pixels program~example example program~example->proc~set_pnm program~example1 example1 program~example1->proc~set_pnm program~example17 example17 program~example17->proc~set_pnm program~example18 example18 program~example18->proc~set_pnm program~example19 example19 program~example19->proc~set_pnm program~example2 example2 program~example2->proc~set_pnm program~example20 example20 program~example20->proc~set_pnm program~example21 example21 program~example21->proc~set_pnm program~example22 example22 program~example22->proc~set_pnm program~example23 example23 program~example23->proc~set_pnm program~example24 example24 program~example24->proc~set_pnm program~example3 example3 program~example3->proc~set_pnm program~example4 example4 program~example4->proc~set_pnm program~example6 example6 program~example6->proc~set_pnm Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code pure subroutine set_pixels ( this , pixels ) class ( format_pnm ), intent ( inout ) :: this integer , dimension (:,:), intent ( in ) :: pixels this % pixels = pixels end subroutine set_pixels","tags":"","loc":"proc/set_pixels.html"},{"title":"set_pixel – ForImage","text":"private pure elemental subroutine set_pixel(this, grey, r, g, b, i, j) Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this integer, intent(in), optional :: grey integer, intent(in), optional :: r integer, intent(in), optional :: g integer, intent(in), optional :: b integer, intent(in) :: i integer, intent(in) :: j Source Code elemental pure subroutine set_pixel ( this , grey , r , g , b , i , j ) class ( format_pnm ), intent ( inout ) :: this integer , intent ( in ), optional :: grey integer , intent ( in ), optional :: r , g , b integer , intent ( in ) :: i , j select case ( this % magic_number ) case ( 'P1' ) this % pixels ( i , j ) = grey case ( 'P2' ) this % pixels ( i , j ) = grey case ( 'P3' ) this % pixels ( i , 3 * j - 2 ) = r this % pixels ( i , 3 * j - 1 ) = g this % pixels ( i , 3 * j - 0 ) = b end select end subroutine set_pixel","tags":"","loc":"proc/set_pixel.html"},{"title":"export_pnm – ForImage","text":"private impure subroutine export_pnm(this, file_name, encoding) Type Bound format_pnm Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: file_name character(len=*), intent(in), optional :: encoding Calls proc~~export_pnm~~CallsGraph proc~export_pnm pnm::format_pnm%export_pnm proc~set_format pnm::format_pnm%set_format proc~export_pnm->proc~set_format Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~export_pnm~~CalledByGraph proc~export_pnm pnm::format_pnm%export_pnm program~example example program~example->proc~export_pnm program~example1 example1 program~example1->proc~export_pnm program~example10 example10 program~example10->proc~export_pnm program~example11 example11 program~example11->proc~export_pnm program~example12 example12 program~example12->proc~export_pnm program~example13 example13 program~example13->proc~export_pnm program~example14 example14 program~example14->proc~export_pnm program~example17 example17 program~example17->proc~export_pnm program~example18 example18 program~example18->proc~export_pnm program~example19 example19 program~example19->proc~export_pnm program~example2 example2 program~example2->proc~export_pnm program~example20 example20 program~example20->proc~export_pnm program~example21 example21 program~example21->proc~export_pnm program~example22 example22 program~example22->proc~export_pnm program~example23 example23 program~example23->proc~export_pnm program~example24 example24 program~example24->proc~export_pnm program~example3 example3 program~example3->proc~export_pnm program~example4 example4 program~example4->proc~export_pnm program~example6 example6 program~example6->proc~export_pnm program~example7 example7 program~example7->proc~export_pnm program~example8 example8 program~example8->proc~export_pnm program~example9 example9 program~example9->proc~export_pnm Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code impure subroutine export_pnm ( this , file_name , encoding ) class ( format_pnm ), intent ( inout ) :: this character ( * ), intent ( in ) :: file_name character ( * ), intent ( in ), optional :: encoding integer :: nunit , i , j logical :: file_exists integer , dimension ( size ( this % pixels , 2 )) :: buffer integer :: iostat if ( present ( encoding )) then call this % set_format ( encoding ) select case ( this % encoding ) case ( 'ascii' , 'plain' ) select case ( this % file_format ) case ( 'pbm' ) this % magic_number = 'P1' case ( 'pgm' ) this % magic_number = 'P2' case ( 'ppm' ) this % magic_number = 'P3' end select case ( 'binary' , 'raw' ) select case ( this % file_format ) case ( 'pbm' ) this % magic_number = 'P4' case ( 'pgm' ) this % magic_number = 'P5' case ( 'ppm' ) this % magic_number = 'P6' end select end select end if select case ( this % magic_number ) case ( 'P1' , 'P2' , 'P3' ) open ( newunit = nunit , file = file_name // '.' // this % file_format , status = 'replace' , iostat = iostat ) if ( iostat /= 0 ) error stop 'Error opening the file.' write ( nunit , '(a)' ) this % magic_number write ( nunit , '(a,a)' ) '# ' , trim ( adjustl ( this % comment )) write ( nunit , '(g0,1x,g0)' ) this % width , this % height if ( this % file_format /= 'pbm' ) write ( nunit , '(g0)' ) this % max_color do i = 1 , size ( this % pixels , 1 ) buffer = this % pixels ( i ,:) write ( nunit , '(*(I3,1x))' ) buffer end do close ( nunit ) case ( 'P4' , 'P5' , 'P6' ) open ( newunit = nunit , file = file_name // '.' // this % file_format , status = 'replace' , iostat = iostat ) if ( iostat /= 0 ) error stop 'Error opening the file.' write ( nunit , '(a)' ) this % magic_number write ( nunit , '(a,a)' ) '# ' , trim ( adjustl ( this % comment )) write ( nunit , '(g0,1x,g0)' ) this % width , this % height if ( this % file_format /= 'pbm' ) write ( nunit , '(g0)' ) this % max_color do i = 1 , size ( this % pixels , 1 ) buffer = this % pixels ( i ,:) write ( nunit , '(*(a))' , advance = 'no' ) achar ( buffer ) end do close ( nunit ) end select end subroutine export_pnm","tags":"","loc":"proc/export_pnm.html"},{"title":"get_num_colors – ForImage","text":"private pure elemental function get_num_colors(this) result(num_colors) Type Bound format_lut Arguments Type Intent Optional Attributes Name class( format_lut ), intent(in) :: this Return Value integer Called by proc~~get_num_colors~~CalledByGraph proc~get_num_colors lut::format_lut%get_num_colors proc~export lut::format_lut%export proc~export->proc~get_num_colors program~example15 example15 program~example15->proc~export program~example16 example16 program~example16->proc~export Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code pure elemental function get_num_colors ( this ) result ( num_colors ) class ( format_lut ), intent ( in ) :: this integer :: num_colors num_colors = this % num_colors end function get_num_colors","tags":"","loc":"proc/get_num_colors.html"},{"title":"get_dim_colors – ForImage","text":"private pure elemental function get_dim_colors(this) result(dim_colors) Type Bound format_lut Arguments Type Intent Optional Attributes Name class( format_lut ), intent(in) :: this Return Value integer Source Code pure elemental function get_dim_colors ( this ) result ( dim_colors ) class ( format_lut ), intent ( in ) :: this integer :: dim_colors dim_colors = this % dim_colors end function get_dim_colors","tags":"","loc":"proc/get_dim_colors.html"},{"title":"get_colors – ForImage","text":"private pure function get_colors(this) result(colors) Type Bound format_lut Arguments Type Intent Optional Attributes Name class( format_lut ), intent(in) :: this Return Value integer, dimension(:,:), allocatable Source Code pure function get_colors ( this ) result ( colors ) class ( format_lut ), intent ( in ) :: this integer , dimension (:,:), allocatable :: colors colors = this % colors end function get_colors","tags":"","loc":"proc/get_colors.html"},{"title":"allocate_colors – ForImage","text":"private pure elemental subroutine allocate_colors(this) Type Bound format_lut Arguments Type Intent Optional Attributes Name class( format_lut ), intent(inout) :: this Called by proc~~allocate_colors~~CalledByGraph proc~allocate_colors lut::format_lut%allocate_colors proc~import lut::format_lut%import proc~import->proc~allocate_colors proc~set lut::format_lut%set proc~set->proc~allocate_colors program~example15 example15 program~example15->proc~set Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code pure elemental subroutine allocate_colors ( this ) class ( format_lut ), intent ( inout ) :: this if ( allocated ( this % colors )) deallocate ( this % colors ) allocate ( this % colors ( this % num_colors , this % dim_colors )) end subroutine allocate_colors","tags":"","loc":"proc/allocate_colors.html"},{"title":"set – ForImage","text":"private pure subroutine set(this, num_colors, dim_colors, colors) Type Bound format_lut Arguments Type Intent Optional Attributes Name class( format_lut ), intent(inout) :: this integer, intent(in) :: num_colors integer, intent(in) :: dim_colors integer, intent(in), dimension(:,:) :: colors Calls proc~~set~~CallsGraph proc~set lut::format_lut%set proc~allocate_colors lut::format_lut%allocate_colors proc~set->proc~allocate_colors Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~set~~CalledByGraph proc~set lut::format_lut%set program~example15 example15 program~example15->proc~set Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code pure subroutine set ( this , num_colors , dim_colors , colors ) class ( format_lut ), intent ( inout ) :: this integer , intent ( in ) :: num_colors , dim_colors integer , dimension (:,:), intent ( in ) :: colors this % num_colors = num_colors this % dim_colors = dim_colors call this % allocate_colors () this % colors = colors end subroutine set","tags":"","loc":"proc/set.html"},{"title":"set_num_colors – ForImage","text":"private pure elemental subroutine set_num_colors(this, num_colors) Type Bound format_lut Arguments Type Intent Optional Attributes Name class( format_lut ), intent(inout) :: this integer, intent(in) :: num_colors Called by proc~~set_num_colors~~CalledByGraph proc~set_num_colors lut::format_lut%set_num_colors proc~import lut::format_lut%import proc~import->proc~set_num_colors Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code pure elemental subroutine set_num_colors ( this , num_colors ) class ( format_lut ), intent ( inout ) :: this integer , intent ( in ) :: num_colors this % num_colors = num_colors end subroutine set_num_colors","tags":"","loc":"proc/set_num_colors.html"},{"title":"set_dim_colors – ForImage","text":"private pure elemental subroutine set_dim_colors(this, dim_colors) Type Bound format_lut Arguments Type Intent Optional Attributes Name class( format_lut ), intent(inout) :: this integer, intent(in) :: dim_colors Called by proc~~set_dim_colors~~CalledByGraph proc~set_dim_colors lut::format_lut%set_dim_colors proc~import lut::format_lut%import proc~import->proc~set_dim_colors Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code pure elemental subroutine set_dim_colors ( this , dim_colors ) class ( format_lut ), intent ( inout ) :: this integer , intent ( in ) :: dim_colors this % dim_colors = dim_colors end subroutine set_dim_colors","tags":"","loc":"proc/set_dim_colors.html"},{"title":"set_colors – ForImage","text":"private pure subroutine set_colors(this, colors) Type Bound format_lut Arguments Type Intent Optional Attributes Name class( format_lut ), intent(inout) :: this integer, intent(in), dimension(:,:) :: colors Source Code pure subroutine set_colors ( this , colors ) class ( format_lut ), intent ( inout ) :: this integer , dimension (:,:), intent ( in ) :: colors this % colors = colors end subroutine set_colors","tags":"","loc":"proc/set_colors.html"},{"title":"deallocate_lut – ForImage","text":"private pure elemental subroutine deallocate_lut(this) Type Bound format_lut Arguments Type Intent Optional Attributes Name class( format_lut ), intent(inout) :: this Called by proc~~deallocate_lut~~CalledByGraph proc~deallocate_lut lut::format_lut%deallocate_lut program~example15 example15 program~example15->proc~deallocate_lut program~example16 example16 program~example16->proc~deallocate_lut Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code pure elemental subroutine deallocate_lut ( this ) class ( format_lut ), intent ( inout ) :: this if ( allocated ( this % colors )) deallocate ( this % colors ) end subroutine deallocate_lut","tags":"","loc":"proc/deallocate_lut.html"},{"title":"import – ForImage","text":"private impure subroutine import(this, file_name, dim_colors) Type Bound format_lut Arguments Type Intent Optional Attributes Name class( format_lut ), intent(inout) :: this character(len=*), intent(in) :: file_name integer, intent(in) :: dim_colors Calls proc~~import~~CallsGraph proc~import lut::format_lut%import proc~allocate_colors lut::format_lut%allocate_colors proc~import->proc~allocate_colors proc~set_dim_colors lut::format_lut%set_dim_colors proc~import->proc~set_dim_colors proc~set_num_colors lut::format_lut%set_num_colors proc~import->proc~set_num_colors Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code impure subroutine import ( this , file_name , dim_colors ) class ( format_lut ), intent ( inout ) :: this character ( * ), intent ( in ) :: file_name integer , intent ( in ) :: dim_colors integer , dimension ( 1 , dim_colors ) :: temp integer :: nunit , iostat , num_rows , i logical :: file_exists integer , dimension ( dim_colors ) :: buffer inquire ( file = file_name // '.lut' , exist = file_exists ) if ( file_exists ) then open ( newunit = nunit , file = file_name // '.lut' , status = 'old' , action = 'read' , iostat = iostat ) if ( iostat /= 0 ) error stop 'Error opening the file.' num_rows = 0 do read ( nunit , * , iostat = iostat ) temp (:,:) if ( iostat /= 0 ) exit num_rows = num_rows + 1 end do call this % set_num_colors ( num_rows ) call this % set_dim_colors ( dim_colors ) call this % allocate_colors () rewind ( nunit ) do i = 1 , num_rows read ( nunit , * ) buffer this % colors ( i ,:) = buffer end do close ( nunit ) else error stop 'File ' // file_name // '.lut' // ' does not exist!' end if end subroutine import","tags":"","loc":"proc/import.html"},{"title":"export – ForImage","text":"private impure subroutine export(this, file_name) Type Bound format_lut Arguments Type Intent Optional Attributes Name class( format_lut ), intent(inout) :: this character(len=*), intent(in) :: file_name Calls proc~~export~~CallsGraph proc~export lut::format_lut%export proc~get_num_colors lut::format_lut%get_num_colors proc~export->proc~get_num_colors Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~export~~CalledByGraph proc~export lut::format_lut%export program~example15 example15 program~example15->proc~export program~example16 example16 program~example16->proc~export Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code impure subroutine export ( this , file_name ) class ( format_lut ), intent ( inout ) :: this character ( * ), intent ( in ) :: file_name integer :: nunit , i integer , dimension ( this % dim_colors ) :: buffer integer :: iostat open ( newunit = nunit , file = file_name // '.lut' , status = 'replace' , action = 'write' , iostat = iostat ) if ( iostat /= 0 ) error stop 'Error opening the file.' do i = 1 , this % get_num_colors () buffer = this % colors ( i ,:) write ( nunit , '(*(I3,1x))' ) buffer end do close ( nunit ) end subroutine export","tags":"","loc":"proc/export.html"},{"title":"pnm – ForImage","text":"Uses iso_fortran_env module~~pnm~~UsesGraph module~pnm pnm iso_fortran_env iso_fortran_env module~pnm->iso_fortran_env Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Used by module~~pnm~~UsedByGraph module~pnm pnm module~forimage forimage module~forimage->module~pnm program~example example program~example->module~forimage program~example1 example1 program~example1->module~forimage program~example10 example10 program~example10->module~forimage program~example11 example11 program~example11->module~forimage program~example12 example12 program~example12->module~forimage program~example13 example13 program~example13->module~forimage program~example14 example14 program~example14->module~forimage program~example15 example15 program~example15->module~forimage program~example16 example16 program~example16->module~forimage program~example17 example17 program~example17->module~forimage program~example18 example18 program~example18->module~forimage program~example19 example19 program~example19->module~forimage program~example2 example2 program~example2->module~forimage program~example20 example20 program~example20->module~forimage program~example21 example21 program~example21->module~forimage program~example22 example22 program~example22->module~forimage program~example23 example23 program~example23->module~forimage program~example24 example24 program~example24->module~forimage program~example3 example3 program~example3->module~forimage program~example4 example4 program~example4->module~forimage program~example6 example6 program~example6->module~forimage program~example7 example7 program~example7->module~forimage program~example8 example8 program~example8->module~forimage program~example9 example9 program~example9->module~forimage Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Derived Types type, public :: format_pnm Components Type Visibility Attributes Name Initial character(len=2), public :: magic_number integer, public :: width integer, public :: height character(len=70), public :: comment integer, public :: max_color integer, public, dimension(:,:), allocatable :: pixels character(len=3), public :: file_format character(len=6), public :: encoding Type-Bound Procedures procedure, public :: set_format procedure, public :: set_file_format procedure, public :: set_magicnumber procedure, public :: set_width procedure, public :: set_height procedure, public :: set_comment procedure, public :: set_max_color procedure, public :: set_header procedure, public :: allocate_pixels procedure, public :: set_pixels procedure, public :: export_pnm procedure, public :: set_pnm procedure, public :: import_pnm procedure, public :: finalize => deallocate_pnm procedure, public :: negative procedure, public :: brighten procedure, public :: swap_channels procedure, public :: remove_channels procedure, public :: greyscale procedure, public :: rotate procedure, public :: flip_horizontal procedure, public :: flip_vertical procedure, public :: crop Subroutines private pure elemental subroutine crop (this, start_row, end_row, start_col, end_col) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this integer, intent(in) :: start_row integer, intent(in) :: end_row integer, intent(in) :: start_col integer, intent(in) :: end_col private pure elemental subroutine flip_vertical (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this private pure elemental subroutine flip_horizontal (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this private pure elemental subroutine rotate (this, angle) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this integer, intent(in) :: angle private pure elemental subroutine greyscale (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this private pure elemental subroutine remove_channels (this, remove_r, remove_g, remove_b) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this logical, intent(in), optional :: remove_r logical, intent(in), optional :: remove_g logical, intent(in), optional :: remove_b private pure elemental subroutine swap_channels (this, swap) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: swap private pure elemental subroutine brighten (this, factor) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this integer, intent(in) :: factor private pure elemental subroutine negative (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this private pure elemental subroutine set_file_format (this, file_format) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=3), intent(in) :: file_format private pure elemental subroutine set_format (this, encoding) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: encoding private pure elemental subroutine deallocate_pnm (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this private impure subroutine import_pnm (this, file_name, file_format, encoding) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: file_name character(len=3), intent(in) :: file_format character(len=*), intent(in) :: encoding private pure subroutine set_pnm (this, encoding, file_format, width, height, max_color, comment, pixels) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: encoding character(len=3), intent(in) :: file_format integer, intent(in) :: width integer, intent(in) :: height integer, intent(in), optional :: max_color character(len=*), intent(in) :: comment integer, intent(in), dimension(:,:) :: pixels private pure elemental subroutine allocate_pixels (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this private pure elemental subroutine set_magicnumber (this, magic_number) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: magic_number private pure elemental subroutine set_width (this, width) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this integer, intent(in) :: width private pure elemental subroutine set_height (this, height) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this integer, intent(in) :: height private pure elemental subroutine set_comment (this, comment) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: comment private pure elemental subroutine set_max_color (this, max_color) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this integer, intent(in) :: max_color private pure elemental subroutine set_header (this, magic_number, width, height, comment, max_color) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: magic_number integer, intent(in) :: width integer, intent(in) :: height character(len=*), intent(in) :: comment integer, intent(in), optional :: max_color private pure subroutine set_pixels (this, pixels) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this integer, intent(in), dimension(:,:) :: pixels private pure elemental subroutine set_pixel (this, grey, r, g, b, i, j) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this integer, intent(in), optional :: grey integer, intent(in), optional :: r integer, intent(in), optional :: g integer, intent(in), optional :: b integer, intent(in) :: i integer, intent(in) :: j private impure subroutine export_pnm (this, file_name, encoding) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: file_name character(len=*), intent(in), optional :: encoding","tags":"","loc":"module/pnm.html"},{"title":"forimage – ForImage","text":"Uses lut pnm module~~forimage~~UsesGraph module~forimage forimage module~lut lut module~forimage->module~lut module~pnm pnm module~forimage->module~pnm iso_fortran_env iso_fortran_env module~pnm->iso_fortran_env Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Used by module~~forimage~~UsedByGraph module~forimage forimage program~example example program~example->module~forimage program~example1 example1 program~example1->module~forimage program~example10 example10 program~example10->module~forimage program~example11 example11 program~example11->module~forimage program~example12 example12 program~example12->module~forimage program~example13 example13 program~example13->module~forimage program~example14 example14 program~example14->module~forimage program~example15 example15 program~example15->module~forimage program~example16 example16 program~example16->module~forimage program~example17 example17 program~example17->module~forimage program~example18 example18 program~example18->module~forimage program~example19 example19 program~example19->module~forimage program~example2 example2 program~example2->module~forimage program~example20 example20 program~example20->module~forimage program~example21 example21 program~example21->module~forimage program~example22 example22 program~example22->module~forimage program~example23 example23 program~example23->module~forimage program~example24 example24 program~example24->module~forimage program~example3 example3 program~example3->module~forimage program~example4 example4 program~example4->module~forimage program~example6 example6 program~example6->module~forimage program~example7 example7 program~example7->module~forimage program~example8 example8 program~example8->module~forimage program~example9 example9 program~example9->module~forimage Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs.","tags":"","loc":"module/forimage.html"},{"title":"lut – ForImage","text":"Used by module~~lut~~UsedByGraph module~lut lut module~forimage forimage module~forimage->module~lut program~example example program~example->module~forimage program~example1 example1 program~example1->module~forimage program~example10 example10 program~example10->module~forimage program~example11 example11 program~example11->module~forimage program~example12 example12 program~example12->module~forimage program~example13 example13 program~example13->module~forimage program~example14 example14 program~example14->module~forimage program~example15 example15 program~example15->module~forimage program~example16 example16 program~example16->module~forimage program~example17 example17 program~example17->module~forimage program~example18 example18 program~example18->module~forimage program~example19 example19 program~example19->module~forimage program~example2 example2 program~example2->module~forimage program~example20 example20 program~example20->module~forimage program~example21 example21 program~example21->module~forimage program~example22 example22 program~example22->module~forimage program~example23 example23 program~example23->module~forimage program~example24 example24 program~example24->module~forimage program~example3 example3 program~example3->module~forimage program~example4 example4 program~example4->module~forimage program~example6 example6 program~example6->module~forimage program~example7 example7 program~example7->module~forimage program~example8 example8 program~example8->module~forimage program~example9 example9 program~example9->module~forimage Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Derived Types type, public :: format_lut Components Type Visibility Attributes Name Initial integer, public :: num_colors integer, public :: dim_colors integer, public, dimension(:,:), allocatable :: colors Type-Bound Procedures procedure, public :: allocate_colors procedure, public :: set procedure, public :: set_num_colors procedure, public :: get_num_colors procedure, public :: set_dim_colors procedure, public :: get_dim_colors procedure, public :: set_colors procedure, public :: get_colors procedure, public :: export procedure, public :: import procedure, public :: finalize => deallocate_lut Functions private pure elemental function get_num_colors (this) result(num_colors) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_lut ), intent(in) :: this Return Value integer private pure elemental function get_dim_colors (this) result(dim_colors) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_lut ), intent(in) :: this Return Value integer private pure function get_colors (this) result(colors) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_lut ), intent(in) :: this Return Value integer, dimension(:,:), allocatable Subroutines private pure elemental subroutine allocate_colors (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_lut ), intent(inout) :: this private pure subroutine set (this, num_colors, dim_colors, colors) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_lut ), intent(inout) :: this integer, intent(in) :: num_colors integer, intent(in) :: dim_colors integer, intent(in), dimension(:,:) :: colors private pure elemental subroutine set_num_colors (this, num_colors) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_lut ), intent(inout) :: this integer, intent(in) :: num_colors private pure elemental subroutine set_dim_colors (this, dim_colors) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_lut ), intent(inout) :: this integer, intent(in) :: dim_colors private pure subroutine set_colors (this, colors) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_lut ), intent(inout) :: this integer, intent(in), dimension(:,:) :: colors private pure elemental subroutine deallocate_lut (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_lut ), intent(inout) :: this private impure subroutine import (this, file_name, dim_colors) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_lut ), intent(inout) :: this character(len=*), intent(in) :: file_name integer, intent(in) :: dim_colors private impure subroutine export (this, file_name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_lut ), intent(inout) :: this character(len=*), intent(in) :: file_name","tags":"","loc":"module/lut.html"},{"title":"example4 – ForImage","text":"Uses forimage program~~example4~~UsesGraph program~example4 example4 module~forimage forimage program~example4->module~forimage module~lut lut module~forimage->module~lut module~pnm pnm module~forimage->module~pnm iso_fortran_env iso_fortran_env module~pnm->iso_fortran_env Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Calls program~~example4~~CallsGraph program~example4 example4 proc~deallocate_pnm pnm::format_pnm%deallocate_pnm program~example4->proc~deallocate_pnm proc~export_pnm pnm::format_pnm%export_pnm program~example4->proc~export_pnm proc~set_pnm pnm::format_pnm%set_pnm program~example4->proc~set_pnm proc~set_format pnm::format_pnm%set_format proc~export_pnm->proc~set_format proc~allocate_pixels pnm::format_pnm%allocate_pixels proc~set_pnm->proc~allocate_pixels proc~set_file_format pnm::format_pnm%set_file_format proc~set_pnm->proc~set_file_format proc~set_pnm->proc~set_format proc~set_header pnm::format_pnm%set_header proc~set_pnm->proc~set_header proc~set_pixels pnm::format_pnm%set_pixels proc~set_pnm->proc~set_pixels proc~set_comment pnm::format_pnm%set_comment proc~set_header->proc~set_comment proc~set_height pnm::format_pnm%set_height proc~set_header->proc~set_height proc~set_magicnumber pnm::format_pnm%set_magicnumber proc~set_header->proc~set_magicnumber proc~set_max_color pnm::format_pnm%set_max_color proc~set_header->proc~set_max_color proc~set_width pnm::format_pnm%set_width proc~set_header->proc~set_width Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Variables Type Attributes Name Initial type( format_pnm ) :: ex4 integer, dimension(10,6) :: px Source Code program example4 use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex4 integer , dimension ( 10 , 6 ) :: px px ( 1 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px ( 2 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px ( 3 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px ( 4 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px ( 5 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px ( 6 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px ( 7 ,:) = [ 1 , 0 , 0 , 0 , 1 , 0 ] px ( 8 ,:) = [ 0 , 1 , 1 , 1 , 0 , 0 ] px ( 9 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 ] px ( 10 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 ] call ex4 % set_pnm ( encoding = 'binary' , file_format = 'pbm' , width = 6 , height = 10 , comment = 'example 1' , pixels = px ) call ex4 % export_pnm ( 'pnm_files/img4_binary' ) call ex4 % finalize () end program example4","tags":"","loc":"program/example4.html"},{"title":"example12 – ForImage","text":"Uses forimage program~~example12~~UsesGraph program~example12 example12 module~forimage forimage program~example12->module~forimage module~lut lut module~forimage->module~lut module~pnm pnm module~forimage->module~pnm iso_fortran_env iso_fortran_env module~pnm->iso_fortran_env Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Calls program~~example12~~CallsGraph program~example12 example12 proc~deallocate_pnm pnm::format_pnm%deallocate_pnm program~example12->proc~deallocate_pnm proc~export_pnm pnm::format_pnm%export_pnm program~example12->proc~export_pnm proc~import_pnm pnm::format_pnm%import_pnm program~example12->proc~import_pnm proc~set_format pnm::format_pnm%set_format proc~export_pnm->proc~set_format proc~allocate_pixels pnm::format_pnm%allocate_pixels proc~import_pnm->proc~allocate_pixels proc~set_file_format pnm::format_pnm%set_file_format proc~import_pnm->proc~set_file_format proc~import_pnm->proc~set_format Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Variables Type Attributes Name Initial type( format_pnm ) :: ex12 Source Code program example12 use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex12 call ex12 % import_pnm ( 'pnm_files/img6_binary' , 'ppm' , 'binary' ) call ex12 % export_pnm ( 'pnm_files/img6_binary_ex' ) call ex12 % finalize () end program example12","tags":"","loc":"program/example12.html"},{"title":"example18 – ForImage","text":"Uses forimage program~~example18~~UsesGraph program~example18 example18 module~forimage forimage program~example18->module~forimage module~lut lut module~forimage->module~lut module~pnm pnm module~forimage->module~pnm iso_fortran_env iso_fortran_env module~pnm->iso_fortran_env Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Calls program~~example18~~CallsGraph program~example18 example18 proc~brighten pnm::format_pnm%brighten program~example18->proc~brighten proc~deallocate_pnm pnm::format_pnm%deallocate_pnm program~example18->proc~deallocate_pnm proc~export_pnm pnm::format_pnm%export_pnm program~example18->proc~export_pnm proc~set_pnm pnm::format_pnm%set_pnm program~example18->proc~set_pnm proc~set_format pnm::format_pnm%set_format proc~export_pnm->proc~set_format proc~allocate_pixels pnm::format_pnm%allocate_pixels proc~set_pnm->proc~allocate_pixels proc~set_file_format pnm::format_pnm%set_file_format proc~set_pnm->proc~set_file_format proc~set_pnm->proc~set_format proc~set_header pnm::format_pnm%set_header proc~set_pnm->proc~set_header proc~set_pixels pnm::format_pnm%set_pixels proc~set_pnm->proc~set_pixels proc~set_comment pnm::format_pnm%set_comment proc~set_header->proc~set_comment proc~set_height pnm::format_pnm%set_height proc~set_header->proc~set_height proc~set_magicnumber pnm::format_pnm%set_magicnumber proc~set_header->proc~set_magicnumber proc~set_max_color pnm::format_pnm%set_max_color proc~set_header->proc~set_max_color proc~set_width pnm::format_pnm%set_width proc~set_header->proc~set_width Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Variables Type Attributes Name Initial type( format_pnm ) :: ex18_1 type( format_pnm ) :: ex18_2 type( format_pnm ) :: ex18_3 integer, dimension(10,6) :: px1 integer, dimension(60,60) :: px2 integer, dimension(4,12) :: px3 Source Code program example18 use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex18_1 , ex18_2 , ex18_3 integer , dimension ( 10 , 6 ) :: px1 integer , dimension ( 60 , 60 ) :: px2 integer , dimension ( 4 , 12 ) :: px3 px1 ( 1 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px1 ( 2 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px1 ( 3 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px1 ( 4 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px1 ( 5 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px1 ( 6 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px1 ( 7 ,:) = [ 1 , 0 , 0 , 0 , 1 , 0 ] px1 ( 8 ,:) = [ 0 , 1 , 1 , 1 , 0 , 0 ] px1 ( 9 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 ] px1 ( 10 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 ] call ex18_1 % set_pnm ( encoding = 'binary' , file_format = 'pbm' , width = 6 , height = 10 , comment = 'example 1' , pixels = px1 ) call ex18_1 % brighten ( - 7 ) call ex18_1 % export_pnm ( 'pnm_files/img4_binary_brighten' ) call ex18_1 % finalize () px2 = transpose ( reshapeshape = shape ( px2 ))) call ex18_2 % set_pnm ( encoding = 'binary' , file_format = 'pgm' , width = 60 , height = 60 , max_color = 255 , comment = 'example 2' , pixels = px2 ) call ex18_2 % brighten ( + 200 ) call ex18_2 % export_pnm ( 'pnm_files/img5_binary_brighten' ) call ex18_2 % finalize () px3 ( 1 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 15 , 0 , 15 ] px3 ( 2 ,:) = [ 0 , 0 , 0 , 0 , 15 , 7 , 0 , 0 , 0 , 0 , 0 , 0 ] px3 ( 3 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 15 , 7 , 0 , 0 , 0 ] px3 ( 4 ,:) = [ 15 , 0 , 15 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ] call ex18_3 % set_pnm ( encoding = 'binary' , file_format = 'ppm' , width = 4 , height = 4 , max_color = 15 , comment = 'example 2' , pixels = px3 ) call ex18_3 % brighten ( - 7 ) call ex18_3 % export_pnm ( 'pnm_files/img6_binary_brighten' ) call ex18_3 % finalize () end program example18","tags":"","loc":"program/example18.html"},{"title":"example24 – ForImage","text":"Uses forimage program~~example24~~UsesGraph program~example24 example24 module~forimage forimage program~example24->module~forimage module~lut lut module~forimage->module~lut module~pnm pnm module~forimage->module~pnm iso_fortran_env iso_fortran_env module~pnm->iso_fortran_env Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Calls program~~example24~~CallsGraph program~example24 example24 proc~crop pnm::format_pnm%crop program~example24->proc~crop proc~deallocate_pnm pnm::format_pnm%deallocate_pnm program~example24->proc~deallocate_pnm proc~export_pnm pnm::format_pnm%export_pnm program~example24->proc~export_pnm proc~set_pnm pnm::format_pnm%set_pnm program~example24->proc~set_pnm proc~allocate_pixels pnm::format_pnm%allocate_pixels proc~crop->proc~allocate_pixels proc~set_format pnm::format_pnm%set_format proc~export_pnm->proc~set_format proc~set_pnm->proc~allocate_pixels proc~set_file_format pnm::format_pnm%set_file_format proc~set_pnm->proc~set_file_format proc~set_pnm->proc~set_format proc~set_header pnm::format_pnm%set_header proc~set_pnm->proc~set_header proc~set_pixels pnm::format_pnm%set_pixels proc~set_pnm->proc~set_pixels proc~set_comment pnm::format_pnm%set_comment proc~set_header->proc~set_comment proc~set_height pnm::format_pnm%set_height proc~set_header->proc~set_height proc~set_magicnumber pnm::format_pnm%set_magicnumber proc~set_header->proc~set_magicnumber proc~set_max_color pnm::format_pnm%set_max_color proc~set_header->proc~set_max_color proc~set_width pnm::format_pnm%set_width proc~set_header->proc~set_width Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Variables Type Attributes Name Initial type( format_pnm ) :: ex24_1 type( format_pnm ) :: ex24_2 type( format_pnm ) :: ex24_3 integer, dimension(10,6) :: px1 integer, dimension(60,60) :: px2 integer, dimension(4,12) :: px3 Source Code program example24 use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex24_1 , ex24_2 , ex24_3 integer , dimension ( 10 , 6 ) :: px1 integer , dimension ( 60 , 60 ) :: px2 integer , dimension ( 4 , 12 ) :: px3 px1 ( 1 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px1 ( 2 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px1 ( 3 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px1 ( 4 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px1 ( 5 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px1 ( 6 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px1 ( 7 ,:) = [ 1 , 0 , 0 , 0 , 1 , 0 ] px1 ( 8 ,:) = [ 0 , 1 , 1 , 1 , 0 , 0 ] px1 ( 9 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 ] px1 ( 10 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 ] call ex24_1 % set_pnm ( encoding = 'binary' , file_format = 'pbm' , width = 6 , height = 10 , comment = 'example 1' , pixels = px1 ) call ex24_1 % crop ( 2 , 10 , 3 , 6 ) call ex24_1 % export_pnm ( 'pnm_files/img1_binary_crop' ) call ex24_1 % finalize () px2 = transpose ( reshapeshape = shape ( px2 ))) call ex24_2 % set_pnm ( encoding = 'binary' , file_format = 'pgm' , width = 60 , height = 60 , max_color = 255 , comment = 'example 2' , pixels = px2 ) call ex24_2 % crop ( 2 , 50 , 3 , 55 ) call ex24_2 % export_pnm ( 'pnm_files/img2_binary_crop' ) call ex24_2 % finalize () px3 ( 1 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 15 , 0 , 15 ] px3 ( 2 ,:) = [ 0 , 0 , 0 , 0 , 15 , 7 , 0 , 0 , 0 , 0 , 0 , 0 ] px3 ( 3 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 15 , 7 , 0 , 0 , 0 ] px3 ( 4 ,:) = [ 15 , 0 , 15 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ] call ex24_3 % set_pnm ( encoding = 'binary' , file_format = 'ppm' , width = 4 , height = 4 , max_color = 15 , comment = 'example 2' , pixels = px3 ) call ex24_3 % crop ( 1 , 3 , 2 , 4 ) call ex24_3 % export_pnm ( 'pnm_files/img6_binary_crop' ) call ex24_3 % finalize () end program example24","tags":"","loc":"program/example24.html"},{"title":"example9 – ForImage","text":"Uses forimage program~~example9~~UsesGraph program~example9 example9 module~forimage forimage program~example9->module~forimage module~lut lut module~forimage->module~lut module~pnm pnm module~forimage->module~pnm iso_fortran_env iso_fortran_env module~pnm->iso_fortran_env Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Calls program~~example9~~CallsGraph program~example9 example9 proc~deallocate_pnm pnm::format_pnm%deallocate_pnm program~example9->proc~deallocate_pnm proc~export_pnm pnm::format_pnm%export_pnm program~example9->proc~export_pnm proc~import_pnm pnm::format_pnm%import_pnm program~example9->proc~import_pnm proc~set_format pnm::format_pnm%set_format proc~export_pnm->proc~set_format proc~allocate_pixels pnm::format_pnm%allocate_pixels proc~import_pnm->proc~allocate_pixels proc~set_file_format pnm::format_pnm%set_file_format proc~import_pnm->proc~set_file_format proc~import_pnm->proc~set_format Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Variables Type Attributes Name Initial type( format_pnm ) :: ex9 Source Code program example9 use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex9 call ex9 % import_pnm ( 'pnm_files/img3_ascii' , 'ppm' , 'ascii' ) call ex9 % export_pnm ( 'pnm_files/img3_ascii_ex' ) call ex9 % finalize () end program example9","tags":"","loc":"program/example9.html"},{"title":"example14 – ForImage","text":"Uses forimage program~~example14~~UsesGraph program~example14 example14 module~forimage forimage program~example14->module~forimage module~lut lut module~forimage->module~lut module~pnm pnm module~forimage->module~pnm iso_fortran_env iso_fortran_env module~pnm->iso_fortran_env Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Calls program~~example14~~CallsGraph program~example14 example14 proc~deallocate_pnm pnm::format_pnm%deallocate_pnm program~example14->proc~deallocate_pnm proc~export_pnm pnm::format_pnm%export_pnm program~example14->proc~export_pnm proc~import_pnm pnm::format_pnm%import_pnm program~example14->proc~import_pnm proc~set_format pnm::format_pnm%set_format proc~export_pnm->proc~set_format proc~allocate_pixels pnm::format_pnm%allocate_pixels proc~import_pnm->proc~allocate_pixels proc~set_file_format pnm::format_pnm%set_file_format proc~import_pnm->proc~set_file_format proc~import_pnm->proc~set_format Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Variables Type Attributes Name Initial type( format_pnm ) :: ex14 Source Code program example14 use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex14 call ex14 % import_pnm ( 'pnm_files/img3_ascii' , 'ppm' , 'ascii' ) call ex14 % export_pnm ( 'pnm_files/img6_ascii_to_binary_ex' , 'binary' ) call ex14 % finalize () end program example14","tags":"","loc":"program/example14.html"},{"title":"example10 – ForImage","text":"Uses forimage program~~example10~~UsesGraph program~example10 example10 module~forimage forimage program~example10->module~forimage module~lut lut module~forimage->module~lut module~pnm pnm module~forimage->module~pnm iso_fortran_env iso_fortran_env module~pnm->iso_fortran_env Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Calls program~~example10~~CallsGraph program~example10 example10 proc~deallocate_pnm pnm::format_pnm%deallocate_pnm program~example10->proc~deallocate_pnm proc~export_pnm pnm::format_pnm%export_pnm program~example10->proc~export_pnm proc~import_pnm pnm::format_pnm%import_pnm program~example10->proc~import_pnm proc~set_format pnm::format_pnm%set_format proc~export_pnm->proc~set_format proc~allocate_pixels pnm::format_pnm%allocate_pixels proc~import_pnm->proc~allocate_pixels proc~set_file_format pnm::format_pnm%set_file_format proc~import_pnm->proc~set_file_format proc~import_pnm->proc~set_format Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Variables Type Attributes Name Initial type( format_pnm ) :: ex10 Source Code program example10 use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex10 call ex10 % import_pnm ( 'pnm_files/img4_binary' , 'pbm' , 'binary' ) call ex10 % export_pnm ( 'pnm_files/img4_binary_ex' ) call ex10 % finalize () end program example10","tags":"","loc":"program/example10.html"},{"title":"example15 – ForImage","text":"Uses forimage program~~example15~~UsesGraph program~example15 example15 module~forimage forimage program~example15->module~forimage module~lut lut module~forimage->module~lut module~pnm pnm module~forimage->module~pnm iso_fortran_env iso_fortran_env module~pnm->iso_fortran_env Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Calls program~~example15~~CallsGraph program~example15 example15 proc~deallocate_lut lut::format_lut%deallocate_lut program~example15->proc~deallocate_lut proc~export lut::format_lut%export program~example15->proc~export proc~set lut::format_lut%set program~example15->proc~set proc~get_num_colors lut::format_lut%get_num_colors proc~export->proc~get_num_colors proc~allocate_colors lut::format_lut%allocate_colors proc~set->proc~allocate_colors Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Variables Type Attributes Name Initial type( format_lut ) :: ex15 integer, dimension(1:8, 3) :: colors = reshape([0, 0, 0, 255, 0, 0, 0, 255, 0, 0, 0, 255, 255, 255, 0, 0, 255, 255, 255, 0, 255, 255, 255, 255], shape(colors), order=[2, 1]) Source Code program example15 use forimage , only : format_lut implicit none type ( format_lut ) :: ex15 integer , dimension ( 1 : 8 , 3 ) :: colors = reshape ( [ & 0 , 0 , 0 , & 255 , 0 , 0 , & 0 , 255 , 0 , & 0 , 0 , 255 , & 255 , 255 , 0 , & 0 , 255 , 255 , & 255 , 0 , 255 , & 255 , 255 , 255 ], & shape ( colors ), order = [ 2 , 1 ] ) call ex15 % set ( num_colors = 8 , dim_colors = 3 , colors = colors ) call ex15 % export ( 'lut_files/example15' ) call ex15 % finalize () end program example15","tags":"","loc":"program/example15.html"},{"title":"example2 – ForImage","text":"Uses forimage program~~example2~~UsesGraph program~example2 example2 module~forimage forimage program~example2->module~forimage module~lut lut module~forimage->module~lut module~pnm pnm module~forimage->module~pnm iso_fortran_env iso_fortran_env module~pnm->iso_fortran_env Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Calls program~~example2~~CallsGraph program~example2 example2 proc~deallocate_pnm pnm::format_pnm%deallocate_pnm program~example2->proc~deallocate_pnm proc~export_pnm pnm::format_pnm%export_pnm program~example2->proc~export_pnm proc~set_pnm pnm::format_pnm%set_pnm program~example2->proc~set_pnm proc~set_format pnm::format_pnm%set_format proc~export_pnm->proc~set_format proc~allocate_pixels pnm::format_pnm%allocate_pixels proc~set_pnm->proc~allocate_pixels proc~set_file_format pnm::format_pnm%set_file_format proc~set_pnm->proc~set_file_format proc~set_pnm->proc~set_format proc~set_header pnm::format_pnm%set_header proc~set_pnm->proc~set_header proc~set_pixels pnm::format_pnm%set_pixels proc~set_pnm->proc~set_pixels proc~set_comment pnm::format_pnm%set_comment proc~set_header->proc~set_comment proc~set_height pnm::format_pnm%set_height proc~set_header->proc~set_height proc~set_magicnumber pnm::format_pnm%set_magicnumber proc~set_header->proc~set_magicnumber proc~set_max_color pnm::format_pnm%set_max_color proc~set_header->proc~set_max_color proc~set_width pnm::format_pnm%set_width proc~set_header->proc~set_width Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Variables Type Attributes Name Initial type( format_pnm ) :: ex2 integer, dimension(60,60) :: px Source Code program example2 use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex2 integer , dimension ( 60 , 60 ) :: px px = transpose ( reshapeshape = shape ( px ))) call ex2 % set_pnm ( encoding = 'ascii' , file_format = 'pgm' , width = 60 , height = 60 , max_color = 255 , comment = 'example 2' , pixels = px ) call ex2 % export_pnm ( 'pnm_files/img2_ascii' ) call ex2 % finalize () end program example2","tags":"","loc":"program/example2.html"},{"title":"example20 – ForImage","text":"Uses forimage program~~example20~~UsesGraph program~example20 example20 module~forimage forimage program~example20->module~forimage module~lut lut module~forimage->module~lut module~pnm pnm module~forimage->module~pnm iso_fortran_env iso_fortran_env module~pnm->iso_fortran_env Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Calls program~~example20~~CallsGraph program~example20 example20 proc~deallocate_pnm pnm::format_pnm%deallocate_pnm program~example20->proc~deallocate_pnm proc~export_pnm pnm::format_pnm%export_pnm program~example20->proc~export_pnm proc~remove_channels pnm::format_pnm%remove_channels program~example20->proc~remove_channels proc~set_pnm pnm::format_pnm%set_pnm program~example20->proc~set_pnm proc~set_format pnm::format_pnm%set_format proc~export_pnm->proc~set_format proc~allocate_pixels pnm::format_pnm%allocate_pixels proc~set_pnm->proc~allocate_pixels proc~set_file_format pnm::format_pnm%set_file_format proc~set_pnm->proc~set_file_format proc~set_pnm->proc~set_format proc~set_header pnm::format_pnm%set_header proc~set_pnm->proc~set_header proc~set_pixels pnm::format_pnm%set_pixels proc~set_pnm->proc~set_pixels proc~set_comment pnm::format_pnm%set_comment proc~set_header->proc~set_comment proc~set_height pnm::format_pnm%set_height proc~set_header->proc~set_height proc~set_magicnumber pnm::format_pnm%set_magicnumber proc~set_header->proc~set_magicnumber proc~set_max_color pnm::format_pnm%set_max_color proc~set_header->proc~set_max_color proc~set_width pnm::format_pnm%set_width proc~set_header->proc~set_width Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Variables Type Attributes Name Initial type( format_pnm ) :: ex20 integer, dimension(4,12) :: px Source Code program example20 use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex20 integer , dimension ( 4 , 12 ) :: px px ( 1 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 15 , 0 , 15 ] px ( 2 ,:) = [ 0 , 0 , 0 , 0 , 15 , 7 , 0 , 0 , 0 , 0 , 0 , 0 ] px ( 3 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 15 , 7 , 0 , 0 , 0 ] px ( 4 ,:) = [ 15 , 0 , 15 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ] call ex20 % set_pnm ( encoding = 'binary' , file_format = 'ppm' , width = 4 , height = 4 , max_color = 15 , comment = 'example 2' , pixels = px ) call ex20 % remove_channels ( remove_r = . true ., remove_b = . true .) call ex20 % export_pnm ( 'pnm_files/img6_binary_remove' ) call ex20 % finalize () end program example20","tags":"","loc":"program/example20.html"},{"title":"example7 – ForImage","text":"Uses forimage program~~example7~~UsesGraph program~example7 example7 module~forimage forimage program~example7->module~forimage module~lut lut module~forimage->module~lut module~pnm pnm module~forimage->module~pnm iso_fortran_env iso_fortran_env module~pnm->iso_fortran_env Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Calls program~~example7~~CallsGraph program~example7 example7 proc~deallocate_pnm pnm::format_pnm%deallocate_pnm program~example7->proc~deallocate_pnm proc~export_pnm pnm::format_pnm%export_pnm program~example7->proc~export_pnm proc~import_pnm pnm::format_pnm%import_pnm program~example7->proc~import_pnm proc~set_format pnm::format_pnm%set_format proc~export_pnm->proc~set_format proc~allocate_pixels pnm::format_pnm%allocate_pixels proc~import_pnm->proc~allocate_pixels proc~set_file_format pnm::format_pnm%set_file_format proc~import_pnm->proc~set_file_format proc~import_pnm->proc~set_format Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Variables Type Attributes Name Initial type( format_pnm ) :: ex7 Source Code program example7 use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex7 call ex7 % import_pnm ( 'pnm_files/img1_ascii' , 'pbm' , 'ascii' ) call ex7 % export_pnm ( 'pnm_files/img1_ascii_ex' ) call ex7 % finalize () end program example7","tags":"","loc":"program/example7.html"},{"title":"example1 – ForImage","text":"Uses forimage program~~example1~~UsesGraph program~example1 example1 module~forimage forimage program~example1->module~forimage module~lut lut module~forimage->module~lut module~pnm pnm module~forimage->module~pnm iso_fortran_env iso_fortran_env module~pnm->iso_fortran_env Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Calls program~~example1~~CallsGraph program~example1 example1 proc~deallocate_pnm pnm::format_pnm%deallocate_pnm program~example1->proc~deallocate_pnm proc~export_pnm pnm::format_pnm%export_pnm program~example1->proc~export_pnm proc~set_pnm pnm::format_pnm%set_pnm program~example1->proc~set_pnm proc~set_format pnm::format_pnm%set_format proc~export_pnm->proc~set_format proc~allocate_pixels pnm::format_pnm%allocate_pixels proc~set_pnm->proc~allocate_pixels proc~set_file_format pnm::format_pnm%set_file_format proc~set_pnm->proc~set_file_format proc~set_pnm->proc~set_format proc~set_header pnm::format_pnm%set_header proc~set_pnm->proc~set_header proc~set_pixels pnm::format_pnm%set_pixels proc~set_pnm->proc~set_pixels proc~set_comment pnm::format_pnm%set_comment proc~set_header->proc~set_comment proc~set_height pnm::format_pnm%set_height proc~set_header->proc~set_height proc~set_magicnumber pnm::format_pnm%set_magicnumber proc~set_header->proc~set_magicnumber proc~set_max_color pnm::format_pnm%set_max_color proc~set_header->proc~set_max_color proc~set_width pnm::format_pnm%set_width proc~set_header->proc~set_width Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Variables Type Attributes Name Initial type( format_pnm ) :: ex1 integer, dimension(10,6) :: px Source Code program example1 use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex1 integer , dimension ( 10 , 6 ) :: px px ( 1 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px ( 2 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px ( 3 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px ( 4 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px ( 5 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px ( 6 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px ( 7 ,:) = [ 1 , 0 , 0 , 0 , 1 , 0 ] px ( 8 ,:) = [ 0 , 1 , 1 , 1 , 0 , 0 ] px ( 9 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 ] px ( 10 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 ] call ex1 % set_pnm ( encoding = 'ascii' , file_format = 'pbm' , width = 6 , height = 10 , comment = 'example 1' , pixels = px ) call ex1 % export_pnm ( 'pnm_files/img1_ascii' ) call ex1 % finalize () end program example1","tags":"","loc":"program/example1.html"},{"title":"example23 – ForImage","text":"Uses forimage program~~example23~~UsesGraph program~example23 example23 module~forimage forimage program~example23->module~forimage module~lut lut module~forimage->module~lut module~pnm pnm module~forimage->module~pnm iso_fortran_env iso_fortran_env module~pnm->iso_fortran_env Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Calls program~~example23~~CallsGraph program~example23 example23 proc~deallocate_pnm pnm::format_pnm%deallocate_pnm program~example23->proc~deallocate_pnm proc~export_pnm pnm::format_pnm%export_pnm program~example23->proc~export_pnm proc~flip_horizontal pnm::format_pnm%flip_horizontal program~example23->proc~flip_horizontal proc~flip_vertical pnm::format_pnm%flip_vertical program~example23->proc~flip_vertical proc~set_pnm pnm::format_pnm%set_pnm program~example23->proc~set_pnm proc~set_format pnm::format_pnm%set_format proc~export_pnm->proc~set_format proc~allocate_pixels pnm::format_pnm%allocate_pixels proc~set_pnm->proc~allocate_pixels proc~set_file_format pnm::format_pnm%set_file_format proc~set_pnm->proc~set_file_format proc~set_pnm->proc~set_format proc~set_header pnm::format_pnm%set_header proc~set_pnm->proc~set_header proc~set_pixels pnm::format_pnm%set_pixels proc~set_pnm->proc~set_pixels proc~set_comment pnm::format_pnm%set_comment proc~set_header->proc~set_comment proc~set_height pnm::format_pnm%set_height proc~set_header->proc~set_height proc~set_magicnumber pnm::format_pnm%set_magicnumber proc~set_header->proc~set_magicnumber proc~set_max_color pnm::format_pnm%set_max_color proc~set_header->proc~set_max_color proc~set_width pnm::format_pnm%set_width proc~set_header->proc~set_width Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Variables Type Attributes Name Initial type( format_pnm ) :: ex23_1 type( format_pnm ) :: ex23_2 type( format_pnm ) :: ex23_3 integer, dimension(10,6) :: px1 integer, dimension(60,60) :: px2 integer, dimension(4,12) :: px3 Source Code program example23 use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex23_1 , ex23_2 , ex23_3 integer , dimension ( 10 , 6 ) :: px1 integer , dimension ( 60 , 60 ) :: px2 integer , dimension ( 4 , 12 ) :: px3 px1 ( 1 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px1 ( 2 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px1 ( 3 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px1 ( 4 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px1 ( 5 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px1 ( 6 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px1 ( 7 ,:) = [ 1 , 0 , 0 , 0 , 1 , 0 ] px1 ( 8 ,:) = [ 0 , 1 , 1 , 1 , 0 , 0 ] px1 ( 9 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 ] px1 ( 10 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 ] call ex23_1 % set_pnm ( encoding = 'binary' , file_format = 'pbm' , width = 6 , height = 10 , comment = 'example 1' , pixels = px1 ) call ex23_1 % flip_horizontal () call ex23_1 % export_pnm ( 'pnm_files/img1_binary_flip_horizontal' ) call ex23_1 % finalize () call ex23_1 % set_pnm ( encoding = 'binary' , file_format = 'pbm' , width = 6 , height = 10 , comment = 'example 1' , pixels = px1 ) call ex23_1 % flip_vertical () call ex23_1 % export_pnm ( 'pnm_files/img1_binary_flip_vertical' ) call ex23_1 % finalize () px2 = transpose ( reshapeshape = shape ( px2 ))) call ex23_2 % set_pnm ( encoding = 'binary' , file_format = 'pgm' , width = 60 , height = 60 , max_color = 255 , comment = 'example 2' , pixels = px2 ) call ex23_2 % flip_horizontal () call ex23_2 % export_pnm ( 'pnm_files/img2_binary_flip_horizontal' ) call ex23_2 % finalize () call ex23_2 % set_pnm ( encoding = 'binary' , file_format = 'pgm' , width = 60 , height = 60 , max_color = 255 , comment = 'example 2' , pixels = px2 ) call ex23_2 % flip_vertical () call ex23_2 % export_pnm ( 'pnm_files/img2_binary_flip_vertical' ) call ex23_2 % finalize () px3 ( 1 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 15 , 0 , 15 ] px3 ( 2 ,:) = [ 0 , 0 , 0 , 0 , 15 , 7 , 0 , 0 , 0 , 0 , 0 , 0 ] px3 ( 3 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 15 , 7 , 0 , 0 , 0 ] px3 ( 4 ,:) = [ 15 , 0 , 15 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ] call ex23_3 % set_pnm ( encoding = 'binary' , file_format = 'ppm' , width = 4 , height = 4 , max_color = 15 , comment = 'example 2' , pixels = px3 ) call ex23_3 % flip_horizontal () call ex23_3 % export_pnm ( 'pnm_files/img6_binary_flip_horizontal' ) call ex23_3 % finalize () call ex23_3 % set_pnm ( encoding = 'binary' , file_format = 'ppm' , width = 4 , height = 4 , max_color = 15 , comment = 'example 2' , pixels = px3 ) call ex23_3 % flip_vertical () call ex23_3 % export_pnm ( 'pnm_files/img6_binary_flip_vertical' ) call ex23_3 % finalize () end program example23","tags":"","loc":"program/example23.html"},{"title":"example22 – ForImage","text":"Uses forimage program~~example22~~UsesGraph program~example22 example22 module~forimage forimage program~example22->module~forimage module~lut lut module~forimage->module~lut module~pnm pnm module~forimage->module~pnm iso_fortran_env iso_fortran_env module~pnm->iso_fortran_env Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Calls program~~example22~~CallsGraph program~example22 example22 proc~deallocate_pnm pnm::format_pnm%deallocate_pnm program~example22->proc~deallocate_pnm proc~export_pnm pnm::format_pnm%export_pnm program~example22->proc~export_pnm proc~rotate pnm::format_pnm%rotate program~example22->proc~rotate proc~set_pnm pnm::format_pnm%set_pnm program~example22->proc~set_pnm proc~set_format pnm::format_pnm%set_format proc~export_pnm->proc~set_format proc~allocate_pixels pnm::format_pnm%allocate_pixels proc~rotate->proc~allocate_pixels proc~set_pnm->proc~allocate_pixels proc~set_file_format pnm::format_pnm%set_file_format proc~set_pnm->proc~set_file_format proc~set_pnm->proc~set_format proc~set_header pnm::format_pnm%set_header proc~set_pnm->proc~set_header proc~set_pixels pnm::format_pnm%set_pixels proc~set_pnm->proc~set_pixels proc~set_comment pnm::format_pnm%set_comment proc~set_header->proc~set_comment proc~set_height pnm::format_pnm%set_height proc~set_header->proc~set_height proc~set_magicnumber pnm::format_pnm%set_magicnumber proc~set_header->proc~set_magicnumber proc~set_max_color pnm::format_pnm%set_max_color proc~set_header->proc~set_max_color proc~set_width pnm::format_pnm%set_width proc~set_header->proc~set_width Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Variables Type Attributes Name Initial type( format_pnm ) :: ex22_1 type( format_pnm ) :: ex22_2 type( format_pnm ) :: ex22_3 integer, dimension(10,6) :: px1 integer, dimension(60,60) :: px2 integer, dimension(4,12) :: px3 Source Code program example22 use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex22_1 , ex22_2 , ex22_3 integer , dimension ( 10 , 6 ) :: px1 integer , dimension ( 60 , 60 ) :: px2 integer , dimension ( 4 , 12 ) :: px3 px1 ( 1 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px1 ( 2 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px1 ( 3 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px1 ( 4 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px1 ( 5 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px1 ( 6 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px1 ( 7 ,:) = [ 1 , 0 , 0 , 0 , 1 , 0 ] px1 ( 8 ,:) = [ 0 , 1 , 1 , 1 , 0 , 0 ] px1 ( 9 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 ] px1 ( 10 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 ] call ex22_1 % set_pnm ( encoding = 'binary' , file_format = 'pbm' , width = 6 , height = 10 , comment = 'example 1' , pixels = px1 ) call ex22_1 % rotate ( - 90 ) call ex22_1 % export_pnm ( 'pnm_files/img1_binary_rotate' ) call ex22_1 % finalize () px2 = transpose ( reshapeshape = shape ( px2 ))) call ex22_2 % set_pnm ( encoding = 'binary' , file_format = 'pgm' , width = 60 , height = 60 , max_color = 255 , comment = 'example 2' , pixels = px2 ) call ex22_2 % rotate ( - 90 ) call ex22_2 % export_pnm ( 'pnm_files/img2_binary_rotate' ) call ex22_2 % finalize () px3 ( 1 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 15 , 0 , 15 ] px3 ( 2 ,:) = [ 0 , 0 , 0 , 0 , 15 , 7 , 0 , 0 , 0 , 0 , 0 , 0 ] px3 ( 3 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 15 , 7 , 0 , 0 , 0 ] px3 ( 4 ,:) = [ 15 , 0 , 15 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ] call ex22_3 % set_pnm ( encoding = 'binary' , file_format = 'ppm' , width = 4 , height = 4 , max_color = 15 , comment = 'example 2' , pixels = px3 ) call ex22_3 % rotate ( - 90 ) call ex22_3 % export_pnm ( 'pnm_files/img6_binary_rotate' ) call ex22_3 % finalize () end program example22","tags":"","loc":"program/example22.html"},{"title":"example6 – ForImage","text":"Uses forimage program~~example6~~UsesGraph program~example6 example6 module~forimage forimage program~example6->module~forimage module~lut lut module~forimage->module~lut module~pnm pnm module~forimage->module~pnm iso_fortran_env iso_fortran_env module~pnm->iso_fortran_env Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Calls program~~example6~~CallsGraph program~example6 example6 proc~deallocate_pnm pnm::format_pnm%deallocate_pnm program~example6->proc~deallocate_pnm proc~export_pnm pnm::format_pnm%export_pnm program~example6->proc~export_pnm proc~set_pnm pnm::format_pnm%set_pnm program~example6->proc~set_pnm proc~set_format pnm::format_pnm%set_format proc~export_pnm->proc~set_format proc~allocate_pixels pnm::format_pnm%allocate_pixels proc~set_pnm->proc~allocate_pixels proc~set_file_format pnm::format_pnm%set_file_format proc~set_pnm->proc~set_file_format proc~set_pnm->proc~set_format proc~set_header pnm::format_pnm%set_header proc~set_pnm->proc~set_header proc~set_pixels pnm::format_pnm%set_pixels proc~set_pnm->proc~set_pixels proc~set_comment pnm::format_pnm%set_comment proc~set_header->proc~set_comment proc~set_height pnm::format_pnm%set_height proc~set_header->proc~set_height proc~set_magicnumber pnm::format_pnm%set_magicnumber proc~set_header->proc~set_magicnumber proc~set_max_color pnm::format_pnm%set_max_color proc~set_header->proc~set_max_color proc~set_width pnm::format_pnm%set_width proc~set_header->proc~set_width Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Variables Type Attributes Name Initial type( format_pnm ) :: ex6 integer, dimension(4,12) :: px Source Code program example6 use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex6 integer , dimension ( 4 , 12 ) :: px px ( 1 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 15 , 0 , 15 ] px ( 2 ,:) = [ 0 , 0 , 0 , 0 , 15 , 7 , 0 , 0 , 0 , 0 , 0 , 0 ] px ( 3 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 15 , 7 , 0 , 0 , 0 ] px ( 4 ,:) = [ 15 , 0 , 15 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ] call ex6 % set_pnm ( encoding = 'binary' , file_format = 'ppm' , width = 4 , height = 4 , max_color = 15 , comment = 'example 2' , pixels = px ) call ex6 % export_pnm ( 'pnm_files/img6_binary' ) call ex6 % finalize () end program example6","tags":"","loc":"program/example6.html"},{"title":"example17 – ForImage","text":"Uses forimage program~~example17~~UsesGraph program~example17 example17 module~forimage forimage program~example17->module~forimage module~lut lut module~forimage->module~lut module~pnm pnm module~forimage->module~pnm iso_fortran_env iso_fortran_env module~pnm->iso_fortran_env Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Calls program~~example17~~CallsGraph program~example17 example17 proc~deallocate_pnm pnm::format_pnm%deallocate_pnm program~example17->proc~deallocate_pnm proc~export_pnm pnm::format_pnm%export_pnm program~example17->proc~export_pnm proc~negative pnm::format_pnm%negative program~example17->proc~negative proc~set_pnm pnm::format_pnm%set_pnm program~example17->proc~set_pnm proc~set_format pnm::format_pnm%set_format proc~export_pnm->proc~set_format proc~allocate_pixels pnm::format_pnm%allocate_pixels proc~set_pnm->proc~allocate_pixels proc~set_file_format pnm::format_pnm%set_file_format proc~set_pnm->proc~set_file_format proc~set_pnm->proc~set_format proc~set_header pnm::format_pnm%set_header proc~set_pnm->proc~set_header proc~set_pixels pnm::format_pnm%set_pixels proc~set_pnm->proc~set_pixels proc~set_comment pnm::format_pnm%set_comment proc~set_header->proc~set_comment proc~set_height pnm::format_pnm%set_height proc~set_header->proc~set_height proc~set_magicnumber pnm::format_pnm%set_magicnumber proc~set_header->proc~set_magicnumber proc~set_max_color pnm::format_pnm%set_max_color proc~set_header->proc~set_max_color proc~set_width pnm::format_pnm%set_width proc~set_header->proc~set_width Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Variables Type Attributes Name Initial type( format_pnm ) :: ex17_1 type( format_pnm ) :: ex17_2 type( format_pnm ) :: ex17_3 integer, dimension(10,6) :: px1 integer, dimension(60,60) :: px2 integer, dimension(4,12) :: px3 Source Code program example17 use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex17_1 , ex17_2 , ex17_3 integer , dimension ( 10 , 6 ) :: px1 integer , dimension ( 60 , 60 ) :: px2 integer , dimension ( 4 , 12 ) :: px3 px1 ( 1 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px1 ( 2 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px1 ( 3 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px1 ( 4 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px1 ( 5 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px1 ( 6 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px1 ( 7 ,:) = [ 1 , 0 , 0 , 0 , 1 , 0 ] px1 ( 8 ,:) = [ 0 , 1 , 1 , 1 , 0 , 0 ] px1 ( 9 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 ] px1 ( 10 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 ] call ex17_1 % set_pnm ( encoding = 'binary' , file_format = 'pbm' , width = 6 , height = 10 , comment = 'example 1' , pixels = px1 ) call ex17_1 % export_pnm ( 'pnm_files/img4_binary_negative' ) call ex17_1 % finalize () px2 = transpose ( reshapeshape = shape ( px2 ))) call ex17_2 % set_pnm ( encoding = 'binary' , file_format = 'pgm' , width = 60 , height = 60 , max_color = 255 , comment = 'example 2' , pixels = px2 ) call ex17_2 % negative () call ex17_2 % export_pnm ( 'pnm_files/img5_binary_negative' ) call ex17_2 % finalize () px3 ( 1 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 15 , 0 , 15 ] px3 ( 2 ,:) = [ 0 , 0 , 0 , 0 , 15 , 7 , 0 , 0 , 0 , 0 , 0 , 0 ] px3 ( 3 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 15 , 7 , 0 , 0 , 0 ] px3 ( 4 ,:) = [ 15 , 0 , 15 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ] call ex17_3 % set_pnm ( encoding = 'binary' , file_format = 'ppm' , width = 4 , height = 4 , max_color = 15 , comment = 'example 2' , pixels = px3 ) call ex17_3 % negative () call ex17_3 % export_pnm ( 'pnm_files/img6_binary_negative' ) call ex17_3 % finalize () end program example17","tags":"","loc":"program/example17.html"},{"title":"example – ForImage","text":"Uses forimage program~~example~~UsesGraph program~example example module~forimage forimage program~example->module~forimage module~lut lut module~forimage->module~lut module~pnm pnm module~forimage->module~pnm iso_fortran_env iso_fortran_env module~pnm->iso_fortran_env Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Calls program~~example~~CallsGraph program~example example proc~deallocate_pnm pnm::format_pnm%deallocate_pnm program~example->proc~deallocate_pnm proc~export_pnm pnm::format_pnm%export_pnm program~example->proc~export_pnm proc~set_pnm pnm::format_pnm%set_pnm program~example->proc~set_pnm proc~set_format pnm::format_pnm%set_format proc~export_pnm->proc~set_format proc~allocate_pixels pnm::format_pnm%allocate_pixels proc~set_pnm->proc~allocate_pixels proc~set_file_format pnm::format_pnm%set_file_format proc~set_pnm->proc~set_file_format proc~set_pnm->proc~set_format proc~set_header pnm::format_pnm%set_header proc~set_pnm->proc~set_header proc~set_pixels pnm::format_pnm%set_pixels proc~set_pnm->proc~set_pixels proc~set_comment pnm::format_pnm%set_comment proc~set_header->proc~set_comment proc~set_height pnm::format_pnm%set_height proc~set_header->proc~set_height proc~set_magicnumber pnm::format_pnm%set_magicnumber proc~set_header->proc~set_magicnumber proc~set_max_color pnm::format_pnm%set_max_color proc~set_header->proc~set_max_color proc~set_width pnm::format_pnm%set_width proc~set_header->proc~set_width Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Variables Type Attributes Name Initial type( format_pnm ) :: ex5 integer, dimension(60,60) :: px Source Code program example use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex5 integer , dimension ( 60 , 60 ) :: px px = transpose ( reshapeshape = shape ( px ))) call ex5 % set_pnm ( encoding = 'binary' , file_format = 'pgm' , width = 60 , height = 60 , max_color = 255 , comment = 'example 2' , pixels = px ) call ex5 % export_pnm ( 'pnm_files/img5_binary' ) call ex5 % finalize () end program example","tags":"","loc":"program/example.html"},{"title":"example3 – ForImage","text":"Uses forimage program~~example3~~UsesGraph program~example3 example3 module~forimage forimage program~example3->module~forimage module~lut lut module~forimage->module~lut module~pnm pnm module~forimage->module~pnm iso_fortran_env iso_fortran_env module~pnm->iso_fortran_env Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Calls program~~example3~~CallsGraph program~example3 example3 proc~deallocate_pnm pnm::format_pnm%deallocate_pnm program~example3->proc~deallocate_pnm proc~export_pnm pnm::format_pnm%export_pnm program~example3->proc~export_pnm proc~set_pnm pnm::format_pnm%set_pnm program~example3->proc~set_pnm proc~set_format pnm::format_pnm%set_format proc~export_pnm->proc~set_format proc~allocate_pixels pnm::format_pnm%allocate_pixels proc~set_pnm->proc~allocate_pixels proc~set_file_format pnm::format_pnm%set_file_format proc~set_pnm->proc~set_file_format proc~set_pnm->proc~set_format proc~set_header pnm::format_pnm%set_header proc~set_pnm->proc~set_header proc~set_pixels pnm::format_pnm%set_pixels proc~set_pnm->proc~set_pixels proc~set_comment pnm::format_pnm%set_comment proc~set_header->proc~set_comment proc~set_height pnm::format_pnm%set_height proc~set_header->proc~set_height proc~set_magicnumber pnm::format_pnm%set_magicnumber proc~set_header->proc~set_magicnumber proc~set_max_color pnm::format_pnm%set_max_color proc~set_header->proc~set_max_color proc~set_width pnm::format_pnm%set_width proc~set_header->proc~set_width Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Variables Type Attributes Name Initial type( format_pnm ) :: ex3 integer, dimension(4,12) :: px Source Code program example3 use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex3 integer , dimension ( 4 , 12 ) :: px px ( 1 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 15 , 0 , 15 ] px ( 2 ,:) = [ 0 , 0 , 0 , 0 , 15 , 7 , 0 , 0 , 0 , 0 , 0 , 0 ] px ( 3 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 15 , 7 , 0 , 0 , 0 ] px ( 4 ,:) = [ 15 , 0 , 15 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ] call ex3 % set_pnm ( encoding = 'ascii' , file_format = 'ppm' , width = 4 , height = 4 , max_color = 15 , comment = 'example 2' , pixels = px ) call ex3 % export_pnm ( 'pnm_files/img3_ascii' ) call ex3 % finalize () end program example3","tags":"","loc":"program/example3.html"},{"title":"example21 – ForImage","text":"Uses forimage program~~example21~~UsesGraph program~example21 example21 module~forimage forimage program~example21->module~forimage module~lut lut module~forimage->module~lut module~pnm pnm module~forimage->module~pnm iso_fortran_env iso_fortran_env module~pnm->iso_fortran_env Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Calls program~~example21~~CallsGraph program~example21 example21 proc~deallocate_pnm pnm::format_pnm%deallocate_pnm program~example21->proc~deallocate_pnm proc~export_pnm pnm::format_pnm%export_pnm program~example21->proc~export_pnm proc~greyscale pnm::format_pnm%greyscale program~example21->proc~greyscale proc~set_pnm pnm::format_pnm%set_pnm program~example21->proc~set_pnm proc~set_format pnm::format_pnm%set_format proc~export_pnm->proc~set_format proc~allocate_pixels pnm::format_pnm%allocate_pixels proc~set_pnm->proc~allocate_pixels proc~set_file_format pnm::format_pnm%set_file_format proc~set_pnm->proc~set_file_format proc~set_pnm->proc~set_format proc~set_header pnm::format_pnm%set_header proc~set_pnm->proc~set_header proc~set_pixels pnm::format_pnm%set_pixels proc~set_pnm->proc~set_pixels proc~set_comment pnm::format_pnm%set_comment proc~set_header->proc~set_comment proc~set_height pnm::format_pnm%set_height proc~set_header->proc~set_height proc~set_magicnumber pnm::format_pnm%set_magicnumber proc~set_header->proc~set_magicnumber proc~set_max_color pnm::format_pnm%set_max_color proc~set_header->proc~set_max_color proc~set_width pnm::format_pnm%set_width proc~set_header->proc~set_width Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Variables Type Attributes Name Initial type( format_pnm ) :: ex21 integer, dimension(4,12) :: px Source Code program example21 use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex21 integer , dimension ( 4 , 12 ) :: px px ( 1 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 15 , 0 , 15 ] px ( 2 ,:) = [ 0 , 0 , 0 , 0 , 15 , 7 , 0 , 0 , 0 , 0 , 0 , 0 ] px ( 3 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 15 , 7 , 0 , 0 , 0 ] px ( 4 ,:) = [ 15 , 0 , 15 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ] call ex21 % set_pnm ( encoding = 'binary' , file_format = 'ppm' , width = 4 , height = 4 , max_color = 15 , comment = 'example 2' , pixels = px ) call ex21 % greyscale () call ex21 % export_pnm ( 'pnm_files/img6_binary_greyscale' ) call ex21 % finalize () end program example21","tags":"","loc":"program/example21.html"},{"title":"example8 – ForImage","text":"Uses forimage program~~example8~~UsesGraph program~example8 example8 module~forimage forimage program~example8->module~forimage module~lut lut module~forimage->module~lut module~pnm pnm module~forimage->module~pnm iso_fortran_env iso_fortran_env module~pnm->iso_fortran_env Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Calls program~~example8~~CallsGraph program~example8 example8 proc~deallocate_pnm pnm::format_pnm%deallocate_pnm program~example8->proc~deallocate_pnm proc~export_pnm pnm::format_pnm%export_pnm program~example8->proc~export_pnm proc~import_pnm pnm::format_pnm%import_pnm program~example8->proc~import_pnm proc~set_format pnm::format_pnm%set_format proc~export_pnm->proc~set_format proc~allocate_pixels pnm::format_pnm%allocate_pixels proc~import_pnm->proc~allocate_pixels proc~set_file_format pnm::format_pnm%set_file_format proc~import_pnm->proc~set_file_format proc~import_pnm->proc~set_format Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Variables Type Attributes Name Initial type( format_pnm ) :: ex8 Source Code program example8 use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex8 call ex8 % import_pnm ( 'pnm_files/img2_ascii' , 'pgm' , 'ascii' ) call ex8 % export_pnm ( 'pnm_files/img2_ascii_ex' ) call ex8 % finalize () end program example8","tags":"","loc":"program/example8.html"},{"title":"example13 – ForImage","text":"Uses forimage program~~example13~~UsesGraph program~example13 example13 module~forimage forimage program~example13->module~forimage module~lut lut module~forimage->module~lut module~pnm pnm module~forimage->module~pnm iso_fortran_env iso_fortran_env module~pnm->iso_fortran_env Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Calls program~~example13~~CallsGraph program~example13 example13 proc~deallocate_pnm pnm::format_pnm%deallocate_pnm program~example13->proc~deallocate_pnm proc~export_pnm pnm::format_pnm%export_pnm program~example13->proc~export_pnm proc~import_pnm pnm::format_pnm%import_pnm program~example13->proc~import_pnm proc~set_format pnm::format_pnm%set_format proc~export_pnm->proc~set_format proc~allocate_pixels pnm::format_pnm%allocate_pixels proc~import_pnm->proc~allocate_pixels proc~set_file_format pnm::format_pnm%set_file_format proc~import_pnm->proc~set_file_format proc~import_pnm->proc~set_format Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Variables Type Attributes Name Initial type( format_pnm ) :: ex13 Source Code program example13 use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex13 call ex13 % import_pnm ( 'pnm_files/img6_binary' , 'ppm' , 'binary' ) call ex13 % export_pnm ( 'pnm_files/img6_binary_to_ascii_ex' , 'ascii' ) call ex13 % finalize () end program example13","tags":"","loc":"program/example13.html"},{"title":"example11 – ForImage","text":"Uses forimage program~~example11~~UsesGraph program~example11 example11 module~forimage forimage program~example11->module~forimage module~lut lut module~forimage->module~lut module~pnm pnm module~forimage->module~pnm iso_fortran_env iso_fortran_env module~pnm->iso_fortran_env Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Calls program~~example11~~CallsGraph program~example11 example11 proc~deallocate_pnm pnm::format_pnm%deallocate_pnm program~example11->proc~deallocate_pnm proc~export_pnm pnm::format_pnm%export_pnm program~example11->proc~export_pnm proc~import_pnm pnm::format_pnm%import_pnm program~example11->proc~import_pnm proc~set_format pnm::format_pnm%set_format proc~export_pnm->proc~set_format proc~allocate_pixels pnm::format_pnm%allocate_pixels proc~import_pnm->proc~allocate_pixels proc~set_file_format pnm::format_pnm%set_file_format proc~import_pnm->proc~set_file_format proc~import_pnm->proc~set_format Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Variables Type Attributes Name Initial type( format_pnm ) :: ex11 Source Code program example11 use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex11 call ex11 % import_pnm ( 'pnm_files/img5_binary' , 'pgm' , 'binary' ) call ex11 % export_pnm ( 'pnm_files/img5_binary_ex' ) call ex11 % finalize () end program example11","tags":"","loc":"program/example11.html"},{"title":"example16 – ForImage","text":"Uses forimage program~~example16~~UsesGraph program~example16 example16 module~forimage forimage program~example16->module~forimage module~lut lut module~forimage->module~lut module~pnm pnm module~forimage->module~pnm iso_fortran_env iso_fortran_env module~pnm->iso_fortran_env Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Calls program~~example16~~CallsGraph program~example16 example16 proc~deallocate_lut lut::format_lut%deallocate_lut program~example16->proc~deallocate_lut proc~export lut::format_lut%export program~example16->proc~export proc~get_num_colors lut::format_lut%get_num_colors proc~export->proc~get_num_colors Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Variables Type Attributes Name Initial type( format_lut ) :: ex16 Source Code program example16 use forimage , only : format_lut implicit none type ( format_lut ) :: ex16 call ex16 % import ( file_name = 'lut_files/example15' , dim_colors = 3 ) call ex16 % export ( file_name = 'lut_files/example16' ) call ex16 % finalize () end program example16","tags":"","loc":"program/example16.html"},{"title":"example19 – ForImage","text":"Uses forimage program~~example19~~UsesGraph program~example19 example19 module~forimage forimage program~example19->module~forimage module~lut lut module~forimage->module~lut module~pnm pnm module~forimage->module~pnm iso_fortran_env iso_fortran_env module~pnm->iso_fortran_env Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Calls program~~example19~~CallsGraph program~example19 example19 proc~deallocate_pnm pnm::format_pnm%deallocate_pnm program~example19->proc~deallocate_pnm proc~export_pnm pnm::format_pnm%export_pnm program~example19->proc~export_pnm proc~set_pnm pnm::format_pnm%set_pnm program~example19->proc~set_pnm proc~swap_channels pnm::format_pnm%swap_channels program~example19->proc~swap_channels proc~set_format pnm::format_pnm%set_format proc~export_pnm->proc~set_format proc~allocate_pixels pnm::format_pnm%allocate_pixels proc~set_pnm->proc~allocate_pixels proc~set_file_format pnm::format_pnm%set_file_format proc~set_pnm->proc~set_file_format proc~set_pnm->proc~set_format proc~set_header pnm::format_pnm%set_header proc~set_pnm->proc~set_header proc~set_pixels pnm::format_pnm%set_pixels proc~set_pnm->proc~set_pixels proc~set_comment pnm::format_pnm%set_comment proc~set_header->proc~set_comment proc~set_height pnm::format_pnm%set_height proc~set_header->proc~set_height proc~set_magicnumber pnm::format_pnm%set_magicnumber proc~set_header->proc~set_magicnumber proc~set_max_color pnm::format_pnm%set_max_color proc~set_header->proc~set_max_color proc~set_width pnm::format_pnm%set_width proc~set_header->proc~set_width Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Variables Type Attributes Name Initial type( format_pnm ) :: ex19 integer, dimension(4,12) :: px Source Code program example19 use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex19 integer , dimension ( 4 , 12 ) :: px px ( 1 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 15 , 0 , 15 ] px ( 2 ,:) = [ 0 , 0 , 0 , 0 , 15 , 7 , 0 , 0 , 0 , 0 , 0 , 0 ] px ( 3 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 15 , 7 , 0 , 0 , 0 ] px ( 4 ,:) = [ 15 , 0 , 15 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ] call ex19 % set_pnm ( encoding = 'binary' , file_format = 'ppm' , width = 4 , height = 4 , max_color = 15 , comment = 'example 2' , pixels = px ) call ex19 % swap_channels ( swap = 'bg' ) call ex19 % export_pnm ( 'pnm_files/img6_binary_swap' ) call ex19 % finalize () end program example19","tags":"","loc":"program/example19.html"},{"title":"example4.f90 – ForImage","text":"This file depends on sourcefile~~example4.f90~~EfferentGraph sourcefile~example4.f90 example4.f90 sourcefile~forimage.f90 forimage.f90 sourcefile~example4.f90->sourcefile~forimage.f90 sourcefile~lut.f90 lut.f90 sourcefile~forimage.f90->sourcefile~lut.f90 sourcefile~pnm.f90 pnm.f90 sourcefile~forimage.f90->sourcefile~pnm.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code program example4 use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex4 integer , dimension ( 10 , 6 ) :: px px ( 1 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px ( 2 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px ( 3 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px ( 4 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px ( 5 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px ( 6 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px ( 7 ,:) = [ 1 , 0 , 0 , 0 , 1 , 0 ] px ( 8 ,:) = [ 0 , 1 , 1 , 1 , 0 , 0 ] px ( 9 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 ] px ( 10 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 ] call ex4 % set_pnm ( encoding = 'binary' , file_format = 'pbm' , width = 6 , height = 10 , comment = 'example 1' , pixels = px ) call ex4 % export_pnm ( 'pnm_files/img4_binary' ) call ex4 % finalize () end program example4","tags":"","loc":"sourcefile/example4.f90.html"},{"title":"example12.f90 – ForImage","text":"This file depends on sourcefile~~example12.f90~~EfferentGraph sourcefile~example12.f90 example12.f90 sourcefile~forimage.f90 forimage.f90 sourcefile~example12.f90->sourcefile~forimage.f90 sourcefile~lut.f90 lut.f90 sourcefile~forimage.f90->sourcefile~lut.f90 sourcefile~pnm.f90 pnm.f90 sourcefile~forimage.f90->sourcefile~pnm.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code program example12 use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex12 call ex12 % import_pnm ( 'pnm_files/img6_binary' , 'ppm' , 'binary' ) call ex12 % export_pnm ( 'pnm_files/img6_binary_ex' ) call ex12 % finalize () end program example12","tags":"","loc":"sourcefile/example12.f90.html"},{"title":"example18.f90 – ForImage","text":"This file depends on sourcefile~~example18.f90~~EfferentGraph sourcefile~example18.f90 example18.f90 sourcefile~forimage.f90 forimage.f90 sourcefile~example18.f90->sourcefile~forimage.f90 sourcefile~lut.f90 lut.f90 sourcefile~forimage.f90->sourcefile~lut.f90 sourcefile~pnm.f90 pnm.f90 sourcefile~forimage.f90->sourcefile~pnm.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code program example18 use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex18_1 , ex18_2 , ex18_3 integer , dimension ( 10 , 6 ) :: px1 integer , dimension ( 60 , 60 ) :: px2 integer , dimension ( 4 , 12 ) :: px3 px1 ( 1 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px1 ( 2 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px1 ( 3 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px1 ( 4 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px1 ( 5 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px1 ( 6 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px1 ( 7 ,:) = [ 1 , 0 , 0 , 0 , 1 , 0 ] px1 ( 8 ,:) = [ 0 , 1 , 1 , 1 , 0 , 0 ] px1 ( 9 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 ] px1 ( 10 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 ] call ex18_1 % set_pnm ( encoding = 'binary' , file_format = 'pbm' , width = 6 , height = 10 , comment = 'example 1' , pixels = px1 ) call ex18_1 % brighten ( - 7 ) call ex18_1 % export_pnm ( 'pnm_files/img4_binary_brighten' ) call ex18_1 % finalize () px2 = transpose ( reshapeshape = shape ( px2 ))) call ex18_2 % set_pnm ( encoding = 'binary' , file_format = 'pgm' , width = 60 , height = 60 , max_color = 255 , comment = 'example 2' , pixels = px2 ) call ex18_2 % brighten ( + 200 ) call ex18_2 % export_pnm ( 'pnm_files/img5_binary_brighten' ) call ex18_2 % finalize () px3 ( 1 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 15 , 0 , 15 ] px3 ( 2 ,:) = [ 0 , 0 , 0 , 0 , 15 , 7 , 0 , 0 , 0 , 0 , 0 , 0 ] px3 ( 3 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 15 , 7 , 0 , 0 , 0 ] px3 ( 4 ,:) = [ 15 , 0 , 15 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ] call ex18_3 % set_pnm ( encoding = 'binary' , file_format = 'ppm' , width = 4 , height = 4 , max_color = 15 , comment = 'example 2' , pixels = px3 ) call ex18_3 % brighten ( - 7 ) call ex18_3 % export_pnm ( 'pnm_files/img6_binary_brighten' ) call ex18_3 % finalize () end program example18","tags":"","loc":"sourcefile/example18.f90.html"},{"title":"example24.f90 – ForImage","text":"This file depends on sourcefile~~example24.f90~~EfferentGraph sourcefile~example24.f90 example24.f90 sourcefile~forimage.f90 forimage.f90 sourcefile~example24.f90->sourcefile~forimage.f90 sourcefile~lut.f90 lut.f90 sourcefile~forimage.f90->sourcefile~lut.f90 sourcefile~pnm.f90 pnm.f90 sourcefile~forimage.f90->sourcefile~pnm.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code program example24 use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex24_1 , ex24_2 , ex24_3 integer , dimension ( 10 , 6 ) :: px1 integer , dimension ( 60 , 60 ) :: px2 integer , dimension ( 4 , 12 ) :: px3 px1 ( 1 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px1 ( 2 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px1 ( 3 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px1 ( 4 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px1 ( 5 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px1 ( 6 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px1 ( 7 ,:) = [ 1 , 0 , 0 , 0 , 1 , 0 ] px1 ( 8 ,:) = [ 0 , 1 , 1 , 1 , 0 , 0 ] px1 ( 9 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 ] px1 ( 10 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 ] call ex24_1 % set_pnm ( encoding = 'binary' , file_format = 'pbm' , width = 6 , height = 10 , comment = 'example 1' , pixels = px1 ) call ex24_1 % crop ( 2 , 10 , 3 , 6 ) call ex24_1 % export_pnm ( 'pnm_files/img1_binary_crop' ) call ex24_1 % finalize () px2 = transpose ( reshapeshape = shape ( px2 ))) call ex24_2 % set_pnm ( encoding = 'binary' , file_format = 'pgm' , width = 60 , height = 60 , max_color = 255 , comment = 'example 2' , pixels = px2 ) call ex24_2 % crop ( 2 , 50 , 3 , 55 ) call ex24_2 % export_pnm ( 'pnm_files/img2_binary_crop' ) call ex24_2 % finalize () px3 ( 1 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 15 , 0 , 15 ] px3 ( 2 ,:) = [ 0 , 0 , 0 , 0 , 15 , 7 , 0 , 0 , 0 , 0 , 0 , 0 ] px3 ( 3 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 15 , 7 , 0 , 0 , 0 ] px3 ( 4 ,:) = [ 15 , 0 , 15 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ] call ex24_3 % set_pnm ( encoding = 'binary' , file_format = 'ppm' , width = 4 , height = 4 , max_color = 15 , comment = 'example 2' , pixels = px3 ) call ex24_3 % crop ( 1 , 3 , 2 , 4 ) call ex24_3 % export_pnm ( 'pnm_files/img6_binary_crop' ) call ex24_3 % finalize () end program example24","tags":"","loc":"sourcefile/example24.f90.html"},{"title":"example9.f90 – ForImage","text":"This file depends on sourcefile~~example9.f90~~EfferentGraph sourcefile~example9.f90 example9.f90 sourcefile~forimage.f90 forimage.f90 sourcefile~example9.f90->sourcefile~forimage.f90 sourcefile~lut.f90 lut.f90 sourcefile~forimage.f90->sourcefile~lut.f90 sourcefile~pnm.f90 pnm.f90 sourcefile~forimage.f90->sourcefile~pnm.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code program example9 use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex9 call ex9 % import_pnm ( 'pnm_files/img3_ascii' , 'ppm' , 'ascii' ) call ex9 % export_pnm ( 'pnm_files/img3_ascii_ex' ) call ex9 % finalize () end program example9","tags":"","loc":"sourcefile/example9.f90.html"},{"title":"example14.f90 – ForImage","text":"This file depends on sourcefile~~example14.f90~~EfferentGraph sourcefile~example14.f90 example14.f90 sourcefile~forimage.f90 forimage.f90 sourcefile~example14.f90->sourcefile~forimage.f90 sourcefile~lut.f90 lut.f90 sourcefile~forimage.f90->sourcefile~lut.f90 sourcefile~pnm.f90 pnm.f90 sourcefile~forimage.f90->sourcefile~pnm.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code program example14 use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex14 call ex14 % import_pnm ( 'pnm_files/img3_ascii' , 'ppm' , 'ascii' ) call ex14 % export_pnm ( 'pnm_files/img6_ascii_to_binary_ex' , 'binary' ) call ex14 % finalize () end program example14","tags":"","loc":"sourcefile/example14.f90.html"},{"title":"example10.f90 – ForImage","text":"This file depends on sourcefile~~example10.f90~~EfferentGraph sourcefile~example10.f90 example10.f90 sourcefile~forimage.f90 forimage.f90 sourcefile~example10.f90->sourcefile~forimage.f90 sourcefile~lut.f90 lut.f90 sourcefile~forimage.f90->sourcefile~lut.f90 sourcefile~pnm.f90 pnm.f90 sourcefile~forimage.f90->sourcefile~pnm.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code program example10 use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex10 call ex10 % import_pnm ( 'pnm_files/img4_binary' , 'pbm' , 'binary' ) call ex10 % export_pnm ( 'pnm_files/img4_binary_ex' ) call ex10 % finalize () end program example10","tags":"","loc":"sourcefile/example10.f90.html"},{"title":"example15.f90 – ForImage","text":"This file depends on sourcefile~~example15.f90~~EfferentGraph sourcefile~example15.f90 example15.f90 sourcefile~forimage.f90 forimage.f90 sourcefile~example15.f90->sourcefile~forimage.f90 sourcefile~lut.f90 lut.f90 sourcefile~forimage.f90->sourcefile~lut.f90 sourcefile~pnm.f90 pnm.f90 sourcefile~forimage.f90->sourcefile~pnm.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code program example15 use forimage , only : format_lut implicit none type ( format_lut ) :: ex15 integer , dimension ( 1 : 8 , 3 ) :: colors = reshape ( [ & 0 , 0 , 0 , & 255 , 0 , 0 , & 0 , 255 , 0 , & 0 , 0 , 255 , & 255 , 255 , 0 , & 0 , 255 , 255 , & 255 , 0 , 255 , & 255 , 255 , 255 ], & shape ( colors ), order = [ 2 , 1 ] ) call ex15 % set ( num_colors = 8 , dim_colors = 3 , colors = colors ) call ex15 % export ( 'lut_files/example15' ) call ex15 % finalize () end program example15","tags":"","loc":"sourcefile/example15.f90.html"},{"title":"example2.f90 – ForImage","text":"This file depends on sourcefile~~example2.f90~~EfferentGraph sourcefile~example2.f90 example2.f90 sourcefile~forimage.f90 forimage.f90 sourcefile~example2.f90->sourcefile~forimage.f90 sourcefile~lut.f90 lut.f90 sourcefile~forimage.f90->sourcefile~lut.f90 sourcefile~pnm.f90 pnm.f90 sourcefile~forimage.f90->sourcefile~pnm.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code program example2 use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex2 integer , dimension ( 60 , 60 ) :: px px = transpose ( reshapeshape = shape ( px ))) call ex2 % set_pnm ( encoding = 'ascii' , file_format = 'pgm' , width = 60 , height = 60 , max_color = 255 , comment = 'example 2' , pixels = px ) call ex2 % export_pnm ( 'pnm_files/img2_ascii' ) call ex2 % finalize () end program example2","tags":"","loc":"sourcefile/example2.f90.html"},{"title":"example20.f90 – ForImage","text":"This file depends on sourcefile~~example20.f90~~EfferentGraph sourcefile~example20.f90 example20.f90 sourcefile~forimage.f90 forimage.f90 sourcefile~example20.f90->sourcefile~forimage.f90 sourcefile~lut.f90 lut.f90 sourcefile~forimage.f90->sourcefile~lut.f90 sourcefile~pnm.f90 pnm.f90 sourcefile~forimage.f90->sourcefile~pnm.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code program example20 use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex20 integer , dimension ( 4 , 12 ) :: px px ( 1 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 15 , 0 , 15 ] px ( 2 ,:) = [ 0 , 0 , 0 , 0 , 15 , 7 , 0 , 0 , 0 , 0 , 0 , 0 ] px ( 3 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 15 , 7 , 0 , 0 , 0 ] px ( 4 ,:) = [ 15 , 0 , 15 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ] call ex20 % set_pnm ( encoding = 'binary' , file_format = 'ppm' , width = 4 , height = 4 , max_color = 15 , comment = 'example 2' , pixels = px ) call ex20 % remove_channels ( remove_r = . true ., remove_b = . true .) call ex20 % export_pnm ( 'pnm_files/img6_binary_remove' ) call ex20 % finalize () end program example20","tags":"","loc":"sourcefile/example20.f90.html"},{"title":"example7.f90 – ForImage","text":"This file depends on sourcefile~~example7.f90~~EfferentGraph sourcefile~example7.f90 example7.f90 sourcefile~forimage.f90 forimage.f90 sourcefile~example7.f90->sourcefile~forimage.f90 sourcefile~lut.f90 lut.f90 sourcefile~forimage.f90->sourcefile~lut.f90 sourcefile~pnm.f90 pnm.f90 sourcefile~forimage.f90->sourcefile~pnm.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code program example7 use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex7 call ex7 % import_pnm ( 'pnm_files/img1_ascii' , 'pbm' , 'ascii' ) call ex7 % export_pnm ( 'pnm_files/img1_ascii_ex' ) call ex7 % finalize () end program example7","tags":"","loc":"sourcefile/example7.f90.html"},{"title":"example1.f90 – ForImage","text":"This file depends on sourcefile~~example1.f90~~EfferentGraph sourcefile~example1.f90 example1.f90 sourcefile~forimage.f90 forimage.f90 sourcefile~example1.f90->sourcefile~forimage.f90 sourcefile~lut.f90 lut.f90 sourcefile~forimage.f90->sourcefile~lut.f90 sourcefile~pnm.f90 pnm.f90 sourcefile~forimage.f90->sourcefile~pnm.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code program example1 use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex1 integer , dimension ( 10 , 6 ) :: px px ( 1 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px ( 2 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px ( 3 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px ( 4 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px ( 5 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px ( 6 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px ( 7 ,:) = [ 1 , 0 , 0 , 0 , 1 , 0 ] px ( 8 ,:) = [ 0 , 1 , 1 , 1 , 0 , 0 ] px ( 9 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 ] px ( 10 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 ] call ex1 % set_pnm ( encoding = 'ascii' , file_format = 'pbm' , width = 6 , height = 10 , comment = 'example 1' , pixels = px ) call ex1 % export_pnm ( 'pnm_files/img1_ascii' ) call ex1 % finalize () end program example1","tags":"","loc":"sourcefile/example1.f90.html"},{"title":"example23.f90 – ForImage","text":"This file depends on sourcefile~~example23.f90~~EfferentGraph sourcefile~example23.f90 example23.f90 sourcefile~forimage.f90 forimage.f90 sourcefile~example23.f90->sourcefile~forimage.f90 sourcefile~lut.f90 lut.f90 sourcefile~forimage.f90->sourcefile~lut.f90 sourcefile~pnm.f90 pnm.f90 sourcefile~forimage.f90->sourcefile~pnm.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code program example23 use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex23_1 , ex23_2 , ex23_3 integer , dimension ( 10 , 6 ) :: px1 integer , dimension ( 60 , 60 ) :: px2 integer , dimension ( 4 , 12 ) :: px3 px1 ( 1 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px1 ( 2 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px1 ( 3 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px1 ( 4 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px1 ( 5 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px1 ( 6 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px1 ( 7 ,:) = [ 1 , 0 , 0 , 0 , 1 , 0 ] px1 ( 8 ,:) = [ 0 , 1 , 1 , 1 , 0 , 0 ] px1 ( 9 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 ] px1 ( 10 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 ] call ex23_1 % set_pnm ( encoding = 'binary' , file_format = 'pbm' , width = 6 , height = 10 , comment = 'example 1' , pixels = px1 ) call ex23_1 % flip_horizontal () call ex23_1 % export_pnm ( 'pnm_files/img1_binary_flip_horizontal' ) call ex23_1 % finalize () call ex23_1 % set_pnm ( encoding = 'binary' , file_format = 'pbm' , width = 6 , height = 10 , comment = 'example 1' , pixels = px1 ) call ex23_1 % flip_vertical () call ex23_1 % export_pnm ( 'pnm_files/img1_binary_flip_vertical' ) call ex23_1 % finalize () px2 = transpose ( reshape (& [ 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 242 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 251 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 242 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 251 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 242 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 251 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 242 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 251 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 242 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 251 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 242 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 119 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 242 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 119 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 242 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 119 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 242 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 119 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 242 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 119 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 242 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 119 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 242 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 119 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 242 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 119 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 242 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 119 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 242 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 119 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 242 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 119 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 242 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 119 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 242 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 119 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 242 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 237 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 242 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 237 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 242 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 237 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 242 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 237 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 242 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 237 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 242 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 119 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 242 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 119 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 242 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 119 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 242 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 119 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 242 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 119 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 242 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 119 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 242 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 119 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 242 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 119 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 242 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 119 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 242 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 119 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 242 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 119 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 242 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 119 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 242 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 119 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 242 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 119 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 242 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 119 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 242 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 119 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 242 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 119 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 242 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 119 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 242 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 119 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 242 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 119 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 242 ,& 0 ,& 0 ,& 0 ,& 0 ,& 0 ,& 119 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ,& 255 ]& , shape = shape ( px2 ))) call ex23_2 % set_pnm ( encoding = 'binary' , file_format = 'pgm' , width = 60 , height = 60 , max_color = 255 , comment = 'example 2' , pixels = px2 ) call ex23_2 % flip_horizontal () call ex23_2 % export_pnm ( 'pnm_files/img2_binary_flip_horizontal' ) call ex23_2 % finalize () call ex23_2 % set_pnm ( encoding = 'binary' , file_format = 'pgm' , width = 60 , height = 60 , max_color = 255 , comment = 'example 2' , pixels = px2 ) call ex23_2 % flip_vertical () call ex23_2 % export_pnm ( 'pnm_files/img2_binary_flip_vertical' ) call ex23_2 % finalize () px3 ( 1 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 15 , 0 , 15 ] px3 ( 2 ,:) = [ 0 , 0 , 0 , 0 , 15 , 7 , 0 , 0 , 0 , 0 , 0 , 0 ] px3 ( 3 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 15 , 7 , 0 , 0 , 0 ] px3 ( 4 ,:) = [ 15 , 0 , 15 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ] call ex23_3 % set_pnm ( encoding = 'binary' , file_format = 'ppm' , width = 4 , height = 4 , max_color = 15 , comment = 'example 2' , pixels = px3 ) call ex23_3 % flip_horizontal () call ex23_3 % export_pnm ( 'pnm_files/img6_binary_flip_horizontal' ) call ex23_3 % finalize () call ex23_3 % set_pnm ( encoding = 'binary' , file_format = 'ppm' , width = 4 , height = 4 , max_color = 15 , comment = 'example 2' , pixels = px3 ) call ex23_3 % flip_vertical () call ex23_3 % export_pnm ( 'pnm_files/img6_binary_flip_vertical' ) call ex23_3 % finalize () end program example23","tags":"","loc":"sourcefile/example23.f90.html"},{"title":"pnm.f90 – ForImage","text":"Files dependent on this one sourcefile~~pnm.f90~~AfferentGraph sourcefile~pnm.f90 pnm.f90 sourcefile~forimage.f90 forimage.f90 sourcefile~forimage.f90->sourcefile~pnm.f90 sourcefile~example1.f90 example1.f90 sourcefile~example1.f90->sourcefile~forimage.f90 sourcefile~example10.f90 example10.f90 sourcefile~example10.f90->sourcefile~forimage.f90 sourcefile~example11.f90 example11.f90 sourcefile~example11.f90->sourcefile~forimage.f90 sourcefile~example12.f90 example12.f90 sourcefile~example12.f90->sourcefile~forimage.f90 sourcefile~example13.f90 example13.f90 sourcefile~example13.f90->sourcefile~forimage.f90 sourcefile~example14.f90 example14.f90 sourcefile~example14.f90->sourcefile~forimage.f90 sourcefile~example15.f90 example15.f90 sourcefile~example15.f90->sourcefile~forimage.f90 sourcefile~example16.f90 example16.f90 sourcefile~example16.f90->sourcefile~forimage.f90 sourcefile~example17.f90 example17.f90 sourcefile~example17.f90->sourcefile~forimage.f90 sourcefile~example18.f90 example18.f90 sourcefile~example18.f90->sourcefile~forimage.f90 sourcefile~example19.f90 example19.f90 sourcefile~example19.f90->sourcefile~forimage.f90 sourcefile~example2.f90 example2.f90 sourcefile~example2.f90->sourcefile~forimage.f90 sourcefile~example20.f90 example20.f90 sourcefile~example20.f90->sourcefile~forimage.f90 sourcefile~example21.f90 example21.f90 sourcefile~example21.f90->sourcefile~forimage.f90 sourcefile~example22.f90 example22.f90 sourcefile~example22.f90->sourcefile~forimage.f90 sourcefile~example23.f90 example23.f90 sourcefile~example23.f90->sourcefile~forimage.f90 sourcefile~example24.f90 example24.f90 sourcefile~example24.f90->sourcefile~forimage.f90 sourcefile~example3.f90 example3.f90 sourcefile~example3.f90->sourcefile~forimage.f90 sourcefile~example4.f90 example4.f90 sourcefile~example4.f90->sourcefile~forimage.f90 sourcefile~example5.f90 example5.f90 sourcefile~example5.f90->sourcefile~forimage.f90 sourcefile~example6.f90 example6.f90 sourcefile~example6.f90->sourcefile~forimage.f90 sourcefile~example7.f90 example7.f90 sourcefile~example7.f90->sourcefile~forimage.f90 sourcefile~example8.f90 example8.f90 sourcefile~example8.f90->sourcefile~forimage.f90 sourcefile~example9.f90 example9.f90 sourcefile~example9.f90->sourcefile~forimage.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code module pnm use iso_fortran_env , only : rk => real64 implicit none private public format_pnm !=============================================================================== type format_pnm character ( 2 ) :: magic_number integer :: width integer :: height character ( 70 ) :: comment integer :: max_color integer , dimension (:,:), allocatable :: pixels character ( 3 ) :: file_format character ( 6 ) :: encoding contains procedure :: set_format procedure :: set_file_format procedure :: set_magicnumber procedure :: set_width procedure :: set_height procedure :: set_comment procedure :: set_max_color procedure :: set_header procedure :: allocate_pixels procedure :: set_pixels procedure :: export_pnm procedure :: set_pnm procedure :: import_pnm procedure :: finalize => deallocate_pnm procedure :: negative procedure :: brighten procedure :: swap_channels procedure :: remove_channels procedure :: greyscale procedure :: rotate procedure :: flip_horizontal procedure :: flip_vertical procedure :: crop end type format_pnm !=============================================================================== contains !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine crop ( this , start_row , end_row , start_col , end_col ) class ( format_pnm ), intent ( inout ) :: this integer , intent ( in ) :: start_row , end_row , start_col , end_col integer :: cropped_start_row , cropped_end_row , cropped_start_col , cropped_end_col integer , dimension (:,:), allocatable :: cropped_pixels integer :: i , j , cropped_height , cropped_width ! Check if the cropping coordinates are within the image boundaries cropped_start_row = max ( 1 , start_row ) cropped_end_row = min ( this % height , end_row ) cropped_start_col = max ( 1 , start_col ) cropped_end_col = min ( this % width , end_col ) ! Calculate the dimensions of the cropped image cropped_height = cropped_end_row - cropped_start_row + 1 cropped_width = cropped_end_col - cropped_start_col + 1 select case ( this % file_format ) case ( 'pbm' , 'pgm' ) ! Allocate memory for cropped image pixels allocate ( cropped_pixels ( cropped_height , cropped_width )) ! Copy the cropped pixels to the new array do i = 1 , cropped_height do j = 1 , cropped_width cropped_pixels ( i , j ) = this % pixels ( cropped_start_row - 1 + i , ( cropped_start_col - 1 ) + j ) end do end do case ( 'ppm' ) ! Allocate memory for cropped image pixels allocate ( cropped_pixels ( cropped_height , 3 * cropped_width )) ! Copy the cropped pixels to the new array do i = 1 , cropped_height do j = 1 , 3 * cropped_width cropped_pixels ( i , j ) = this % pixels ( cropped_start_row - 1 + i , ( cropped_start_col - 1 ) * 3 + j ) end do end do end select ! Update image dimensions and pixels this % height = cropped_height this % width = cropped_width deallocate ( this % pixels ) call this % allocate_pixels () this % pixels = cropped_pixels ! Deallocate temporary array deallocate ( cropped_pixels ) end subroutine crop !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine flip_vertical ( this ) class ( format_pnm ), intent ( inout ) :: this this % pixels (:,:) = this % pixels ( size ( this % pixels , 1 ): 1 : - 1 , :) end subroutine flip_vertical !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine flip_horizontal ( this ) class ( format_pnm ), intent ( inout ) :: this integer , dimension ( size ( this % pixels , 1 )) :: buffer integer , dimension ( size ( this % pixels , 1 ), 3 ) :: buffer3 integer :: j select case ( this % file_format ) case ( 'pbm' , 'pgm' ) do j = 1 , this % width / 2 buffer (:) = this % pixels (:, this % width - j + 1 ) this % pixels (:, this % width - j + 1 ) = this % pixels (:, j ) this % pixels (:, j ) = buffer (:) end do case ( 'ppm' ) do j = 1 , this % width / 2 buffer3 (:, :) = this % pixels (:, 3 * j - 2 : 3 * j ) this % pixels (:, 3 * j - 2 : 3 * j ) = this % pixels (:, 3 * ( this % width - j + 1 ) - 2 : 3 * ( this % width - j + 1 )) this % pixels (:, 3 * ( this % width - j + 1 ) - 2 : 3 * ( this % width - j + 1 )) = buffer3 (:, :) end do end select end subroutine flip_horizontal !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine rotate ( this , angle ) class ( format_pnm ), intent ( inout ) :: this integer , intent ( in ) :: angle integer , dimension (:,:), allocatable :: rotated_pixels integer :: target_height , target_width integer :: i , j ! Determine the target height and width based on the rotation angle select case ( angle ) case ( 90 , - 90 , 270 , - 270 ) target_height = this % width target_width = this % height case ( 180 , - 180 ) target_height = this % height target_width = this % width case default error stop \"Invalid rotation angle. Valid angles are 90, 180, 270, -90, -180, -270.\" end select select case ( this % file_format ) case ( 'pbm' , 'pgm' ) ! Allocate memory for rotated_pixels array allocate ( rotated_pixels ( target_height , target_width )) ! Rotate pixels based on the specified angle select case ( angle ) case ( 90 , - 270 ) do i = 1 , this % height do j = 1 , this % width rotated_pixels ( j , this % height - i + 1 ) = this % pixels ( i , j ) end do end do case ( 180 , - 180 ) do i = 1 , this % height do j = 1 , this % width rotated_pixels ( this % height - i + 1 , this % width - j + 1 ) = this % pixels ( i , j ) end do end do case ( 270 , - 90 ) do i = 1 , this % height do j = 1 , this % width rotated_pixels ( this % width - j + 1 , i ) = this % pixels ( i , j ) end do end do end select case ( 'ppm' ) ! Allocate memory for rotated_pixels array allocate ( rotated_pixels ( target_height , 3 * target_width )) ! Rotate pixels based on the specified angle select case ( angle ) case ( 90 , - 270 ) do i = 1 , this % height do j = 1 , this % width rotated_pixels ( j , 3 * ( this % height - i + 1 ) - 2 : 3 * ( this % height - i + 1 )) = this % pixels ( i , 3 * j - 2 : 3 * j ) end do end do case ( 180 , - 180 ) do i = 1 , this % height do j = 1 , this % width rotated_pixels ( this % height - i + 1 , 3 * ( this % width - j + 1 ) - 2 : 3 * ( this % width - j + 1 )) = this % pixels ( i , 3 * j - 2 : 3 * j ) end do end do case ( 270 , - 90 ) do i = 1 , this % height do j = 1 , this % width rotated_pixels ( this % width - j + 1 , 3 * i - 2 : 3 * i ) = this % pixels ( i , 3 * j - 2 : 3 * j ) end do end do end select end select ! Update height and width of the image this % height = target_height this % width = target_width deallocate ( this % pixels ) call this % allocate_pixels () ! Update the original pixels with rotated pixels this % pixels = rotated_pixels ! Deallocate rotated_pixels array deallocate ( rotated_pixels ) end subroutine rotate !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine greyscale ( this ) class ( format_pnm ), intent ( inout ) :: this real ( rk ) :: gsc integer :: i , j ! Check if the file is ppm if ( this % file_format /= 'ppm' ) error stop 'greyscale: This function is only for ppm files.' do i = 1 , this % height do j = 1 , this % width ! Calculate a weighed average (here based on ITU Rec.709) of the 3 channels to get a gray color with the same brightness. gsc = 0.2126_rk * real ( this % pixels ( i , 3 * j - 2 ), kind = rk ) + & 0.7152_rk * real ( this % pixels ( i , 3 * j - 1 ), kind = rk ) + & 0.0722_rk * real ( this % pixels ( i , 3 * j - 0 ), kind = rk ) ! Convert the greyscale value back to integer and set it for all RGB channels this % pixels ( i , 3 * j - 2 : 3 * j ) = int ( gsc ) end do end do end subroutine greyscale !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine remove_channels ( this , remove_r , remove_g , remove_b ) class ( format_pnm ), intent ( inout ) :: this logical , optional , intent ( in ) :: remove_r , remove_g , remove_b ! Check if the file is ppm if ( this % file_format /= 'ppm' ) error stop 'remove_channels: This function is only for ppm files.' ! Remove R channel if ( present ( remove_r )) then if ( remove_r ) then this % pixels (:, 1 : size ( this % pixels , 2 ): 3 ) = 0 end if end if ! Remove G channel if ( present ( remove_g )) then if ( remove_g ) then this % pixels (:, 2 : size ( this % pixels , 2 ): 3 ) = 0 end if end if ! Remove B channel if ( present ( remove_b )) then if ( remove_b ) then this % pixels (:, 3 : size ( this % pixels , 2 ): 3 ) = 0 end if end if end subroutine remove_channels !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine swap_channels ( this , swap ) class ( format_pnm ), intent ( inout ) :: this character ( * ), intent ( in ) :: swap integer :: i , j , temp ! Check if the file is ppm if ( this % file_format /= 'ppm' ) error stop 'swap_channels: This function is only for ppm files.' ! Swap R and G channels if ( swap == 'rg' . or . swap == 'gr' . or . swap == 'RG' . or . swap == 'GR' ) then do i = 1 , this % height do j = 1 , this % width temp = this % pixels ( i , 3 * j - 2 ) this % pixels ( i , 3 * j - 2 ) = this % pixels ( i , 3 * j - 1 ) this % pixels ( i , 3 * j - 1 ) = temp end do end do end if ! Swap G and B channels if ( swap == 'gb' . or . swap == 'bg' . or . swap == 'GB' . or . swap == 'BG' ) then do i = 1 , this % height do j = 1 , this % width temp = this % pixels ( i , 3 * j - 1 ) this % pixels ( i , 3 * j - 1 ) = this % pixels ( i , 3 * j - 0 ) this % pixels ( i , 3 * j - 0 ) = temp end do end do end if ! Swap R and B channels if ( swap == 'rb' . or . swap == 'br' . or . swap == 'RB' . or . swap == 'BR' ) then do i = 1 , this % height do j = 1 , this % width temp = this % pixels ( i , 3 * j - 2 ) this % pixels ( i , 3 * j - 2 ) = this % pixels ( i , 3 * j - 0 ) this % pixels ( i , 3 * j - 0 ) = temp end do end do end if end subroutine swap_channels !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine brighten ( this , factor ) class ( format_pnm ), intent ( inout ) :: this integer , intent ( in ) :: factor this % pixels = min ( this % max_color , max ( 0 , this % pixels + factor )) end subroutine brighten !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine negative ( this ) class ( format_pnm ), intent ( inout ) :: this this % pixels = this % max_color - this % pixels end subroutine negative !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_file_format ( this , file_format ) class ( format_pnm ), intent ( inout ) :: this character ( 3 ), intent ( in ) :: file_format this % file_format = file_format end subroutine set_file_format !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_format ( this , encoding ) class ( format_pnm ), intent ( inout ) :: this character ( * ), intent ( in ) :: encoding this % encoding = trim ( encoding ) end subroutine set_format !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine deallocate_pnm ( this ) class ( format_pnm ), intent ( inout ) :: this if ( allocated ( this % pixels )) deallocate ( this % pixels ) end subroutine deallocate_pnm !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi impure subroutine import_pnm ( this , file_name , file_format , encoding ) class ( format_pnm ), intent ( inout ) :: this character ( * ), intent ( in ) :: file_name , encoding character ( 3 ), intent ( in ) :: file_format integer :: nunit , i , iostat character :: temp character , dimension (:), allocatable :: buffer_ch integer , dimension (:), allocatable :: buffer_int logical :: file_exists inquire ( file = file_name // '.' // file_format , exist = file_exists ) if ( file_exists ) then call this % set_file_format ( file_format ) call this % set_format ( encoding ) select case ( this % encoding ) case ( 'binary' , 'raw' ) select case ( file_format ) case ( 'pbm' ) open ( newunit = nunit , file = file_name // '.' // file_format , iostat = iostat ) if ( iostat /= 0 ) error stop 'Error opening the file.' read ( nunit , * ) this % magic_number read ( nunit , '(a,a)' ) temp , this % comment read ( nunit , * ) this % width , this % height allocate ( buffer_ch ( this % height * this % width )) buffer_ch = achar ( 0 ) read ( nunit , '(*(a))' , advance = 'yes' ) buffer_ch close ( nunit ) call this % allocate_pixels () this % pixels = transpose ( reshape ( ichar ( buffer_ch ), [ this % height , this % width ])) case ( 'pgm' ) open ( newunit = nunit , file = file_name // '.' // file_format , iostat = iostat ) if ( iostat /= 0 ) error stop 'Error opening the file.' read ( nunit , * ) this % magic_number read ( nunit , '(a,a)' ) temp , this % comment read ( nunit , * ) this % width , this % height read ( nunit , * ) this % max_color allocate ( buffer_ch ( this % height * this % width )) buffer_ch = achar ( 0 ) read ( nunit , '(*(a))' , advance = 'yes' ) buffer_ch close ( nunit ) call this % allocate_pixels () this % pixels = transpose ( reshape ( ichar ( buffer_ch ), [ this % height , this % width ])) case ( 'ppm' ) open ( newunit = nunit , file = file_name // '.' // file_format , iostat = iostat ) if ( iostat /= 0 ) error stop 'Error opening the file.' read ( nunit , * ) this % magic_number read ( nunit , '(a,a)' ) temp , this % comment read ( nunit , * ) this % width , this % height read ( nunit , * ) this % max_color allocate ( buffer_ch ( this % height * this % width * 3 )) buffer_ch = achar ( 0 ) read ( nunit , '(*(a))' , advance = 'yes' ) buffer_ch close ( nunit ) call this % allocate_pixels () this % pixels = transpose ( reshape ( ichar ( buffer_ch ), [ this % height , 3 * this % width ])) end select case ( 'ascii' , 'plain' ) select case ( file_format ) case ( 'pbm' ) open ( newunit = nunit , file = file_name // '.' // file_format , iostat = iostat ) if ( iostat /= 0 ) error stop 'Error opening the file.' read ( nunit , * ) this % magic_number read ( nunit , '(a,a)' ) temp , this % comment read ( nunit , * ) this % width , this % height call this % allocate_pixels () allocate ( buffer_int ( this % width )) buffer_int = 0 do i = 1 , size ( this % pixels , 1 ) read ( nunit , * ) buffer_int this % pixels ( i ,:) = buffer_int end do close ( nunit ) case ( 'pgm' ) open ( newunit = nunit , file = file_name // '.' // file_format , iostat = iostat ) if ( iostat /= 0 ) error stop 'Error opening the file.' read ( nunit , * ) this % magic_number read ( nunit , '(a,a)' ) temp , this % comment read ( nunit , * ) this % width , this % height read ( nunit , * ) this % max_color call this % allocate_pixels () allocate ( buffer_int ( this % width )) buffer_int = 0 do i = 1 , size ( this % pixels , 1 ) read ( nunit , * ) buffer_int this % pixels ( i ,:) = buffer_int end do close ( nunit ) case ( 'ppm' ) open ( newunit = nunit , file = file_name // '.' // file_format , iostat = iostat ) if ( iostat /= 0 ) error stop 'Error opening the file.' read ( nunit , * ) this % magic_number read ( nunit , '(a,a)' ) temp , this % comment read ( nunit , * ) this % width , this % height read ( nunit , * ) this % max_color call this % allocate_pixels () allocate ( buffer_int ( 3 * this % width )) buffer_int = 0 do i = 1 , size ( this % pixels , 1 ) read ( nunit , * ) buffer_int this % pixels ( i ,:) = buffer_int end do close ( nunit ) end select end select else error stop 'Error: File does not exist.' end if end subroutine import_pnm !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi pure subroutine set_pnm ( this , encoding , file_format , width , height , max_color , comment , pixels ) class ( format_pnm ), intent ( inout ) :: this integer , intent ( in ) :: width integer , intent ( in ) :: height character ( * ), intent ( in ) :: comment integer , optional , intent ( in ) :: max_color integer , dimension (:,:), intent ( in ) :: pixels character ( * ), intent ( in ) :: encoding character ( 3 ), intent ( in ) :: file_format character ( 2 ) :: magic_number call this % set_format ( encoding ) call this % set_file_format ( file_format ) select case ( this % encoding ) case ( 'ascii' , 'plain' ) select case ( this % file_format ) case ( 'pbm' ) magic_number = 'P1' case ( 'pgm' ) magic_number = 'P2' case ( 'ppm' ) magic_number = 'P3' end select case ( 'binary' , 'raw' ) select case ( this % file_format ) case ( 'pbm' ) magic_number = 'P4' case ( 'pgm' ) magic_number = 'P5' case ( 'ppm' ) magic_number = 'P6' end select end select call this % set_header ( magic_number , width , height , comment , max_color ) call this % allocate_pixels () call this % set_pixels ( pixels ) end subroutine set_pnm !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine allocate_pixels ( this ) class ( format_pnm ), intent ( inout ) :: this select case ( this % magic_number ) case ( 'P1' ) if (. not . allocated ( this % pixels )) allocate ( this % pixels ( this % height , this % width )) case ( 'P2' ) if (. not . allocated ( this % pixels )) allocate ( this % pixels ( this % height , this % width )) case ( 'P3' ) if (. not . allocated ( this % pixels )) allocate ( this % pixels ( this % height , 3 * this % width )) case ( 'P4' ) if (. not . allocated ( this % pixels )) allocate ( this % pixels ( this % height , this % width )) case ( 'P5' ) if (. not . allocated ( this % pixels )) allocate ( this % pixels ( this % height , this % width )) case ( 'P6' ) if (. not . allocated ( this % pixels )) allocate ( this % pixels ( this % height , 3 * this % width )) end select end subroutine allocate_pixels !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_magicnumber ( this , magic_number ) class ( format_pnm ), intent ( inout ) :: this character ( * ), intent ( in ) :: magic_number this % magic_number = magic_number end subroutine set_magicnumber !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_width ( this , width ) class ( format_pnm ), intent ( inout ) :: this integer , intent ( in ) :: width this % width = width end subroutine set_width !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_height ( this , height ) class ( format_pnm ), intent ( inout ) :: this integer , intent ( in ) :: height this % height = height end subroutine set_height !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_comment ( this , comment ) class ( format_pnm ), intent ( inout ) :: this character ( * ), intent ( in ) :: comment this % comment = comment end subroutine set_comment !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_max_color ( this , max_color ) class ( format_pnm ), intent ( inout ) :: this integer , intent ( in ) :: max_color this % max_color = max_color end subroutine set_max_color !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_header ( this , magic_number , width , height , comment , max_color ) class ( format_pnm ), intent ( inout ) :: this character ( * ), intent ( in ) :: magic_number integer , intent ( in ) :: width integer , intent ( in ) :: height character ( * ), intent ( in ) :: comment integer , optional , intent ( in ) :: max_color call this % set_magicnumber ( magic_number ) call this % set_width ( width ) call this % set_height ( height ) call this % set_comment ( comment ) if ( this % file_format /= 'pbm' ) call this % set_max_color ( max_color ) end subroutine set_header !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi pure subroutine set_pixels ( this , pixels ) class ( format_pnm ), intent ( inout ) :: this integer , dimension (:,:), intent ( in ) :: pixels this % pixels = pixels end subroutine set_pixels !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_pixel ( this , grey , r , g , b , i , j ) class ( format_pnm ), intent ( inout ) :: this integer , intent ( in ), optional :: grey integer , intent ( in ), optional :: r , g , b integer , intent ( in ) :: i , j select case ( this % magic_number ) case ( 'P1' ) this % pixels ( i , j ) = grey case ( 'P2' ) this % pixels ( i , j ) = grey case ( 'P3' ) this % pixels ( i , 3 * j - 2 ) = r this % pixels ( i , 3 * j - 1 ) = g this % pixels ( i , 3 * j - 0 ) = b end select end subroutine set_pixel !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi impure subroutine export_pnm ( this , file_name , encoding ) class ( format_pnm ), intent ( inout ) :: this character ( * ), intent ( in ) :: file_name character ( * ), intent ( in ), optional :: encoding integer :: nunit , i , j logical :: file_exists integer , dimension ( size ( this % pixels , 2 )) :: buffer integer :: iostat if ( present ( encoding )) then call this % set_format ( encoding ) select case ( this % encoding ) case ( 'ascii' , 'plain' ) select case ( this % file_format ) case ( 'pbm' ) this % magic_number = 'P1' case ( 'pgm' ) this % magic_number = 'P2' case ( 'ppm' ) this % magic_number = 'P3' end select case ( 'binary' , 'raw' ) select case ( this % file_format ) case ( 'pbm' ) this % magic_number = 'P4' case ( 'pgm' ) this % magic_number = 'P5' case ( 'ppm' ) this % magic_number = 'P6' end select end select end if select case ( this % magic_number ) case ( 'P1' , 'P2' , 'P3' ) open ( newunit = nunit , file = file_name // '.' // this % file_format , status = 'replace' , iostat = iostat ) if ( iostat /= 0 ) error stop 'Error opening the file.' write ( nunit , '(a)' ) this % magic_number write ( nunit , '(a,a)' ) '# ' , trim ( adjustl ( this % comment )) write ( nunit , '(g0,1x,g0)' ) this % width , this % height if ( this % file_format /= 'pbm' ) write ( nunit , '(g0)' ) this % max_color do i = 1 , size ( this % pixels , 1 ) buffer = this % pixels ( i ,:) write ( nunit , '(*(I3,1x))' ) buffer end do close ( nunit ) case ( 'P4' , 'P5' , 'P6' ) open ( newunit = nunit , file = file_name // '.' // this % file_format , status = 'replace' , iostat = iostat ) if ( iostat /= 0 ) error stop 'Error opening the file.' write ( nunit , '(a)' ) this % magic_number write ( nunit , '(a,a)' ) '# ' , trim ( adjustl ( this % comment )) write ( nunit , '(g0,1x,g0)' ) this % width , this % height if ( this % file_format /= 'pbm' ) write ( nunit , '(g0)' ) this % max_color do i = 1 , size ( this % pixels , 1 ) buffer = this % pixels ( i ,:) write ( nunit , '(*(a))' , advance = 'no' ) achar ( buffer ) end do close ( nunit ) end select end subroutine export_pnm !=============================================================================== end module pnm","tags":"","loc":"sourcefile/pnm.f90.html"},{"title":"example22.f90 – ForImage","text":"This file depends on sourcefile~~example22.f90~~EfferentGraph sourcefile~example22.f90 example22.f90 sourcefile~forimage.f90 forimage.f90 sourcefile~example22.f90->sourcefile~forimage.f90 sourcefile~lut.f90 lut.f90 sourcefile~forimage.f90->sourcefile~lut.f90 sourcefile~pnm.f90 pnm.f90 sourcefile~forimage.f90->sourcefile~pnm.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code program example22 use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex22_1 , ex22_2 , ex22_3 integer , dimension ( 10 , 6 ) :: px1 integer , dimension ( 60 , 60 ) :: px2 integer , dimension ( 4 , 12 ) :: px3 px1 ( 1 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px1 ( 2 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px1 ( 3 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px1 ( 4 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px1 ( 5 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px1 ( 6 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px1 ( 7 ,:) = [ 1 , 0 , 0 , 0 , 1 , 0 ] px1 ( 8 ,:) = [ 0 , 1 , 1 , 1 , 0 , 0 ] px1 ( 9 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 ] px1 ( 10 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 ] call ex22_1 % set_pnm ( encoding = 'binary' , file_format = 'pbm' , width = 6 , height = 10 , comment = 'example 1' , pixels = px1 ) call ex22_1 % rotate ( - 90 ) call ex22_1 % export_pnm ( 'pnm_files/img1_binary_rotate' ) call ex22_1 % finalize () px2 = transpose ( reshapeshape = shape ( px2 ))) call ex22_2 % set_pnm ( encoding = 'binary' , file_format = 'pgm' , width = 60 , height = 60 , max_color = 255 , comment = 'example 2' , pixels = px2 ) call ex22_2 % rotate ( - 90 ) call ex22_2 % export_pnm ( 'pnm_files/img2_binary_rotate' ) call ex22_2 % finalize () px3 ( 1 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 15 , 0 , 15 ] px3 ( 2 ,:) = [ 0 , 0 , 0 , 0 , 15 , 7 , 0 , 0 , 0 , 0 , 0 , 0 ] px3 ( 3 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 15 , 7 , 0 , 0 , 0 ] px3 ( 4 ,:) = [ 15 , 0 , 15 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ] call ex22_3 % set_pnm ( encoding = 'binary' , file_format = 'ppm' , width = 4 , height = 4 , max_color = 15 , comment = 'example 2' , pixels = px3 ) call ex22_3 % rotate ( - 90 ) call ex22_3 % export_pnm ( 'pnm_files/img6_binary_rotate' ) call ex22_3 % finalize () end program example22","tags":"","loc":"sourcefile/example22.f90.html"},{"title":"example6.f90 – ForImage","text":"This file depends on sourcefile~~example6.f90~~EfferentGraph sourcefile~example6.f90 example6.f90 sourcefile~forimage.f90 forimage.f90 sourcefile~example6.f90->sourcefile~forimage.f90 sourcefile~lut.f90 lut.f90 sourcefile~forimage.f90->sourcefile~lut.f90 sourcefile~pnm.f90 pnm.f90 sourcefile~forimage.f90->sourcefile~pnm.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code program example6 use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex6 integer , dimension ( 4 , 12 ) :: px px ( 1 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 15 , 0 , 15 ] px ( 2 ,:) = [ 0 , 0 , 0 , 0 , 15 , 7 , 0 , 0 , 0 , 0 , 0 , 0 ] px ( 3 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 15 , 7 , 0 , 0 , 0 ] px ( 4 ,:) = [ 15 , 0 , 15 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ] call ex6 % set_pnm ( encoding = 'binary' , file_format = 'ppm' , width = 4 , height = 4 , max_color = 15 , comment = 'example 2' , pixels = px ) call ex6 % export_pnm ( 'pnm_files/img6_binary' ) call ex6 % finalize () end program example6","tags":"","loc":"sourcefile/example6.f90.html"},{"title":"example17.f90 – ForImage","text":"This file depends on sourcefile~~example17.f90~~EfferentGraph sourcefile~example17.f90 example17.f90 sourcefile~forimage.f90 forimage.f90 sourcefile~example17.f90->sourcefile~forimage.f90 sourcefile~lut.f90 lut.f90 sourcefile~forimage.f90->sourcefile~lut.f90 sourcefile~pnm.f90 pnm.f90 sourcefile~forimage.f90->sourcefile~pnm.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code program example17 use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex17_1 , ex17_2 , ex17_3 integer , dimension ( 10 , 6 ) :: px1 integer , dimension ( 60 , 60 ) :: px2 integer , dimension ( 4 , 12 ) :: px3 px1 ( 1 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px1 ( 2 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px1 ( 3 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px1 ( 4 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px1 ( 5 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px1 ( 6 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px1 ( 7 ,:) = [ 1 , 0 , 0 , 0 , 1 , 0 ] px1 ( 8 ,:) = [ 0 , 1 , 1 , 1 , 0 , 0 ] px1 ( 9 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 ] px1 ( 10 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 ] call ex17_1 % set_pnm ( encoding = 'binary' , file_format = 'pbm' , width = 6 , height = 10 , comment = 'example 1' , pixels = px1 ) call ex17_1 % export_pnm ( 'pnm_files/img4_binary_negative' ) call ex17_1 % finalize () px2 = transpose ( reshapeshape = shape ( px2 ))) call ex17_2 % set_pnm ( encoding = 'binary' , file_format = 'pgm' , width = 60 , height = 60 , max_color = 255 , comment = 'example 2' , pixels = px2 ) call ex17_2 % negative () call ex17_2 % export_pnm ( 'pnm_files/img5_binary_negative' ) call ex17_2 % finalize () px3 ( 1 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 15 , 0 , 15 ] px3 ( 2 ,:) = [ 0 , 0 , 0 , 0 , 15 , 7 , 0 , 0 , 0 , 0 , 0 , 0 ] px3 ( 3 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 15 , 7 , 0 , 0 , 0 ] px3 ( 4 ,:) = [ 15 , 0 , 15 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ] call ex17_3 % set_pnm ( encoding = 'binary' , file_format = 'ppm' , width = 4 , height = 4 , max_color = 15 , comment = 'example 2' , pixels = px3 ) call ex17_3 % negative () call ex17_3 % export_pnm ( 'pnm_files/img6_binary_negative' ) call ex17_3 % finalize () end program example17","tags":"","loc":"sourcefile/example17.f90.html"},{"title":"forimage.f90 – ForImage","text":"This file depends on sourcefile~~forimage.f90~~EfferentGraph sourcefile~forimage.f90 forimage.f90 sourcefile~lut.f90 lut.f90 sourcefile~forimage.f90->sourcefile~lut.f90 sourcefile~pnm.f90 pnm.f90 sourcefile~forimage.f90->sourcefile~pnm.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Files dependent on this one sourcefile~~forimage.f90~~AfferentGraph sourcefile~forimage.f90 forimage.f90 sourcefile~example1.f90 example1.f90 sourcefile~example1.f90->sourcefile~forimage.f90 sourcefile~example10.f90 example10.f90 sourcefile~example10.f90->sourcefile~forimage.f90 sourcefile~example11.f90 example11.f90 sourcefile~example11.f90->sourcefile~forimage.f90 sourcefile~example12.f90 example12.f90 sourcefile~example12.f90->sourcefile~forimage.f90 sourcefile~example13.f90 example13.f90 sourcefile~example13.f90->sourcefile~forimage.f90 sourcefile~example14.f90 example14.f90 sourcefile~example14.f90->sourcefile~forimage.f90 sourcefile~example15.f90 example15.f90 sourcefile~example15.f90->sourcefile~forimage.f90 sourcefile~example16.f90 example16.f90 sourcefile~example16.f90->sourcefile~forimage.f90 sourcefile~example17.f90 example17.f90 sourcefile~example17.f90->sourcefile~forimage.f90 sourcefile~example18.f90 example18.f90 sourcefile~example18.f90->sourcefile~forimage.f90 sourcefile~example19.f90 example19.f90 sourcefile~example19.f90->sourcefile~forimage.f90 sourcefile~example2.f90 example2.f90 sourcefile~example2.f90->sourcefile~forimage.f90 sourcefile~example20.f90 example20.f90 sourcefile~example20.f90->sourcefile~forimage.f90 sourcefile~example21.f90 example21.f90 sourcefile~example21.f90->sourcefile~forimage.f90 sourcefile~example22.f90 example22.f90 sourcefile~example22.f90->sourcefile~forimage.f90 sourcefile~example23.f90 example23.f90 sourcefile~example23.f90->sourcefile~forimage.f90 sourcefile~example24.f90 example24.f90 sourcefile~example24.f90->sourcefile~forimage.f90 sourcefile~example3.f90 example3.f90 sourcefile~example3.f90->sourcefile~forimage.f90 sourcefile~example4.f90 example4.f90 sourcefile~example4.f90->sourcefile~forimage.f90 sourcefile~example5.f90 example5.f90 sourcefile~example5.f90->sourcefile~forimage.f90 sourcefile~example6.f90 example6.f90 sourcefile~example6.f90->sourcefile~forimage.f90 sourcefile~example7.f90 example7.f90 sourcefile~example7.f90->sourcefile~forimage.f90 sourcefile~example8.f90 example8.f90 sourcefile~example8.f90->sourcefile~forimage.f90 sourcefile~example9.f90 example9.f90 sourcefile~example9.f90->sourcefile~forimage.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code module forimage use pnm use lut private public format_pnm , format_lut end module forimage","tags":"","loc":"sourcefile/forimage.f90.html"},{"title":"example5.f90 – ForImage","text":"This file depends on sourcefile~~example5.f90~~EfferentGraph sourcefile~example5.f90 example5.f90 sourcefile~forimage.f90 forimage.f90 sourcefile~example5.f90->sourcefile~forimage.f90 sourcefile~lut.f90 lut.f90 sourcefile~forimage.f90->sourcefile~lut.f90 sourcefile~pnm.f90 pnm.f90 sourcefile~forimage.f90->sourcefile~pnm.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code program example use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex5 integer , dimension ( 60 , 60 ) :: px px = transpose ( reshapeshape = shape ( px ))) call ex5 % set_pnm ( encoding = 'binary' , file_format = 'pgm' , width = 60 , height = 60 , max_color = 255 , comment = 'example 2' , pixels = px ) call ex5 % export_pnm ( 'pnm_files/img5_binary' ) call ex5 % finalize () end program example","tags":"","loc":"sourcefile/example5.f90.html"},{"title":"example3.f90 – ForImage","text":"This file depends on sourcefile~~example3.f90~~EfferentGraph sourcefile~example3.f90 example3.f90 sourcefile~forimage.f90 forimage.f90 sourcefile~example3.f90->sourcefile~forimage.f90 sourcefile~lut.f90 lut.f90 sourcefile~forimage.f90->sourcefile~lut.f90 sourcefile~pnm.f90 pnm.f90 sourcefile~forimage.f90->sourcefile~pnm.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code program example3 use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex3 integer , dimension ( 4 , 12 ) :: px px ( 1 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 15 , 0 , 15 ] px ( 2 ,:) = [ 0 , 0 , 0 , 0 , 15 , 7 , 0 , 0 , 0 , 0 , 0 , 0 ] px ( 3 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 15 , 7 , 0 , 0 , 0 ] px ( 4 ,:) = [ 15 , 0 , 15 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ] call ex3 % set_pnm ( encoding = 'ascii' , file_format = 'ppm' , width = 4 , height = 4 , max_color = 15 , comment = 'example 2' , pixels = px ) call ex3 % export_pnm ( 'pnm_files/img3_ascii' ) call ex3 % finalize () end program example3","tags":"","loc":"sourcefile/example3.f90.html"},{"title":"example21.f90 – ForImage","text":"This file depends on sourcefile~~example21.f90~~EfferentGraph sourcefile~example21.f90 example21.f90 sourcefile~forimage.f90 forimage.f90 sourcefile~example21.f90->sourcefile~forimage.f90 sourcefile~lut.f90 lut.f90 sourcefile~forimage.f90->sourcefile~lut.f90 sourcefile~pnm.f90 pnm.f90 sourcefile~forimage.f90->sourcefile~pnm.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code program example21 use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex21 integer , dimension ( 4 , 12 ) :: px px ( 1 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 15 , 0 , 15 ] px ( 2 ,:) = [ 0 , 0 , 0 , 0 , 15 , 7 , 0 , 0 , 0 , 0 , 0 , 0 ] px ( 3 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 15 , 7 , 0 , 0 , 0 ] px ( 4 ,:) = [ 15 , 0 , 15 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ] call ex21 % set_pnm ( encoding = 'binary' , file_format = 'ppm' , width = 4 , height = 4 , max_color = 15 , comment = 'example 2' , pixels = px ) call ex21 % greyscale () call ex21 % export_pnm ( 'pnm_files/img6_binary_greyscale' ) call ex21 % finalize () end program example21","tags":"","loc":"sourcefile/example21.f90.html"},{"title":"example8.f90 – ForImage","text":"This file depends on sourcefile~~example8.f90~~EfferentGraph sourcefile~example8.f90 example8.f90 sourcefile~forimage.f90 forimage.f90 sourcefile~example8.f90->sourcefile~forimage.f90 sourcefile~lut.f90 lut.f90 sourcefile~forimage.f90->sourcefile~lut.f90 sourcefile~pnm.f90 pnm.f90 sourcefile~forimage.f90->sourcefile~pnm.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code program example8 use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex8 call ex8 % import_pnm ( 'pnm_files/img2_ascii' , 'pgm' , 'ascii' ) call ex8 % export_pnm ( 'pnm_files/img2_ascii_ex' ) call ex8 % finalize () end program example8","tags":"","loc":"sourcefile/example8.f90.html"},{"title":"lut.f90 – ForImage","text":"Files dependent on this one sourcefile~~lut.f90~~AfferentGraph sourcefile~lut.f90 lut.f90 sourcefile~forimage.f90 forimage.f90 sourcefile~forimage.f90->sourcefile~lut.f90 sourcefile~example1.f90 example1.f90 sourcefile~example1.f90->sourcefile~forimage.f90 sourcefile~example10.f90 example10.f90 sourcefile~example10.f90->sourcefile~forimage.f90 sourcefile~example11.f90 example11.f90 sourcefile~example11.f90->sourcefile~forimage.f90 sourcefile~example12.f90 example12.f90 sourcefile~example12.f90->sourcefile~forimage.f90 sourcefile~example13.f90 example13.f90 sourcefile~example13.f90->sourcefile~forimage.f90 sourcefile~example14.f90 example14.f90 sourcefile~example14.f90->sourcefile~forimage.f90 sourcefile~example15.f90 example15.f90 sourcefile~example15.f90->sourcefile~forimage.f90 sourcefile~example16.f90 example16.f90 sourcefile~example16.f90->sourcefile~forimage.f90 sourcefile~example17.f90 example17.f90 sourcefile~example17.f90->sourcefile~forimage.f90 sourcefile~example18.f90 example18.f90 sourcefile~example18.f90->sourcefile~forimage.f90 sourcefile~example19.f90 example19.f90 sourcefile~example19.f90->sourcefile~forimage.f90 sourcefile~example2.f90 example2.f90 sourcefile~example2.f90->sourcefile~forimage.f90 sourcefile~example20.f90 example20.f90 sourcefile~example20.f90->sourcefile~forimage.f90 sourcefile~example21.f90 example21.f90 sourcefile~example21.f90->sourcefile~forimage.f90 sourcefile~example22.f90 example22.f90 sourcefile~example22.f90->sourcefile~forimage.f90 sourcefile~example23.f90 example23.f90 sourcefile~example23.f90->sourcefile~forimage.f90 sourcefile~example24.f90 example24.f90 sourcefile~example24.f90->sourcefile~forimage.f90 sourcefile~example3.f90 example3.f90 sourcefile~example3.f90->sourcefile~forimage.f90 sourcefile~example4.f90 example4.f90 sourcefile~example4.f90->sourcefile~forimage.f90 sourcefile~example5.f90 example5.f90 sourcefile~example5.f90->sourcefile~forimage.f90 sourcefile~example6.f90 example6.f90 sourcefile~example6.f90->sourcefile~forimage.f90 sourcefile~example7.f90 example7.f90 sourcefile~example7.f90->sourcefile~forimage.f90 sourcefile~example8.f90 example8.f90 sourcefile~example8.f90->sourcefile~forimage.f90 sourcefile~example9.f90 example9.f90 sourcefile~example9.f90->sourcefile~forimage.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code module lut implicit none private public format_lut !=============================================================================== type format_lut integer :: num_colors integer :: dim_colors integer , dimension (:,:), allocatable :: colors contains procedure :: allocate_colors procedure :: set procedure :: set_num_colors procedure :: get_num_colors procedure :: set_dim_colors procedure :: get_dim_colors procedure :: set_colors procedure :: get_colors procedure :: export procedure :: import procedure :: finalize => deallocate_lut end type format_lut !=============================================================================== contains !=============================================================================== !> author: Seyed Ali Ghasemi pure elemental subroutine allocate_colors ( this ) class ( format_lut ), intent ( inout ) :: this if ( allocated ( this % colors )) deallocate ( this % colors ) allocate ( this % colors ( this % num_colors , this % dim_colors )) end subroutine allocate_colors !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi pure subroutine set ( this , num_colors , dim_colors , colors ) class ( format_lut ), intent ( inout ) :: this integer , intent ( in ) :: num_colors , dim_colors integer , dimension (:,:), intent ( in ) :: colors this % num_colors = num_colors this % dim_colors = dim_colors call this % allocate_colors () this % colors = colors end subroutine set !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi pure elemental subroutine set_num_colors ( this , num_colors ) class ( format_lut ), intent ( inout ) :: this integer , intent ( in ) :: num_colors this % num_colors = num_colors end subroutine set_num_colors !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi pure elemental subroutine set_dim_colors ( this , dim_colors ) class ( format_lut ), intent ( inout ) :: this integer , intent ( in ) :: dim_colors this % dim_colors = dim_colors end subroutine set_dim_colors !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi pure elemental function get_num_colors ( this ) result ( num_colors ) class ( format_lut ), intent ( in ) :: this integer :: num_colors num_colors = this % num_colors end function get_num_colors !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi pure elemental function get_dim_colors ( this ) result ( dim_colors ) class ( format_lut ), intent ( in ) :: this integer :: dim_colors dim_colors = this % dim_colors end function get_dim_colors !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi pure subroutine set_colors ( this , colors ) class ( format_lut ), intent ( inout ) :: this integer , dimension (:,:), intent ( in ) :: colors this % colors = colors end subroutine set_colors !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi pure function get_colors ( this ) result ( colors ) class ( format_lut ), intent ( in ) :: this integer , dimension (:,:), allocatable :: colors colors = this % colors end function get_colors !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi pure elemental subroutine deallocate_lut ( this ) class ( format_lut ), intent ( inout ) :: this if ( allocated ( this % colors )) deallocate ( this % colors ) end subroutine deallocate_lut !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi impure subroutine import ( this , file_name , dim_colors ) class ( format_lut ), intent ( inout ) :: this character ( * ), intent ( in ) :: file_name integer , intent ( in ) :: dim_colors integer , dimension ( 1 , dim_colors ) :: temp integer :: nunit , iostat , num_rows , i logical :: file_exists integer , dimension ( dim_colors ) :: buffer inquire ( file = file_name // '.lut' , exist = file_exists ) if ( file_exists ) then open ( newunit = nunit , file = file_name // '.lut' , status = 'old' , action = 'read' , iostat = iostat ) if ( iostat /= 0 ) error stop 'Error opening the file.' num_rows = 0 do read ( nunit , * , iostat = iostat ) temp (:,:) if ( iostat /= 0 ) exit num_rows = num_rows + 1 end do call this % set_num_colors ( num_rows ) call this % set_dim_colors ( dim_colors ) call this % allocate_colors () rewind ( nunit ) do i = 1 , num_rows read ( nunit , * ) buffer this % colors ( i ,:) = buffer end do close ( nunit ) else error stop 'File ' // file_name // '.lut' // ' does not exist!' end if end subroutine import !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi impure subroutine export ( this , file_name ) class ( format_lut ), intent ( inout ) :: this character ( * ), intent ( in ) :: file_name integer :: nunit , i integer , dimension ( this % dim_colors ) :: buffer integer :: iostat open ( newunit = nunit , file = file_name // '.lut' , status = 'replace' , action = 'write' , iostat = iostat ) if ( iostat /= 0 ) error stop 'Error opening the file.' do i = 1 , this % get_num_colors () buffer = this % colors ( i ,:) write ( nunit , '(*(I3,1x))' ) buffer end do close ( nunit ) end subroutine export !=============================================================================== end module lut","tags":"","loc":"sourcefile/lut.f90.html"},{"title":"example13.f90 – ForImage","text":"This file depends on sourcefile~~example13.f90~~EfferentGraph sourcefile~example13.f90 example13.f90 sourcefile~forimage.f90 forimage.f90 sourcefile~example13.f90->sourcefile~forimage.f90 sourcefile~lut.f90 lut.f90 sourcefile~forimage.f90->sourcefile~lut.f90 sourcefile~pnm.f90 pnm.f90 sourcefile~forimage.f90->sourcefile~pnm.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code program example13 use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex13 call ex13 % import_pnm ( 'pnm_files/img6_binary' , 'ppm' , 'binary' ) call ex13 % export_pnm ( 'pnm_files/img6_binary_to_ascii_ex' , 'ascii' ) call ex13 % finalize () end program example13","tags":"","loc":"sourcefile/example13.f90.html"},{"title":"example11.f90 – ForImage","text":"This file depends on sourcefile~~example11.f90~~EfferentGraph sourcefile~example11.f90 example11.f90 sourcefile~forimage.f90 forimage.f90 sourcefile~example11.f90->sourcefile~forimage.f90 sourcefile~lut.f90 lut.f90 sourcefile~forimage.f90->sourcefile~lut.f90 sourcefile~pnm.f90 pnm.f90 sourcefile~forimage.f90->sourcefile~pnm.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code program example11 use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex11 call ex11 % import_pnm ( 'pnm_files/img5_binary' , 'pgm' , 'binary' ) call ex11 % export_pnm ( 'pnm_files/img5_binary_ex' ) call ex11 % finalize () end program example11","tags":"","loc":"sourcefile/example11.f90.html"},{"title":"example16.f90 – ForImage","text":"This file depends on sourcefile~~example16.f90~~EfferentGraph sourcefile~example16.f90 example16.f90 sourcefile~forimage.f90 forimage.f90 sourcefile~example16.f90->sourcefile~forimage.f90 sourcefile~lut.f90 lut.f90 sourcefile~forimage.f90->sourcefile~lut.f90 sourcefile~pnm.f90 pnm.f90 sourcefile~forimage.f90->sourcefile~pnm.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code program example16 use forimage , only : format_lut implicit none type ( format_lut ) :: ex16 call ex16 % import ( file_name = 'lut_files/example15' , dim_colors = 3 ) call ex16 % export ( file_name = 'lut_files/example16' ) call ex16 % finalize () end program example16","tags":"","loc":"sourcefile/example16.f90.html"},{"title":"example19.f90 – ForImage","text":"This file depends on sourcefile~~example19.f90~~EfferentGraph sourcefile~example19.f90 example19.f90 sourcefile~forimage.f90 forimage.f90 sourcefile~example19.f90->sourcefile~forimage.f90 sourcefile~lut.f90 lut.f90 sourcefile~forimage.f90->sourcefile~lut.f90 sourcefile~pnm.f90 pnm.f90 sourcefile~forimage.f90->sourcefile~pnm.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code program example19 use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex19 integer , dimension ( 4 , 12 ) :: px px ( 1 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 15 , 0 , 15 ] px ( 2 ,:) = [ 0 , 0 , 0 , 0 , 15 , 7 , 0 , 0 , 0 , 0 , 0 , 0 ] px ( 3 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 15 , 7 , 0 , 0 , 0 ] px ( 4 ,:) = [ 15 , 0 , 15 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ] call ex19 % set_pnm ( encoding = 'binary' , file_format = 'ppm' , width = 4 , height = 4 , max_color = 15 , comment = 'example 2' , pixels = px ) call ex19 % swap_channels ( swap = 'bg' ) call ex19 % export_pnm ( 'pnm_files/img6_binary_swap' ) call ex19 % finalize () end program example19","tags":"","loc":"sourcefile/example19.f90.html"}]}