var tipuesearch = {"pages":[{"title":" ForImage ","text":"ForImage ForImage : A Fortran library for reading and writing images. fpm dependency How to run examples API documentation Contributing fpm dependency If you want to use ForImage as a dependency in your own fpm project,\nyou can easily include it by adding the following line to your fpm.toml file: [dependencies] forimage = { git = \"https://github.com/gha3mi/forimage.git\" } How to run examples Clone the repository: You can clone the ForImage repository from GitHub using the following command: git clone https://github.com/gha3mi/forimage.git cd forimage fpm --example run --all API documentation The most up-to-date API documentation for the master branch is available here .\nTo generate the API documentation for ForImage using ford run the following\ncommand: ford ford.yml Contributing Contributions to ForImage are welcome!\nIf you find any issues or would like to suggest improvements, please open an issue. Developer Info Seyed Ali Ghasemi","tags":"home","loc":"index.html"},{"title":"format_pnm – ForImage ","text":"type, public :: format_pnm Components Type Visibility Attributes Name Initial character(len=2), public :: magic_number integer, public :: width integer, public :: height character(len=70), public :: comment integer, public :: max_color integer, public, dimension(:,:), allocatable :: pixels character(len=3), public :: file_format character(len=5), public :: encoding Type-Bound Procedures procedure, public :: set_format private pure elemental subroutine set_format (this, encoding) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: encoding procedure, public :: set_file_format private pure elemental subroutine set_file_format (this, file_format) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=3), intent(in) :: file_format procedure, public :: set_magicnumber private pure elemental subroutine set_magicnumber (this, magic_number) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: magic_number procedure, public :: set_width private pure elemental subroutine set_width (this, width) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this integer, intent(in) :: width procedure, public :: set_height private pure elemental subroutine set_height (this, height) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this integer, intent(in) :: height procedure, public :: set_comment private pure elemental subroutine set_comment (this, comment) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: comment procedure, public :: set_max_color private pure elemental subroutine set_max_color (this, max_color) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this integer, intent(in) :: max_color procedure, public :: set_header private pure elemental subroutine set_header (this, magic_number, width, height, comment, max_color) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: magic_number integer, intent(in) :: width integer, intent(in) :: height character(len=*), intent(in) :: comment integer, intent(in), optional :: max_color procedure, public :: allocate_pixels private pure elemental subroutine allocate_pixels (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this procedure, public :: set_pixels private pure subroutine set_pixels (this, pixels) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this integer, intent(in), dimension(:,:) :: pixels procedure, public :: export_pnm private impure subroutine export_pnm (this, file_name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: file_name procedure, public :: set_pnm private pure subroutine set_pnm (this, encoding, file_format, width, height, max_color, comment, pixels) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: encoding character(len=3), intent(in) :: file_format integer, intent(in) :: width integer, intent(in) :: height integer, intent(in), optional :: max_color character(len=*), intent(in) :: comment integer, intent(in), dimension(:,:) :: pixels procedure, public :: import_pnm private impure subroutine import_pnm (this, file_name, file_format, encoding) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: file_name character(len=3), intent(in) :: file_format character(len=*), intent(in) :: encoding procedure, public :: dlloc => deallocate_pnm private pure elemental subroutine deallocate_pnm (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this Source Code type format_pnm character ( 2 ) :: magic_number integer :: width integer :: height character ( 70 ) :: comment integer :: max_color integer , dimension (:,:), allocatable :: pixels character ( 3 ) :: file_format character ( 5 ) :: encoding contains procedure :: set_format procedure :: set_file_format procedure :: set_magicnumber procedure :: set_width procedure :: set_height procedure :: set_comment procedure :: set_max_color procedure :: set_header procedure :: allocate_pixels procedure :: set_pixels procedure :: export_pnm procedure :: set_pnm procedure :: import_pnm procedure :: dlloc => deallocate_pnm end type format_pnm","tags":"","loc":"type/format_pnm.html"},{"title":"set_file_format – ForImage","text":"private pure elemental subroutine set_file_format(this, file_format) Type Bound format_pnm Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=3), intent(in) :: file_format Called by proc~~set_file_format~~CalledByGraph proc~set_file_format forimage::format_pnm%set_file_format proc~set_pnm forimage::format_pnm%set_pnm proc~set_pnm->proc~set_file_format program~example example program~example->proc~set_pnm program~example1 example1 program~example1->proc~set_pnm program~example2 example2 program~example2->proc~set_pnm program~example3 example3 program~example3->proc~set_pnm program~example4 example4 program~example4->proc~set_pnm program~example6 example6 program~example6->proc~set_pnm Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code elemental pure subroutine set_file_format ( this , file_format ) class ( format_pnm ), intent ( inout ) :: this character ( 3 ), intent ( in ) :: file_format this % file_format = file_format end subroutine set_file_format","tags":"","loc":"proc/set_file_format.html"},{"title":"set_format – ForImage","text":"private pure elemental subroutine set_format(this, encoding) Type Bound format_pnm Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: encoding Called by proc~~set_format~~CalledByGraph proc~set_format forimage::format_pnm%set_format proc~set_pnm forimage::format_pnm%set_pnm proc~set_pnm->proc~set_format program~example example program~example->proc~set_pnm program~example1 example1 program~example1->proc~set_pnm program~example2 example2 program~example2->proc~set_pnm program~example3 example3 program~example3->proc~set_pnm program~example4 example4 program~example4->proc~set_pnm program~example6 example6 program~example6->proc~set_pnm Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code elemental pure subroutine set_format ( this , encoding ) class ( format_pnm ), intent ( inout ) :: this character ( * ), intent ( in ) :: encoding this % encoding = encoding end subroutine set_format","tags":"","loc":"proc/set_format.html"},{"title":"deallocate_pnm – ForImage","text":"private pure elemental subroutine deallocate_pnm(this) Type Bound format_pnm Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this Called by proc~~deallocate_pnm~~CalledByGraph proc~deallocate_pnm forimage::format_pnm%deallocate_pnm program~example example program~example->proc~deallocate_pnm program~example1 example1 program~example1->proc~deallocate_pnm program~example10 example10 program~example10->proc~deallocate_pnm program~example11 example11 program~example11->proc~deallocate_pnm program~example12 example12 program~example12->proc~deallocate_pnm program~example2 example2 program~example2->proc~deallocate_pnm program~example3 example3 program~example3->proc~deallocate_pnm program~example4 example4 program~example4->proc~deallocate_pnm program~example6 example6 program~example6->proc~deallocate_pnm program~example7 example7 program~example7->proc~deallocate_pnm program~example8 example8 program~example8->proc~deallocate_pnm program~example9 example9 program~example9->proc~deallocate_pnm Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code elemental pure subroutine deallocate_pnm ( this ) class ( format_pnm ), intent ( inout ) :: this if ( allocated ( this % pixels )) deallocate ( this % pixels ) end subroutine deallocate_pnm","tags":"","loc":"proc/deallocate_pnm.html"},{"title":"import_pnm – ForImage","text":"private impure subroutine import_pnm(this, file_name, file_format, encoding) Type Bound format_pnm Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: file_name character(len=3), intent(in) :: file_format character(len=*), intent(in) :: encoding Calls proc~~import_pnm~~CallsGraph proc~import_pnm forimage::format_pnm%import_pnm proc~allocate_pixels forimage::format_pnm%allocate_pixels proc~import_pnm->proc~allocate_pixels Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~import_pnm~~CalledByGraph proc~import_pnm forimage::format_pnm%import_pnm program~example10 example10 program~example10->proc~import_pnm program~example11 example11 program~example11->proc~import_pnm program~example12 example12 program~example12->proc~import_pnm program~example7 example7 program~example7->proc~import_pnm program~example8 example8 program~example8->proc~import_pnm program~example9 example9 program~example9->proc~import_pnm Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code impure subroutine import_pnm ( this , file_name , file_format , encoding ) class ( format_pnm ), intent ( inout ) :: this character ( * ), intent ( in ) :: file_name character ( * ), intent ( in ) :: encoding character ( 3 ), intent ( in ) :: file_format integer :: nunit , i character :: temp character , allocatable :: temp_pixel (:) this % file_format = file_format this % encoding = encoding select case ( encoding ) case ( 'binary' , 'raw' ) select case ( file_format ) case ( 'pbm' ) open ( newunit = nunit , file = file_name // '.' // file_format ) read ( nunit , * ) this % magic_number read ( nunit , * ) temp , this % comment read ( nunit , * ) this % width , this % height call this % allocate_pixels () allocate ( temp_pixel ( this % height * this % width )) read ( nunit , '(*(a))' , advance = 'no' ) temp_pixel this % pixels = transpose ( reshape ( ichar ( temp_pixel ), [ this % height , this % width ])) close ( nunit ) case ( 'pgm' ) open ( newunit = nunit , file = file_name // '.' // file_format ) read ( nunit , * ) this % magic_number read ( nunit , * ) temp , this % comment read ( nunit , * ) this % width , this % height read ( nunit , * ) this % max_color call this % allocate_pixels () allocate ( temp_pixel ( this % height * this % width )) read ( nunit , '(*(a))' , advance = 'no' ) temp_pixel this % pixels = transpose ( reshape ( ichar ( temp_pixel ), [ this % height , this % width ])) close ( nunit ) case ( 'ppm' ) open ( newunit = nunit , file = file_name // '.' // file_format ) read ( nunit , * ) this % magic_number read ( nunit , * ) temp , this % comment read ( nunit , * ) this % width , this % height read ( nunit , * ) this % max_color call this % allocate_pixels () allocate ( temp_pixel ( this % height * this % width * 3 )) read ( nunit , '(*(a))' , advance = 'no' ) temp_pixel this % pixels = transpose ( reshape ( ichar ( temp_pixel ), [ this % height , 3 * this % width ])) close ( nunit ) end select case ( 'ascii' , 'plain' ) select case ( file_format ) case ( 'pbm' ) open ( newunit = nunit , file = file_name // '.' // file_format ) read ( nunit , * ) this % magic_number read ( nunit , * ) temp , this % comment read ( nunit , * ) this % width , this % height call this % allocate_pixels () do i = 1 , size ( this % pixels , 1 ) read ( nunit , * ) this % pixels ( i ,:) end do close ( nunit ) case ( 'pgm' ) open ( newunit = nunit , file = file_name // '.' // file_format ) read ( nunit , * ) this % magic_number read ( nunit , * ) temp , this % comment read ( nunit , * ) this % width , this % height read ( nunit , * ) this % max_color call this % allocate_pixels () do i = 1 , size ( this % pixels , 1 ) read ( nunit , * ) this % pixels ( i ,:) end do close ( nunit ) case ( 'ppm' ) open ( newunit = nunit , file = file_name // '.' // file_format ) read ( nunit , * ) this % magic_number read ( nunit , * ) temp , this % comment read ( nunit , * ) this % width , this % height read ( nunit , * ) this % max_color call this % allocate_pixels () do i = 1 , size ( this % pixels , 1 ) read ( nunit , * ) this % pixels ( i ,:) end do close ( nunit ) end select end select end subroutine import_pnm","tags":"","loc":"proc/import_pnm.html"},{"title":"set_pnm – ForImage","text":"private pure subroutine set_pnm(this, encoding, file_format, width, height, max_color, comment, pixels) Type Bound format_pnm Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: encoding character(len=3), intent(in) :: file_format integer, intent(in) :: width integer, intent(in) :: height integer, intent(in), optional :: max_color character(len=*), intent(in) :: comment integer, intent(in), dimension(:,:) :: pixels Calls proc~~set_pnm~~CallsGraph proc~set_pnm forimage::format_pnm%set_pnm proc~allocate_pixels forimage::format_pnm%allocate_pixels proc~set_pnm->proc~allocate_pixels proc~set_file_format forimage::format_pnm%set_file_format proc~set_pnm->proc~set_file_format proc~set_format forimage::format_pnm%set_format proc~set_pnm->proc~set_format proc~set_header forimage::format_pnm%set_header proc~set_pnm->proc~set_header proc~set_pixels forimage::format_pnm%set_pixels proc~set_pnm->proc~set_pixels proc~set_comment forimage::format_pnm%set_comment proc~set_header->proc~set_comment proc~set_height forimage::format_pnm%set_height proc~set_header->proc~set_height proc~set_magicnumber forimage::format_pnm%set_magicnumber proc~set_header->proc~set_magicnumber proc~set_max_color forimage::format_pnm%set_max_color proc~set_header->proc~set_max_color proc~set_width forimage::format_pnm%set_width proc~set_header->proc~set_width Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~set_pnm~~CalledByGraph proc~set_pnm forimage::format_pnm%set_pnm program~example example program~example->proc~set_pnm program~example1 example1 program~example1->proc~set_pnm program~example2 example2 program~example2->proc~set_pnm program~example3 example3 program~example3->proc~set_pnm program~example4 example4 program~example4->proc~set_pnm program~example6 example6 program~example6->proc~set_pnm Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code pure subroutine set_pnm ( this , encoding , file_format , width , height , max_color , comment , pixels ) class ( format_pnm ), intent ( inout ) :: this integer , intent ( in ) :: width integer , intent ( in ) :: height character ( * ), intent ( in ) :: comment integer , optional , intent ( in ) :: max_color integer , dimension (:,:), intent ( in ) :: pixels character ( * ), intent ( in ) :: encoding character ( 3 ), intent ( in ) :: file_format character ( 2 ) :: magic_number select case ( encoding ) case ( 'ascii' , 'plain' ) select case ( file_format ) case ( 'pbm' ) magic_number = 'P1' case ( 'pgm' ) magic_number = 'P2' case ( 'ppm' ) magic_number = 'P3' end select case ( 'binary' , 'raw' ) select case ( file_format ) case ( 'pbm' ) magic_number = 'P4' case ( 'pgm' ) magic_number = 'P5' case ( 'ppm' ) magic_number = 'P6' end select end select call this % set_format ( encoding ) call this % set_file_format ( file_format ) call this % set_header ( magic_number , width , height , comment , max_color ) call this % allocate_pixels () call this % set_pixels ( pixels ) end subroutine set_pnm","tags":"","loc":"proc/set_pnm.html"},{"title":"allocate_pixels – ForImage","text":"private pure elemental subroutine allocate_pixels(this) Type Bound format_pnm Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this Called by proc~~allocate_pixels~~CalledByGraph proc~allocate_pixels forimage::format_pnm%allocate_pixels proc~import_pnm forimage::format_pnm%import_pnm proc~import_pnm->proc~allocate_pixels proc~set_pnm forimage::format_pnm%set_pnm proc~set_pnm->proc~allocate_pixels program~example example program~example->proc~set_pnm program~example1 example1 program~example1->proc~set_pnm program~example10 example10 program~example10->proc~import_pnm program~example11 example11 program~example11->proc~import_pnm program~example12 example12 program~example12->proc~import_pnm program~example2 example2 program~example2->proc~set_pnm program~example3 example3 program~example3->proc~set_pnm program~example4 example4 program~example4->proc~set_pnm program~example6 example6 program~example6->proc~set_pnm program~example7 example7 program~example7->proc~import_pnm program~example8 example8 program~example8->proc~import_pnm program~example9 example9 program~example9->proc~import_pnm Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code elemental pure subroutine allocate_pixels ( this ) class ( format_pnm ), intent ( inout ) :: this select case ( this % magic_number ) case ( 'P1' ) if (. not . allocated ( this % pixels )) allocate ( this % pixels ( this % height , this % width )) case ( 'P2' ) if (. not . allocated ( this % pixels )) allocate ( this % pixels ( this % height , this % width )) case ( 'P3' ) if (. not . allocated ( this % pixels )) allocate ( this % pixels ( this % height , 3 * this % width )) end select end subroutine allocate_pixels","tags":"","loc":"proc/allocate_pixels.html"},{"title":"set_magicnumber – ForImage","text":"private pure elemental subroutine set_magicnumber(this, magic_number) Type Bound format_pnm Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: magic_number Called by proc~~set_magicnumber~~CalledByGraph proc~set_magicnumber forimage::format_pnm%set_magicnumber proc~set_header forimage::format_pnm%set_header proc~set_header->proc~set_magicnumber proc~set_pnm forimage::format_pnm%set_pnm proc~set_pnm->proc~set_header program~example example program~example->proc~set_pnm program~example1 example1 program~example1->proc~set_pnm program~example2 example2 program~example2->proc~set_pnm program~example3 example3 program~example3->proc~set_pnm program~example4 example4 program~example4->proc~set_pnm program~example6 example6 program~example6->proc~set_pnm Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code elemental pure subroutine set_magicnumber ( this , magic_number ) class ( format_pnm ), intent ( inout ) :: this character ( * ), intent ( in ) :: magic_number this % magic_number = magic_number end subroutine set_magicnumber","tags":"","loc":"proc/set_magicnumber.html"},{"title":"set_width – ForImage","text":"private pure elemental subroutine set_width(this, width) Type Bound format_pnm Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this integer, intent(in) :: width Called by proc~~set_width~~CalledByGraph proc~set_width forimage::format_pnm%set_width proc~set_header forimage::format_pnm%set_header proc~set_header->proc~set_width proc~set_pnm forimage::format_pnm%set_pnm proc~set_pnm->proc~set_header program~example example program~example->proc~set_pnm program~example1 example1 program~example1->proc~set_pnm program~example2 example2 program~example2->proc~set_pnm program~example3 example3 program~example3->proc~set_pnm program~example4 example4 program~example4->proc~set_pnm program~example6 example6 program~example6->proc~set_pnm Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code elemental pure subroutine set_width ( this , width ) class ( format_pnm ), intent ( inout ) :: this integer , intent ( in ) :: width this % width = width end subroutine set_width","tags":"","loc":"proc/set_width.html"},{"title":"set_height – ForImage","text":"private pure elemental subroutine set_height(this, height) Type Bound format_pnm Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this integer, intent(in) :: height Called by proc~~set_height~~CalledByGraph proc~set_height forimage::format_pnm%set_height proc~set_header forimage::format_pnm%set_header proc~set_header->proc~set_height proc~set_pnm forimage::format_pnm%set_pnm proc~set_pnm->proc~set_header program~example example program~example->proc~set_pnm program~example1 example1 program~example1->proc~set_pnm program~example2 example2 program~example2->proc~set_pnm program~example3 example3 program~example3->proc~set_pnm program~example4 example4 program~example4->proc~set_pnm program~example6 example6 program~example6->proc~set_pnm Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code elemental pure subroutine set_height ( this , height ) class ( format_pnm ), intent ( inout ) :: this integer , intent ( in ) :: height this % height = height end subroutine set_height","tags":"","loc":"proc/set_height.html"},{"title":"set_comment – ForImage","text":"private pure elemental subroutine set_comment(this, comment) Type Bound format_pnm Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: comment Called by proc~~set_comment~~CalledByGraph proc~set_comment forimage::format_pnm%set_comment proc~set_header forimage::format_pnm%set_header proc~set_header->proc~set_comment proc~set_pnm forimage::format_pnm%set_pnm proc~set_pnm->proc~set_header program~example example program~example->proc~set_pnm program~example1 example1 program~example1->proc~set_pnm program~example2 example2 program~example2->proc~set_pnm program~example3 example3 program~example3->proc~set_pnm program~example4 example4 program~example4->proc~set_pnm program~example6 example6 program~example6->proc~set_pnm Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code elemental pure subroutine set_comment ( this , comment ) class ( format_pnm ), intent ( inout ) :: this character ( * ), intent ( in ) :: comment this % comment = comment end subroutine set_comment","tags":"","loc":"proc/set_comment.html"},{"title":"set_max_color – ForImage","text":"private pure elemental subroutine set_max_color(this, max_color) Type Bound format_pnm Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this integer, intent(in) :: max_color Called by proc~~set_max_color~~CalledByGraph proc~set_max_color forimage::format_pnm%set_max_color proc~set_header forimage::format_pnm%set_header proc~set_header->proc~set_max_color proc~set_pnm forimage::format_pnm%set_pnm proc~set_pnm->proc~set_header program~example example program~example->proc~set_pnm program~example1 example1 program~example1->proc~set_pnm program~example2 example2 program~example2->proc~set_pnm program~example3 example3 program~example3->proc~set_pnm program~example4 example4 program~example4->proc~set_pnm program~example6 example6 program~example6->proc~set_pnm Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code elemental pure subroutine set_max_color ( this , max_color ) class ( format_pnm ), intent ( inout ) :: this integer , intent ( in ) :: max_color this % max_color = max_color end subroutine set_max_color","tags":"","loc":"proc/set_max_color.html"},{"title":"set_header – ForImage","text":"private pure elemental subroutine set_header(this, magic_number, width, height, comment, max_color) Type Bound format_pnm Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: magic_number integer, intent(in) :: width integer, intent(in) :: height character(len=*), intent(in) :: comment integer, intent(in), optional :: max_color Calls proc~~set_header~~CallsGraph proc~set_header forimage::format_pnm%set_header proc~set_comment forimage::format_pnm%set_comment proc~set_header->proc~set_comment proc~set_height forimage::format_pnm%set_height proc~set_header->proc~set_height proc~set_magicnumber forimage::format_pnm%set_magicnumber proc~set_header->proc~set_magicnumber proc~set_max_color forimage::format_pnm%set_max_color proc~set_header->proc~set_max_color proc~set_width forimage::format_pnm%set_width proc~set_header->proc~set_width Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~set_header~~CalledByGraph proc~set_header forimage::format_pnm%set_header proc~set_pnm forimage::format_pnm%set_pnm proc~set_pnm->proc~set_header program~example example program~example->proc~set_pnm program~example1 example1 program~example1->proc~set_pnm program~example2 example2 program~example2->proc~set_pnm program~example3 example3 program~example3->proc~set_pnm program~example4 example4 program~example4->proc~set_pnm program~example6 example6 program~example6->proc~set_pnm Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code elemental pure subroutine set_header ( this , magic_number , width , height , comment , max_color ) class ( format_pnm ), intent ( inout ) :: this character ( * ), intent ( in ) :: magic_number integer , intent ( in ) :: width integer , intent ( in ) :: height character ( * ), intent ( in ) :: comment integer , optional , intent ( in ) :: max_color call this % set_magicnumber ( magic_number ) call this % set_width ( width ) call this % set_height ( height ) call this % set_comment ( comment ) if ( this % file_format /= 'pbm' ) call this % set_max_color ( max_color ) end subroutine set_header","tags":"","loc":"proc/set_header.html"},{"title":"set_pixels – ForImage","text":"private pure subroutine set_pixels(this, pixels) Type Bound format_pnm Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this integer, intent(in), dimension(:,:) :: pixels Called by proc~~set_pixels~~CalledByGraph proc~set_pixels forimage::format_pnm%set_pixels proc~set_pnm forimage::format_pnm%set_pnm proc~set_pnm->proc~set_pixels program~example example program~example->proc~set_pnm program~example1 example1 program~example1->proc~set_pnm program~example2 example2 program~example2->proc~set_pnm program~example3 example3 program~example3->proc~set_pnm program~example4 example4 program~example4->proc~set_pnm program~example6 example6 program~example6->proc~set_pnm Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code pure subroutine set_pixels ( this , pixels ) class ( format_pnm ), intent ( inout ) :: this integer , dimension (:,:), intent ( in ) :: pixels this % pixels = pixels end subroutine set_pixels","tags":"","loc":"proc/set_pixels.html"},{"title":"set_pixel – ForImage","text":"private pure elemental subroutine set_pixel(this, grey, r, g, b, i, j) Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this integer, intent(in), optional :: grey integer, intent(in), optional :: r integer, intent(in), optional :: g integer, intent(in), optional :: b integer, intent(in) :: i integer, intent(in) :: j Source Code elemental pure subroutine set_pixel ( this , grey , r , g , b , i , j ) class ( format_pnm ), intent ( inout ) :: this integer , intent ( in ), optional :: grey integer , intent ( in ), optional :: r , g , b integer , intent ( in ) :: i , j select case ( this % magic_number ) case ( 'P1' ) this % pixels ( i , j ) = grey case ( 'P2' ) this % pixels ( i , j ) = grey case ( 'P3' ) this % pixels ( i , 3 * j - 2 ) = r this % pixels ( i , 3 * j - 1 ) = g this % pixels ( i , 3 * j - 0 ) = b end select end subroutine set_pixel","tags":"","loc":"proc/set_pixel.html"},{"title":"export_pnm – ForImage","text":"private impure subroutine export_pnm(this, file_name) Type Bound format_pnm Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: file_name Called by proc~~export_pnm~~CalledByGraph proc~export_pnm forimage::format_pnm%export_pnm program~example example program~example->proc~export_pnm program~example1 example1 program~example1->proc~export_pnm program~example10 example10 program~example10->proc~export_pnm program~example11 example11 program~example11->proc~export_pnm program~example12 example12 program~example12->proc~export_pnm program~example2 example2 program~example2->proc~export_pnm program~example3 example3 program~example3->proc~export_pnm program~example4 example4 program~example4->proc~export_pnm program~example6 example6 program~example6->proc~export_pnm program~example7 example7 program~example7->proc~export_pnm program~example8 example8 program~example8->proc~export_pnm program~example9 example9 program~example9->proc~export_pnm Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code impure subroutine export_pnm ( this , file_name ) class ( format_pnm ), intent ( inout ) :: this character ( * ), intent ( in ) :: file_name integer :: nunit , i , j open ( newunit = nunit , file = file_name // '.' // this % file_format , status = 'replace' ) write ( nunit , '(a)' ) this % magic_number write ( nunit , '(a,a)' ) '# ' , this % comment write ( nunit , '(g0,1x,g0)' ) this % width , this % height if ( this % file_format /= 'pbm' ) write ( nunit , '(g0)' ) this % max_color select case ( this % magic_number ) case ( 'P1' , 'P2' , 'P3' ) do i = 1 , size ( this % pixels , 1 ) write ( nunit , '(*(g0,1x))' ) this % pixels ( i ,:) end do case ( 'P4' , 'P5' , 'P6' ) do i = 1 , size ( this % pixels , 1 ) do j = 1 , size ( this % pixels , 2 ) write ( nunit , '(*(a))' , advance = 'no' ) achar ( this % pixels ( i , j )) end do end do end select close ( nunit ) end subroutine export_pnm","tags":"","loc":"proc/export_pnm.html"},{"title":"forimage – ForImage","text":"Used by module~~forimage~~UsedByGraph module~forimage forimage program~example example program~example->module~forimage program~example1 example1 program~example1->module~forimage program~example10 example10 program~example10->module~forimage program~example11 example11 program~example11->module~forimage program~example12 example12 program~example12->module~forimage program~example2 example2 program~example2->module~forimage program~example3 example3 program~example3->module~forimage program~example4 example4 program~example4->module~forimage program~example6 example6 program~example6->module~forimage program~example7 example7 program~example7->module~forimage program~example8 example8 program~example8->module~forimage program~example9 example9 program~example9->module~forimage Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Derived Types type, public :: format_pnm Components Type Visibility Attributes Name Initial character(len=2), public :: magic_number integer, public :: width integer, public :: height character(len=70), public :: comment integer, public :: max_color integer, public, dimension(:,:), allocatable :: pixels character(len=3), public :: file_format character(len=5), public :: encoding Type-Bound Procedures procedure, public :: set_format procedure, public :: set_file_format procedure, public :: set_magicnumber procedure, public :: set_width procedure, public :: set_height procedure, public :: set_comment procedure, public :: set_max_color procedure, public :: set_header procedure, public :: allocate_pixels procedure, public :: set_pixels procedure, public :: export_pnm procedure, public :: set_pnm procedure, public :: import_pnm procedure, public :: dlloc => deallocate_pnm Subroutines private pure elemental subroutine set_file_format (this, file_format) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=3), intent(in) :: file_format private pure elemental subroutine set_format (this, encoding) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: encoding private pure elemental subroutine deallocate_pnm (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this private impure subroutine import_pnm (this, file_name, file_format, encoding) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: file_name character(len=3), intent(in) :: file_format character(len=*), intent(in) :: encoding private pure subroutine set_pnm (this, encoding, file_format, width, height, max_color, comment, pixels) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: encoding character(len=3), intent(in) :: file_format integer, intent(in) :: width integer, intent(in) :: height integer, intent(in), optional :: max_color character(len=*), intent(in) :: comment integer, intent(in), dimension(:,:) :: pixels private pure elemental subroutine allocate_pixels (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this private pure elemental subroutine set_magicnumber (this, magic_number) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: magic_number private pure elemental subroutine set_width (this, width) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this integer, intent(in) :: width private pure elemental subroutine set_height (this, height) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this integer, intent(in) :: height private pure elemental subroutine set_comment (this, comment) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: comment private pure elemental subroutine set_max_color (this, max_color) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this integer, intent(in) :: max_color private pure elemental subroutine set_header (this, magic_number, width, height, comment, max_color) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: magic_number integer, intent(in) :: width integer, intent(in) :: height character(len=*), intent(in) :: comment integer, intent(in), optional :: max_color private pure subroutine set_pixels (this, pixels) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this integer, intent(in), dimension(:,:) :: pixels private pure elemental subroutine set_pixel (this, grey, r, g, b, i, j) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this integer, intent(in), optional :: grey integer, intent(in), optional :: r integer, intent(in), optional :: g integer, intent(in), optional :: b integer, intent(in) :: i integer, intent(in) :: j private impure subroutine export_pnm (this, file_name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: file_name","tags":"","loc":"module/forimage.html"},{"title":"example7 – ForImage","text":"Uses forimage program~~example7~~UsesGraph program~example7 example7 module~forimage forimage program~example7->module~forimage Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Calls program~~example7~~CallsGraph program~example7 example7 proc~deallocate_pnm forimage::format_pnm%deallocate_pnm program~example7->proc~deallocate_pnm proc~export_pnm forimage::format_pnm%export_pnm program~example7->proc~export_pnm proc~import_pnm forimage::format_pnm%import_pnm program~example7->proc~import_pnm proc~allocate_pixels forimage::format_pnm%allocate_pixels proc~import_pnm->proc~allocate_pixels Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Variables Type Attributes Name Initial type( format_pnm ) :: ex7 Source Code program example7 use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex7 call ex7 % import_pnm ( 'pnm_files/example1_ascii' , 'pbm' , 'ascii' ) call ex7 % export_pnm ( 'pnm_files/example1_ascii_ex' ) call ex7 % dlloc () end program example7","tags":"","loc":"program/example7.html"},{"title":"example10 – ForImage","text":"Uses forimage program~~example10~~UsesGraph program~example10 example10 module~forimage forimage program~example10->module~forimage Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Calls program~~example10~~CallsGraph program~example10 example10 proc~deallocate_pnm forimage::format_pnm%deallocate_pnm program~example10->proc~deallocate_pnm proc~export_pnm forimage::format_pnm%export_pnm program~example10->proc~export_pnm proc~import_pnm forimage::format_pnm%import_pnm program~example10->proc~import_pnm proc~allocate_pixels forimage::format_pnm%allocate_pixels proc~import_pnm->proc~allocate_pixels Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Variables Type Attributes Name Initial type( format_pnm ) :: ex10 Source Code program example10 use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex10 call ex10 % import_pnm ( 'pnm_files/example4_binary' , 'pbm' , 'binary' ) call ex10 % export_pnm ( 'pnm_files/example4_binary_ex' ) call ex10 % dlloc () end program example10","tags":"","loc":"program/example10.html"},{"title":"example12 – ForImage","text":"Uses forimage program~~example12~~UsesGraph program~example12 example12 module~forimage forimage program~example12->module~forimage Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Calls program~~example12~~CallsGraph program~example12 example12 proc~deallocate_pnm forimage::format_pnm%deallocate_pnm program~example12->proc~deallocate_pnm proc~export_pnm forimage::format_pnm%export_pnm program~example12->proc~export_pnm proc~import_pnm forimage::format_pnm%import_pnm program~example12->proc~import_pnm proc~allocate_pixels forimage::format_pnm%allocate_pixels proc~import_pnm->proc~allocate_pixels Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Variables Type Attributes Name Initial type( format_pnm ) :: ex12 Source Code program example12 use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex12 call ex12 % import_pnm ( 'pnm_files/example6_binary' , 'ppm' , 'binary' ) call ex12 % export_pnm ( 'pnm_files/example6_binary_ex' ) call ex12 % dlloc () end program example12","tags":"","loc":"program/example12.html"},{"title":"example2 – ForImage","text":"Uses forimage program~~example2~~UsesGraph program~example2 example2 module~forimage forimage program~example2->module~forimage Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Calls program~~example2~~CallsGraph program~example2 example2 proc~deallocate_pnm forimage::format_pnm%deallocate_pnm program~example2->proc~deallocate_pnm proc~export_pnm forimage::format_pnm%export_pnm program~example2->proc~export_pnm proc~set_pnm forimage::format_pnm%set_pnm program~example2->proc~set_pnm proc~allocate_pixels forimage::format_pnm%allocate_pixels proc~set_pnm->proc~allocate_pixels proc~set_file_format forimage::format_pnm%set_file_format proc~set_pnm->proc~set_file_format proc~set_format forimage::format_pnm%set_format proc~set_pnm->proc~set_format proc~set_header forimage::format_pnm%set_header proc~set_pnm->proc~set_header proc~set_pixels forimage::format_pnm%set_pixels proc~set_pnm->proc~set_pixels proc~set_comment forimage::format_pnm%set_comment proc~set_header->proc~set_comment proc~set_height forimage::format_pnm%set_height proc~set_header->proc~set_height proc~set_magicnumber forimage::format_pnm%set_magicnumber proc~set_header->proc~set_magicnumber proc~set_max_color forimage::format_pnm%set_max_color proc~set_header->proc~set_max_color proc~set_width forimage::format_pnm%set_width proc~set_header->proc~set_width Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Variables Type Attributes Name Initial type( format_pnm ) :: ex2 integer, dimension(60,60) :: px Source Code program example2 use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex2 integer , dimension ( 60 , 60 ) :: px px = transpose ( reshapeshape = shape ( px ))) call ex2 % set_pnm ( encoding = 'ascii' , file_format = 'pgm' , width = 60 , height = 60 , max_color = 255 , comment = 'example 2' , pixels = px ) call ex2 % export_pnm ( 'pnm_files/example2_ascii' ) call ex2 % dlloc () end program example2","tags":"","loc":"program/example2.html"},{"title":"example6 – ForImage","text":"Uses forimage program~~example6~~UsesGraph program~example6 example6 module~forimage forimage program~example6->module~forimage Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Calls program~~example6~~CallsGraph program~example6 example6 proc~deallocate_pnm forimage::format_pnm%deallocate_pnm program~example6->proc~deallocate_pnm proc~export_pnm forimage::format_pnm%export_pnm program~example6->proc~export_pnm proc~set_pnm forimage::format_pnm%set_pnm program~example6->proc~set_pnm proc~allocate_pixels forimage::format_pnm%allocate_pixels proc~set_pnm->proc~allocate_pixels proc~set_file_format forimage::format_pnm%set_file_format proc~set_pnm->proc~set_file_format proc~set_format forimage::format_pnm%set_format proc~set_pnm->proc~set_format proc~set_header forimage::format_pnm%set_header proc~set_pnm->proc~set_header proc~set_pixels forimage::format_pnm%set_pixels proc~set_pnm->proc~set_pixels proc~set_comment forimage::format_pnm%set_comment proc~set_header->proc~set_comment proc~set_height forimage::format_pnm%set_height proc~set_header->proc~set_height proc~set_magicnumber forimage::format_pnm%set_magicnumber proc~set_header->proc~set_magicnumber proc~set_max_color forimage::format_pnm%set_max_color proc~set_header->proc~set_max_color proc~set_width forimage::format_pnm%set_width proc~set_header->proc~set_width Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Variables Type Attributes Name Initial type( format_pnm ) :: ex6 integer, dimension(4,12) :: px Source Code program example6 use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex6 integer , dimension ( 4 , 12 ) :: px px ( 1 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 15 , 0 , 15 ] px ( 2 ,:) = [ 0 , 0 , 0 , 0 , 15 , 7 , 0 , 0 , 0 , 0 , 0 , 0 ] px ( 3 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 15 , 7 , 0 , 0 , 0 ] px ( 4 ,:) = [ 15 , 0 , 15 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ] call ex6 % set_pnm ( encoding = 'binary' , file_format = 'ppm' , width = 4 , height = 4 , max_color = 15 , comment = 'example 2' , pixels = px ) call ex6 % export_pnm ( 'pnm_files/example6_binary' ) call ex6 % dlloc () end program example6","tags":"","loc":"program/example6.html"},{"title":"example1 – ForImage","text":"Uses forimage program~~example1~~UsesGraph program~example1 example1 module~forimage forimage program~example1->module~forimage Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Calls program~~example1~~CallsGraph program~example1 example1 proc~deallocate_pnm forimage::format_pnm%deallocate_pnm program~example1->proc~deallocate_pnm proc~export_pnm forimage::format_pnm%export_pnm program~example1->proc~export_pnm proc~set_pnm forimage::format_pnm%set_pnm program~example1->proc~set_pnm proc~allocate_pixels forimage::format_pnm%allocate_pixels proc~set_pnm->proc~allocate_pixels proc~set_file_format forimage::format_pnm%set_file_format proc~set_pnm->proc~set_file_format proc~set_format forimage::format_pnm%set_format proc~set_pnm->proc~set_format proc~set_header forimage::format_pnm%set_header proc~set_pnm->proc~set_header proc~set_pixels forimage::format_pnm%set_pixels proc~set_pnm->proc~set_pixels proc~set_comment forimage::format_pnm%set_comment proc~set_header->proc~set_comment proc~set_height forimage::format_pnm%set_height proc~set_header->proc~set_height proc~set_magicnumber forimage::format_pnm%set_magicnumber proc~set_header->proc~set_magicnumber proc~set_max_color forimage::format_pnm%set_max_color proc~set_header->proc~set_max_color proc~set_width forimage::format_pnm%set_width proc~set_header->proc~set_width Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Variables Type Attributes Name Initial type( format_pnm ) :: ex1 integer, dimension(10,6) :: px Source Code program example1 use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex1 integer , dimension ( 10 , 6 ) :: px px ( 1 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px ( 2 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px ( 3 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px ( 4 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px ( 5 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px ( 6 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px ( 7 ,:) = [ 1 , 0 , 0 , 0 , 1 , 0 ] px ( 8 ,:) = [ 0 , 1 , 1 , 1 , 0 , 0 ] px ( 9 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 ] px ( 10 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 ] call ex1 % set_pnm ( encoding = 'ascii' , file_format = 'pbm' , width = 6 , height = 10 , comment = 'example 1' , pixels = px ) call ex1 % export_pnm ( 'pnm_files/example1_ascii' ) call ex1 % dlloc () end program example1","tags":"","loc":"program/example1.html"},{"title":"example – ForImage","text":"Uses forimage program~~example~~UsesGraph program~example example module~forimage forimage program~example->module~forimage Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Calls program~~example~~CallsGraph program~example example proc~deallocate_pnm forimage::format_pnm%deallocate_pnm program~example->proc~deallocate_pnm proc~export_pnm forimage::format_pnm%export_pnm program~example->proc~export_pnm proc~set_pnm forimage::format_pnm%set_pnm program~example->proc~set_pnm proc~allocate_pixels forimage::format_pnm%allocate_pixels proc~set_pnm->proc~allocate_pixels proc~set_file_format forimage::format_pnm%set_file_format proc~set_pnm->proc~set_file_format proc~set_format forimage::format_pnm%set_format proc~set_pnm->proc~set_format proc~set_header forimage::format_pnm%set_header proc~set_pnm->proc~set_header proc~set_pixels forimage::format_pnm%set_pixels proc~set_pnm->proc~set_pixels proc~set_comment forimage::format_pnm%set_comment proc~set_header->proc~set_comment proc~set_height forimage::format_pnm%set_height proc~set_header->proc~set_height proc~set_magicnumber forimage::format_pnm%set_magicnumber proc~set_header->proc~set_magicnumber proc~set_max_color forimage::format_pnm%set_max_color proc~set_header->proc~set_max_color proc~set_width forimage::format_pnm%set_width proc~set_header->proc~set_width Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Variables Type Attributes Name Initial type( format_pnm ) :: ex5 integer, dimension(60,60) :: px Source Code program example use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex5 integer , dimension ( 60 , 60 ) :: px px = transpose ( reshapeshape = shape ( px ))) call ex5 % set_pnm ( encoding = 'binary' , file_format = 'pgm' , width = 60 , height = 60 , max_color = 255 , comment = 'example 2' , pixels = px ) call ex5 % export_pnm ( 'pnm_files/example5_binary' ) call ex5 % dlloc () end program example","tags":"","loc":"program/example.html"},{"title":"example3 – ForImage","text":"Uses forimage program~~example3~~UsesGraph program~example3 example3 module~forimage forimage program~example3->module~forimage Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Calls program~~example3~~CallsGraph program~example3 example3 proc~deallocate_pnm forimage::format_pnm%deallocate_pnm program~example3->proc~deallocate_pnm proc~export_pnm forimage::format_pnm%export_pnm program~example3->proc~export_pnm proc~set_pnm forimage::format_pnm%set_pnm program~example3->proc~set_pnm proc~allocate_pixels forimage::format_pnm%allocate_pixels proc~set_pnm->proc~allocate_pixels proc~set_file_format forimage::format_pnm%set_file_format proc~set_pnm->proc~set_file_format proc~set_format forimage::format_pnm%set_format proc~set_pnm->proc~set_format proc~set_header forimage::format_pnm%set_header proc~set_pnm->proc~set_header proc~set_pixels forimage::format_pnm%set_pixels proc~set_pnm->proc~set_pixels proc~set_comment forimage::format_pnm%set_comment proc~set_header->proc~set_comment proc~set_height forimage::format_pnm%set_height proc~set_header->proc~set_height proc~set_magicnumber forimage::format_pnm%set_magicnumber proc~set_header->proc~set_magicnumber proc~set_max_color forimage::format_pnm%set_max_color proc~set_header->proc~set_max_color proc~set_width forimage::format_pnm%set_width proc~set_header->proc~set_width Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Variables Type Attributes Name Initial type( format_pnm ) :: ex3 integer, dimension(4,12) :: px Source Code program example3 use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex3 integer , dimension ( 4 , 12 ) :: px px ( 1 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 15 , 0 , 15 ] px ( 2 ,:) = [ 0 , 0 , 0 , 0 , 15 , 7 , 0 , 0 , 0 , 0 , 0 , 0 ] px ( 3 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 15 , 7 , 0 , 0 , 0 ] px ( 4 ,:) = [ 15 , 0 , 15 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ] call ex3 % set_pnm ( encoding = 'ascii' , file_format = 'ppm' , width = 4 , height = 4 , max_color = 15 , comment = 'example 2' , pixels = px ) call ex3 % export_pnm ( 'pnm_files/example3_ascii' ) call ex3 % dlloc () end program example3","tags":"","loc":"program/example3.html"},{"title":"example8 – ForImage","text":"Uses forimage program~~example8~~UsesGraph program~example8 example8 module~forimage forimage program~example8->module~forimage Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Calls program~~example8~~CallsGraph program~example8 example8 proc~deallocate_pnm forimage::format_pnm%deallocate_pnm program~example8->proc~deallocate_pnm proc~export_pnm forimage::format_pnm%export_pnm program~example8->proc~export_pnm proc~import_pnm forimage::format_pnm%import_pnm program~example8->proc~import_pnm proc~allocate_pixels forimage::format_pnm%allocate_pixels proc~import_pnm->proc~allocate_pixels Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Variables Type Attributes Name Initial type( format_pnm ) :: ex8 Source Code program example8 use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex8 call ex8 % import_pnm ( 'pnm_files/example2_ascii' , 'pgm' , 'ascii' ) call ex8 % export_pnm ( 'pnm_files/example2_ascii_ex' ) call ex8 % dlloc () end program example8","tags":"","loc":"program/example8.html"},{"title":"example4 – ForImage","text":"Uses forimage program~~example4~~UsesGraph program~example4 example4 module~forimage forimage program~example4->module~forimage Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Calls program~~example4~~CallsGraph program~example4 example4 proc~deallocate_pnm forimage::format_pnm%deallocate_pnm program~example4->proc~deallocate_pnm proc~export_pnm forimage::format_pnm%export_pnm program~example4->proc~export_pnm proc~set_pnm forimage::format_pnm%set_pnm program~example4->proc~set_pnm proc~allocate_pixels forimage::format_pnm%allocate_pixels proc~set_pnm->proc~allocate_pixels proc~set_file_format forimage::format_pnm%set_file_format proc~set_pnm->proc~set_file_format proc~set_format forimage::format_pnm%set_format proc~set_pnm->proc~set_format proc~set_header forimage::format_pnm%set_header proc~set_pnm->proc~set_header proc~set_pixels forimage::format_pnm%set_pixels proc~set_pnm->proc~set_pixels proc~set_comment forimage::format_pnm%set_comment proc~set_header->proc~set_comment proc~set_height forimage::format_pnm%set_height proc~set_header->proc~set_height proc~set_magicnumber forimage::format_pnm%set_magicnumber proc~set_header->proc~set_magicnumber proc~set_max_color forimage::format_pnm%set_max_color proc~set_header->proc~set_max_color proc~set_width forimage::format_pnm%set_width proc~set_header->proc~set_width Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Variables Type Attributes Name Initial type( format_pnm ) :: ex4 integer, dimension(10,6) :: px Source Code program example4 use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex4 integer , dimension ( 10 , 6 ) :: px px ( 1 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px ( 2 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px ( 3 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px ( 4 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px ( 5 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px ( 6 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px ( 7 ,:) = [ 1 , 0 , 0 , 0 , 1 , 0 ] px ( 8 ,:) = [ 0 , 1 , 1 , 1 , 0 , 0 ] px ( 9 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 ] px ( 10 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 ] call ex4 % set_pnm ( encoding = 'binary' , file_format = 'pbm' , width = 6 , height = 10 , comment = 'example 1' , pixels = px ) call ex4 % export_pnm ( 'pnm_files/example4_binary' ) call ex4 % dlloc () end program example4","tags":"","loc":"program/example4.html"},{"title":"example9 – ForImage","text":"Uses forimage program~~example9~~UsesGraph program~example9 example9 module~forimage forimage program~example9->module~forimage Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Calls program~~example9~~CallsGraph program~example9 example9 proc~deallocate_pnm forimage::format_pnm%deallocate_pnm program~example9->proc~deallocate_pnm proc~export_pnm forimage::format_pnm%export_pnm program~example9->proc~export_pnm proc~import_pnm forimage::format_pnm%import_pnm program~example9->proc~import_pnm proc~allocate_pixels forimage::format_pnm%allocate_pixels proc~import_pnm->proc~allocate_pixels Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Variables Type Attributes Name Initial type( format_pnm ) :: ex9 Source Code program example9 use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex9 call ex9 % import_pnm ( 'pnm_files/example3_ascii' , 'ppm' , 'ascii' ) call ex9 % export_pnm ( 'pnm_files/example3_ascii_ex' ) call ex9 % dlloc () end program example9","tags":"","loc":"program/example9.html"},{"title":"example11 – ForImage","text":"Uses forimage program~~example11~~UsesGraph program~example11 example11 module~forimage forimage program~example11->module~forimage Help × Graph Key Nodes of different colours represent the following: Graph Key Module Module Submodule Submodule Subroutine Subroutine Function Function Program Program This Page's Entity This Page's Entity Solid arrows point from a submodule to the (sub)module which it is\ndescended from. Dashed arrows point from a module or program unit to \nmodules which it uses. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Calls program~~example11~~CallsGraph program~example11 example11 proc~deallocate_pnm forimage::format_pnm%deallocate_pnm program~example11->proc~deallocate_pnm proc~export_pnm forimage::format_pnm%export_pnm program~example11->proc~export_pnm proc~import_pnm forimage::format_pnm%import_pnm program~example11->proc~import_pnm proc~allocate_pixels forimage::format_pnm%allocate_pixels proc~import_pnm->proc~allocate_pixels Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Type Bound Procedure Type Bound Procedure Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Variables Type Attributes Name Initial type( format_pnm ) :: ex11 Source Code program example11 use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex11 call ex11 % import_pnm ( 'pnm_files/example5_binary' , 'pgm' , 'binary' ) call ex11 % export_pnm ( 'pnm_files/example5_binary_ex' ) call ex11 % dlloc () end program example11","tags":"","loc":"program/example11.html"},{"title":"example7.f90 – ForImage","text":"This file depends on sourcefile~~example7.f90~~EfferentGraph sourcefile~example7.f90 example7.f90 sourcefile~forimage.f90 forimage.f90 sourcefile~example7.f90->sourcefile~forimage.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code program example7 use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex7 call ex7 % import_pnm ( 'pnm_files/example1_ascii' , 'pbm' , 'ascii' ) call ex7 % export_pnm ( 'pnm_files/example1_ascii_ex' ) call ex7 % dlloc () end program example7","tags":"","loc":"sourcefile/example7.f90.html"},{"title":"example10.f90 – ForImage","text":"This file depends on sourcefile~~example10.f90~~EfferentGraph sourcefile~example10.f90 example10.f90 sourcefile~forimage.f90 forimage.f90 sourcefile~example10.f90->sourcefile~forimage.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code program example10 use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex10 call ex10 % import_pnm ( 'pnm_files/example4_binary' , 'pbm' , 'binary' ) call ex10 % export_pnm ( 'pnm_files/example4_binary_ex' ) call ex10 % dlloc () end program example10","tags":"","loc":"sourcefile/example10.f90.html"},{"title":"example12.f90 – ForImage","text":"This file depends on sourcefile~~example12.f90~~EfferentGraph sourcefile~example12.f90 example12.f90 sourcefile~forimage.f90 forimage.f90 sourcefile~example12.f90->sourcefile~forimage.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code program example12 use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex12 call ex12 % import_pnm ( 'pnm_files/example6_binary' , 'ppm' , 'binary' ) call ex12 % export_pnm ( 'pnm_files/example6_binary_ex' ) call ex12 % dlloc () end program example12","tags":"","loc":"sourcefile/example12.f90.html"},{"title":"example2.f90 – ForImage","text":"This file depends on sourcefile~~example2.f90~~EfferentGraph sourcefile~example2.f90 example2.f90 sourcefile~forimage.f90 forimage.f90 sourcefile~example2.f90->sourcefile~forimage.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code program example2 use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex2 integer , dimension ( 60 , 60 ) :: px px = transpose ( reshapeshape = shape ( px ))) call ex2 % set_pnm ( encoding = 'ascii' , file_format = 'pgm' , width = 60 , height = 60 , max_color = 255 , comment = 'example 2' , pixels = px ) call ex2 % export_pnm ( 'pnm_files/example2_ascii' ) call ex2 % dlloc () end program example2","tags":"","loc":"sourcefile/example2.f90.html"},{"title":"example6.f90 – ForImage","text":"This file depends on sourcefile~~example6.f90~~EfferentGraph sourcefile~example6.f90 example6.f90 sourcefile~forimage.f90 forimage.f90 sourcefile~example6.f90->sourcefile~forimage.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code program example6 use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex6 integer , dimension ( 4 , 12 ) :: px px ( 1 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 15 , 0 , 15 ] px ( 2 ,:) = [ 0 , 0 , 0 , 0 , 15 , 7 , 0 , 0 , 0 , 0 , 0 , 0 ] px ( 3 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 15 , 7 , 0 , 0 , 0 ] px ( 4 ,:) = [ 15 , 0 , 15 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ] call ex6 % set_pnm ( encoding = 'binary' , file_format = 'ppm' , width = 4 , height = 4 , max_color = 15 , comment = 'example 2' , pixels = px ) call ex6 % export_pnm ( 'pnm_files/example6_binary' ) call ex6 % dlloc () end program example6","tags":"","loc":"sourcefile/example6.f90.html"},{"title":"example1.f90 – ForImage","text":"This file depends on sourcefile~~example1.f90~~EfferentGraph sourcefile~example1.f90 example1.f90 sourcefile~forimage.f90 forimage.f90 sourcefile~example1.f90->sourcefile~forimage.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code program example1 use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex1 integer , dimension ( 10 , 6 ) :: px px ( 1 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px ( 2 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px ( 3 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px ( 4 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px ( 5 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px ( 6 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px ( 7 ,:) = [ 1 , 0 , 0 , 0 , 1 , 0 ] px ( 8 ,:) = [ 0 , 1 , 1 , 1 , 0 , 0 ] px ( 9 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 ] px ( 10 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 ] call ex1 % set_pnm ( encoding = 'ascii' , file_format = 'pbm' , width = 6 , height = 10 , comment = 'example 1' , pixels = px ) call ex1 % export_pnm ( 'pnm_files/example1_ascii' ) call ex1 % dlloc () end program example1","tags":"","loc":"sourcefile/example1.f90.html"},{"title":"example5.f90 – ForImage","text":"This file depends on sourcefile~~example5.f90~~EfferentGraph sourcefile~example5.f90 example5.f90 sourcefile~forimage.f90 forimage.f90 sourcefile~example5.f90->sourcefile~forimage.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code program example use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex5 integer , dimension ( 60 , 60 ) :: px px = transpose ( reshapeshape = shape ( px ))) call ex5 % set_pnm ( encoding = 'binary' , file_format = 'pgm' , width = 60 , height = 60 , max_color = 255 , comment = 'example 2' , pixels = px ) call ex5 % export_pnm ( 'pnm_files/example5_binary' ) call ex5 % dlloc () end program example","tags":"","loc":"sourcefile/example5.f90.html"},{"title":"example3.f90 – ForImage","text":"This file depends on sourcefile~~example3.f90~~EfferentGraph sourcefile~example3.f90 example3.f90 sourcefile~forimage.f90 forimage.f90 sourcefile~example3.f90->sourcefile~forimage.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code program example3 use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex3 integer , dimension ( 4 , 12 ) :: px px ( 1 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 15 , 0 , 15 ] px ( 2 ,:) = [ 0 , 0 , 0 , 0 , 15 , 7 , 0 , 0 , 0 , 0 , 0 , 0 ] px ( 3 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 , 0 , 15 , 7 , 0 , 0 , 0 ] px ( 4 ,:) = [ 15 , 0 , 15 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 , 0 ] call ex3 % set_pnm ( encoding = 'ascii' , file_format = 'ppm' , width = 4 , height = 4 , max_color = 15 , comment = 'example 2' , pixels = px ) call ex3 % export_pnm ( 'pnm_files/example3_ascii' ) call ex3 % dlloc () end program example3","tags":"","loc":"sourcefile/example3.f90.html"},{"title":"example8.f90 – ForImage","text":"This file depends on sourcefile~~example8.f90~~EfferentGraph sourcefile~example8.f90 example8.f90 sourcefile~forimage.f90 forimage.f90 sourcefile~example8.f90->sourcefile~forimage.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code program example8 use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex8 call ex8 % import_pnm ( 'pnm_files/example2_ascii' , 'pgm' , 'ascii' ) call ex8 % export_pnm ( 'pnm_files/example2_ascii_ex' ) call ex8 % dlloc () end program example8","tags":"","loc":"sourcefile/example8.f90.html"},{"title":"example4.f90 – ForImage","text":"This file depends on sourcefile~~example4.f90~~EfferentGraph sourcefile~example4.f90 example4.f90 sourcefile~forimage.f90 forimage.f90 sourcefile~example4.f90->sourcefile~forimage.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code program example4 use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex4 integer , dimension ( 10 , 6 ) :: px px ( 1 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px ( 2 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px ( 3 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px ( 4 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px ( 5 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px ( 6 ,:) = [ 0 , 0 , 0 , 0 , 1 , 0 ] px ( 7 ,:) = [ 1 , 0 , 0 , 0 , 1 , 0 ] px ( 8 ,:) = [ 0 , 1 , 1 , 1 , 0 , 0 ] px ( 9 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 ] px ( 10 ,:) = [ 0 , 0 , 0 , 0 , 0 , 0 ] call ex4 % set_pnm ( encoding = 'binary' , file_format = 'pbm' , width = 6 , height = 10 , comment = 'example 1' , pixels = px ) call ex4 % export_pnm ( 'pnm_files/example4_binary' ) call ex4 % dlloc () end program example4","tags":"","loc":"sourcefile/example4.f90.html"},{"title":"example9.f90 – ForImage","text":"This file depends on sourcefile~~example9.f90~~EfferentGraph sourcefile~example9.f90 example9.f90 sourcefile~forimage.f90 forimage.f90 sourcefile~example9.f90->sourcefile~forimage.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code program example9 use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex9 call ex9 % import_pnm ( 'pnm_files/example3_ascii' , 'ppm' , 'ascii' ) call ex9 % export_pnm ( 'pnm_files/example3_ascii_ex' ) call ex9 % dlloc () end program example9","tags":"","loc":"sourcefile/example9.f90.html"},{"title":"forimage.f90 – ForImage","text":"Files dependent on this one sourcefile~~forimage.f90~~AfferentGraph sourcefile~forimage.f90 forimage.f90 sourcefile~example1.f90 example1.f90 sourcefile~example1.f90->sourcefile~forimage.f90 sourcefile~example10.f90 example10.f90 sourcefile~example10.f90->sourcefile~forimage.f90 sourcefile~example11.f90 example11.f90 sourcefile~example11.f90->sourcefile~forimage.f90 sourcefile~example12.f90 example12.f90 sourcefile~example12.f90->sourcefile~forimage.f90 sourcefile~example2.f90 example2.f90 sourcefile~example2.f90->sourcefile~forimage.f90 sourcefile~example3.f90 example3.f90 sourcefile~example3.f90->sourcefile~forimage.f90 sourcefile~example4.f90 example4.f90 sourcefile~example4.f90->sourcefile~forimage.f90 sourcefile~example5.f90 example5.f90 sourcefile~example5.f90->sourcefile~forimage.f90 sourcefile~example6.f90 example6.f90 sourcefile~example6.f90->sourcefile~forimage.f90 sourcefile~example7.f90 example7.f90 sourcefile~example7.f90->sourcefile~forimage.f90 sourcefile~example8.f90 example8.f90 sourcefile~example8.f90->sourcefile~forimage.f90 sourcefile~example9.f90 example9.f90 sourcefile~example9.f90->sourcefile~forimage.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code module forimage implicit none private public format_pnm !=============================================================================== type format_pnm character ( 2 ) :: magic_number integer :: width integer :: height character ( 70 ) :: comment integer :: max_color integer , dimension (:,:), allocatable :: pixels character ( 3 ) :: file_format character ( 5 ) :: encoding contains procedure :: set_format procedure :: set_file_format procedure :: set_magicnumber procedure :: set_width procedure :: set_height procedure :: set_comment procedure :: set_max_color procedure :: set_header procedure :: allocate_pixels procedure :: set_pixels procedure :: export_pnm procedure :: set_pnm procedure :: import_pnm procedure :: dlloc => deallocate_pnm end type format_pnm !=============================================================================== contains !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_file_format ( this , file_format ) class ( format_pnm ), intent ( inout ) :: this character ( 3 ), intent ( in ) :: file_format this % file_format = file_format end subroutine set_file_format !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_format ( this , encoding ) class ( format_pnm ), intent ( inout ) :: this character ( * ), intent ( in ) :: encoding this % encoding = encoding end subroutine set_format !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine deallocate_pnm ( this ) class ( format_pnm ), intent ( inout ) :: this if ( allocated ( this % pixels )) deallocate ( this % pixels ) end subroutine deallocate_pnm !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi impure subroutine import_pnm ( this , file_name , file_format , encoding ) class ( format_pnm ), intent ( inout ) :: this character ( * ), intent ( in ) :: file_name character ( * ), intent ( in ) :: encoding character ( 3 ), intent ( in ) :: file_format integer :: nunit , i character :: temp character , allocatable :: temp_pixel (:) this % file_format = file_format this % encoding = encoding select case ( encoding ) case ( 'binary' , 'raw' ) select case ( file_format ) case ( 'pbm' ) open ( newunit = nunit , file = file_name // '.' // file_format ) read ( nunit , * ) this % magic_number read ( nunit , * ) temp , this % comment read ( nunit , * ) this % width , this % height call this % allocate_pixels () allocate ( temp_pixel ( this % height * this % width )) read ( nunit , '(*(a))' , advance = 'no' ) temp_pixel this % pixels = transpose ( reshape ( ichar ( temp_pixel ), [ this % height , this % width ])) close ( nunit ) case ( 'pgm' ) open ( newunit = nunit , file = file_name // '.' // file_format ) read ( nunit , * ) this % magic_number read ( nunit , * ) temp , this % comment read ( nunit , * ) this % width , this % height read ( nunit , * ) this % max_color call this % allocate_pixels () allocate ( temp_pixel ( this % height * this % width )) read ( nunit , '(*(a))' , advance = 'no' ) temp_pixel this % pixels = transpose ( reshape ( ichar ( temp_pixel ), [ this % height , this % width ])) close ( nunit ) case ( 'ppm' ) open ( newunit = nunit , file = file_name // '.' // file_format ) read ( nunit , * ) this % magic_number read ( nunit , * ) temp , this % comment read ( nunit , * ) this % width , this % height read ( nunit , * ) this % max_color call this % allocate_pixels () allocate ( temp_pixel ( this % height * this % width * 3 )) read ( nunit , '(*(a))' , advance = 'no' ) temp_pixel this % pixels = transpose ( reshape ( ichar ( temp_pixel ), [ this % height , 3 * this % width ])) close ( nunit ) end select case ( 'ascii' , 'plain' ) select case ( file_format ) case ( 'pbm' ) open ( newunit = nunit , file = file_name // '.' // file_format ) read ( nunit , * ) this % magic_number read ( nunit , * ) temp , this % comment read ( nunit , * ) this % width , this % height call this % allocate_pixels () do i = 1 , size ( this % pixels , 1 ) read ( nunit , * ) this % pixels ( i ,:) end do close ( nunit ) case ( 'pgm' ) open ( newunit = nunit , file = file_name // '.' // file_format ) read ( nunit , * ) this % magic_number read ( nunit , * ) temp , this % comment read ( nunit , * ) this % width , this % height read ( nunit , * ) this % max_color call this % allocate_pixels () do i = 1 , size ( this % pixels , 1 ) read ( nunit , * ) this % pixels ( i ,:) end do close ( nunit ) case ( 'ppm' ) open ( newunit = nunit , file = file_name // '.' // file_format ) read ( nunit , * ) this % magic_number read ( nunit , * ) temp , this % comment read ( nunit , * ) this % width , this % height read ( nunit , * ) this % max_color call this % allocate_pixels () do i = 1 , size ( this % pixels , 1 ) read ( nunit , * ) this % pixels ( i ,:) end do close ( nunit ) end select end select end subroutine import_pnm !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi pure subroutine set_pnm ( this , encoding , file_format , width , height , max_color , comment , pixels ) class ( format_pnm ), intent ( inout ) :: this integer , intent ( in ) :: width integer , intent ( in ) :: height character ( * ), intent ( in ) :: comment integer , optional , intent ( in ) :: max_color integer , dimension (:,:), intent ( in ) :: pixels character ( * ), intent ( in ) :: encoding character ( 3 ), intent ( in ) :: file_format character ( 2 ) :: magic_number select case ( encoding ) case ( 'ascii' , 'plain' ) select case ( file_format ) case ( 'pbm' ) magic_number = 'P1' case ( 'pgm' ) magic_number = 'P2' case ( 'ppm' ) magic_number = 'P3' end select case ( 'binary' , 'raw' ) select case ( file_format ) case ( 'pbm' ) magic_number = 'P4' case ( 'pgm' ) magic_number = 'P5' case ( 'ppm' ) magic_number = 'P6' end select end select call this % set_format ( encoding ) call this % set_file_format ( file_format ) call this % set_header ( magic_number , width , height , comment , max_color ) call this % allocate_pixels () call this % set_pixels ( pixels ) end subroutine set_pnm !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine allocate_pixels ( this ) class ( format_pnm ), intent ( inout ) :: this select case ( this % magic_number ) case ( 'P1' ) if (. not . allocated ( this % pixels )) allocate ( this % pixels ( this % height , this % width )) case ( 'P2' ) if (. not . allocated ( this % pixels )) allocate ( this % pixels ( this % height , this % width )) case ( 'P3' ) if (. not . allocated ( this % pixels )) allocate ( this % pixels ( this % height , 3 * this % width )) end select end subroutine allocate_pixels !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_magicnumber ( this , magic_number ) class ( format_pnm ), intent ( inout ) :: this character ( * ), intent ( in ) :: magic_number this % magic_number = magic_number end subroutine set_magicnumber !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_width ( this , width ) class ( format_pnm ), intent ( inout ) :: this integer , intent ( in ) :: width this % width = width end subroutine set_width !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_height ( this , height ) class ( format_pnm ), intent ( inout ) :: this integer , intent ( in ) :: height this % height = height end subroutine set_height !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_comment ( this , comment ) class ( format_pnm ), intent ( inout ) :: this character ( * ), intent ( in ) :: comment this % comment = comment end subroutine set_comment !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_max_color ( this , max_color ) class ( format_pnm ), intent ( inout ) :: this integer , intent ( in ) :: max_color this % max_color = max_color end subroutine set_max_color !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_header ( this , magic_number , width , height , comment , max_color ) class ( format_pnm ), intent ( inout ) :: this character ( * ), intent ( in ) :: magic_number integer , intent ( in ) :: width integer , intent ( in ) :: height character ( * ), intent ( in ) :: comment integer , optional , intent ( in ) :: max_color call this % set_magicnumber ( magic_number ) call this % set_width ( width ) call this % set_height ( height ) call this % set_comment ( comment ) if ( this % file_format /= 'pbm' ) call this % set_max_color ( max_color ) end subroutine set_header !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi pure subroutine set_pixels ( this , pixels ) class ( format_pnm ), intent ( inout ) :: this integer , dimension (:,:), intent ( in ) :: pixels this % pixels = pixels end subroutine set_pixels !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_pixel ( this , grey , r , g , b , i , j ) class ( format_pnm ), intent ( inout ) :: this integer , intent ( in ), optional :: grey integer , intent ( in ), optional :: r , g , b integer , intent ( in ) :: i , j select case ( this % magic_number ) case ( 'P1' ) this % pixels ( i , j ) = grey case ( 'P2' ) this % pixels ( i , j ) = grey case ( 'P3' ) this % pixels ( i , 3 * j - 2 ) = r this % pixels ( i , 3 * j - 1 ) = g this % pixels ( i , 3 * j - 0 ) = b end select end subroutine set_pixel !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi impure subroutine export_pnm ( this , file_name ) class ( format_pnm ), intent ( inout ) :: this character ( * ), intent ( in ) :: file_name integer :: nunit , i , j open ( newunit = nunit , file = file_name // '.' // this % file_format , status = 'replace' ) write ( nunit , '(a)' ) this % magic_number write ( nunit , '(a,a)' ) '# ' , this % comment write ( nunit , '(g0,1x,g0)' ) this % width , this % height if ( this % file_format /= 'pbm' ) write ( nunit , '(g0)' ) this % max_color select case ( this % magic_number ) case ( 'P1' , 'P2' , 'P3' ) do i = 1 , size ( this % pixels , 1 ) write ( nunit , '(*(g0,1x))' ) this % pixels ( i ,:) end do case ( 'P4' , 'P5' , 'P6' ) do i = 1 , size ( this % pixels , 1 ) do j = 1 , size ( this % pixels , 2 ) write ( nunit , '(*(a))' , advance = 'no' ) achar ( this % pixels ( i , j )) end do end do end select close ( nunit ) end subroutine export_pnm !=============================================================================== end module forimage","tags":"","loc":"sourcefile/forimage.f90.html"},{"title":"example11.f90 – ForImage","text":"This file depends on sourcefile~~example11.f90~~EfferentGraph sourcefile~example11.f90 example11.f90 sourcefile~forimage.f90 forimage.f90 sourcefile~example11.f90->sourcefile~forimage.f90 Help × Graph Key Nodes of different colours represent the following: Graph Key Source File Source File This Page's Entity This Page's Entity Solid arrows point from a file to a file which it depends on. A file\nis dependent upon another if the latter must be compiled before the former\ncan be. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Source Code program example11 use forimage , only : format_pnm implicit none type ( format_pnm ) :: ex11 call ex11 % import_pnm ( 'pnm_files/example5_binary' , 'pgm' , 'binary' ) call ex11 % export_pnm ( 'pnm_files/example5_binary_ex' ) call ex11 % dlloc () end program example11","tags":"","loc":"sourcefile/example11.f90.html"}]}