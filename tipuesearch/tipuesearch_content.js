var tipuesearch = {"pages":[{"title":" forimage ","text":"forimage Developer Info Seyed Ali Ghasemi","tags":"home","loc":"index.html"},{"title":"format_pnm – forimage ","text":"type, public :: format_pnm Contents Variables magic_number width height comment max_color pixels file_format encoding Type-Bound Procedures set_format set_file_format set_magicnumber set_width set_height set_comment set_max_color set_header allocate_pixels set_pixels export_pnm set_pnm import_pnm dlloc Source Code format_pnm Components Type Visibility Attributes Name Initial character(len=2), public :: magic_number integer, public :: width integer, public :: height character(len=70), public :: comment integer, public :: max_color integer, public, dimension(:,:), allocatable :: pixels character(len=3), public :: file_format character(len=5), public :: encoding Type-Bound Procedures procedure, public,  :: set_format private pure elemental subroutine set_format (this, encoding) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: encoding procedure, public,  :: set_file_format private pure elemental subroutine set_file_format (this, file_format) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=3), intent(in) :: file_format procedure, public,  :: set_magicnumber private pure elemental subroutine set_magicnumber (this, magic_number) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: magic_number procedure, public,  :: set_width private pure elemental subroutine set_width (this, width) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this integer, intent(in) :: width procedure, public,  :: set_height private pure elemental subroutine set_height (this, height) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this integer, intent(in) :: height procedure, public,  :: set_comment private pure elemental subroutine set_comment (this, comment) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: comment procedure, public,  :: set_max_color private pure elemental subroutine set_max_color (this, max_color) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this integer, intent(in) :: max_color procedure, public,  :: set_header private pure elemental subroutine set_header (this, magic_number, width, height, comment, max_color) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: magic_number integer, intent(in) :: width integer, intent(in) :: height character(len=*), intent(in) :: comment integer, intent(in), optional :: max_color procedure, public,  :: allocate_pixels private pure elemental subroutine allocate_pixels (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this procedure, public,  :: set_pixels private pure subroutine set_pixels (this, pixels) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this integer, intent(in), dimension(:,:) :: pixels procedure, public,  :: export_pnm private impure subroutine export_pnm (this, file_name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: file_name procedure, public,  :: set_pnm private pure subroutine set_pnm (this, encoding, file_format, width, height, max_color, comment, pixels) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: encoding character(len=3), intent(in) :: file_format integer, intent(in) :: width integer, intent(in) :: height integer, intent(in), optional :: max_color character(len=*), intent(in) :: comment integer, intent(in), dimension(:,:) :: pixels procedure, public,  :: import_pnm private impure subroutine import_pnm (this, file_name, file_format, encoding) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: file_name character(len=3), intent(in) :: file_format character(len=*), intent(in) :: encoding procedure, public,  :: dlloc => deallocate_pnm private pure elemental subroutine deallocate_pnm (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this Source Code type format_pnm character ( 2 ) :: magic_number integer :: width integer :: height character ( 70 ) :: comment integer :: max_color integer , dimension (:,:), allocatable :: pixels character ( 3 ) :: file_format character ( 5 ) :: encoding contains procedure :: set_format procedure :: set_file_format procedure :: set_magicnumber procedure :: set_width procedure :: set_height procedure :: set_comment procedure :: set_max_color procedure :: set_header procedure :: allocate_pixels procedure :: set_pixels procedure :: export_pnm procedure :: set_pnm procedure :: import_pnm procedure :: dlloc => deallocate_pnm end type format_pnm","tags":"","loc":"type/format_pnm.html"},{"title":"set_file_format – forimage","text":"private pure elemental subroutine set_file_format(this, file_format) Type Bound format_pnm Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=3), intent(in) :: file_format Called by proc~~set_file_format~~CalledByGraph proc~set_file_format forimage::format_pnm%set_file_format proc~set_pnm forimage::format_pnm%set_pnm proc~set_pnm->proc~set_file_format Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code set_file_format Source Code elemental pure subroutine set_file_format ( this , file_format ) class ( format_pnm ), intent ( inout ) :: this character ( 3 ), intent ( in ) :: file_format this % file_format = file_format end subroutine set_file_format","tags":"","loc":"proc/set_file_format.html"},{"title":"set_format – forimage","text":"private pure elemental subroutine set_format(this, encoding) Type Bound format_pnm Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: encoding Called by proc~~set_format~~CalledByGraph proc~set_format forimage::format_pnm%set_format proc~set_pnm forimage::format_pnm%set_pnm proc~set_pnm->proc~set_format Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code set_format Source Code elemental pure subroutine set_format ( this , encoding ) class ( format_pnm ), intent ( inout ) :: this character ( * ), intent ( in ) :: encoding this % encoding = encoding end subroutine set_format","tags":"","loc":"proc/set_format.html"},{"title":"deallocate_pnm – forimage","text":"private pure elemental subroutine deallocate_pnm(this) Type Bound format_pnm Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this Contents Source Code deallocate_pnm Source Code elemental pure subroutine deallocate_pnm ( this ) class ( format_pnm ), intent ( inout ) :: this if ( allocated ( this % pixels )) deallocate ( this % pixels ) end subroutine deallocate_pnm","tags":"","loc":"proc/deallocate_pnm.html"},{"title":"import_pnm – forimage","text":"private impure subroutine import_pnm(this, file_name, file_format, encoding) Type Bound format_pnm Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: file_name character(len=3), intent(in) :: file_format character(len=*), intent(in) :: encoding Calls proc~~import_pnm~~CallsGraph proc~import_pnm forimage::format_pnm%import_pnm pixels pixels proc~import_pnm->pixels proc~allocate_pixels forimage::format_pnm%allocate_pixels proc~import_pnm->proc~allocate_pixels proc~allocate_pixels->pixels Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code import_pnm Source Code impure subroutine import_pnm ( this , file_name , file_format , encoding ) class ( format_pnm ), intent ( inout ) :: this character ( * ), intent ( in ) :: file_name character ( * ), intent ( in ) :: encoding character ( 3 ), intent ( in ) :: file_format integer :: nunit , i character :: temp this % file_format = file_format this % encoding = encoding select case ( encoding ) case ( 'binary' , 'raw' ) print * , 'Error: not implementet yet!' select case ( file_format ) case ( 'pbm' ) case ( 'pgm' ) case ( 'ppm' ) end select case ( 'ascii' , 'plain' ) select case ( file_format ) case ( 'pbm' ) open ( newunit = nunit , file = file_name // '.' // file_format ) read ( nunit , * ) this % magic_number read ( nunit , * ) temp , this % comment read ( nunit , * ) this % width , this % height call this % allocate_pixels () do i = 1 , size ( this % pixels , 1 ) read ( nunit , * ) this % pixels ( i ,:) end do close ( nunit ) case ( 'pgm' ) open ( newunit = nunit , file = file_name // '.' // file_format ) read ( nunit , * ) this % magic_number read ( nunit , * ) temp , this % comment read ( nunit , * ) this % width , this % height read ( nunit , * ) this % max_color call this % allocate_pixels () do i = 1 , size ( this % pixels , 1 ) read ( nunit , * ) this % pixels ( i ,:) end do close ( nunit ) case ( 'ppm' ) open ( newunit = nunit , file = file_name // '.' // file_format ) read ( nunit , * ) this % magic_number read ( nunit , * ) temp , this % comment read ( nunit , * ) this % width , this % height read ( nunit , * ) this % max_color call this % allocate_pixels () do i = 1 , size ( this % pixels , 1 ) read ( nunit , * ) this % pixels ( i ,:) end do close ( nunit ) end select end select end subroutine import_pnm","tags":"","loc":"proc/import_pnm.html"},{"title":"set_pnm – forimage","text":"private pure subroutine set_pnm(this, encoding, file_format, width, height, max_color, comment, pixels) Type Bound format_pnm Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: encoding character(len=3), intent(in) :: file_format integer, intent(in) :: width integer, intent(in) :: height integer, intent(in), optional :: max_color character(len=*), intent(in) :: comment integer, intent(in), dimension(:,:) :: pixels Calls proc~~set_pnm~~CallsGraph proc~set_pnm forimage::format_pnm%set_pnm proc~allocate_pixels forimage::format_pnm%allocate_pixels proc~set_pnm->proc~allocate_pixels proc~set_file_format forimage::format_pnm%set_file_format proc~set_pnm->proc~set_file_format proc~set_format forimage::format_pnm%set_format proc~set_pnm->proc~set_format proc~set_header forimage::format_pnm%set_header proc~set_pnm->proc~set_header proc~set_pixels forimage::format_pnm%set_pixels proc~set_pnm->proc~set_pixels pixels pixels proc~allocate_pixels->pixels proc~set_comment forimage::format_pnm%set_comment proc~set_header->proc~set_comment proc~set_height forimage::format_pnm%set_height proc~set_header->proc~set_height proc~set_magicnumber forimage::format_pnm%set_magicnumber proc~set_header->proc~set_magicnumber proc~set_max_color forimage::format_pnm%set_max_color proc~set_header->proc~set_max_color proc~set_width forimage::format_pnm%set_width proc~set_header->proc~set_width Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code set_pnm Source Code pure subroutine set_pnm ( this , encoding , file_format , width , height , max_color , comment , pixels ) class ( format_pnm ), intent ( inout ) :: this integer , intent ( in ) :: width integer , intent ( in ) :: height character ( * ), intent ( in ) :: comment integer , optional , intent ( in ) :: max_color integer , dimension (:,:), intent ( in ) :: pixels character ( * ), intent ( in ) :: encoding character ( 3 ), intent ( in ) :: file_format character ( 2 ) :: magic_number select case ( encoding ) case ( 'ascii' , 'plain' ) select case ( file_format ) case ( 'pbm' ) magic_number = 'P1' case ( 'pgm' ) magic_number = 'P2' case ( 'ppm' ) magic_number = 'P3' end select case ( 'binary' , 'raw' ) error stop 'Error: not implementet yet!' select case ( file_format ) case ( 'pbm' ) magic_number = 'P4' case ( 'pgm' ) magic_number = 'P5' case ( 'ppm' ) magic_number = 'P6' end select end select call this % set_format ( encoding ) call this % set_file_format ( file_format ) call this % set_header ( magic_number , width , height , comment , max_color ) call this % allocate_pixels () call this % set_pixels ( pixels ) end subroutine set_pnm","tags":"","loc":"proc/set_pnm.html"},{"title":"allocate_pixels – forimage","text":"private pure elemental subroutine allocate_pixels(this) Type Bound format_pnm Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this Calls proc~~allocate_pixels~~CallsGraph proc~allocate_pixels forimage::format_pnm%allocate_pixels pixels pixels proc~allocate_pixels->pixels Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~allocate_pixels~~CalledByGraph proc~allocate_pixels forimage::format_pnm%allocate_pixels proc~import_pnm forimage::format_pnm%import_pnm proc~import_pnm->proc~allocate_pixels proc~set_pnm forimage::format_pnm%set_pnm proc~set_pnm->proc~allocate_pixels Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code allocate_pixels Source Code elemental pure subroutine allocate_pixels ( this ) class ( format_pnm ), intent ( inout ) :: this select case ( this % magic_number ) case ( 'P1' ) if (. not . allocated ( this % pixels )) allocate ( this % pixels ( this % height , this % width )) case ( 'P2' ) if (. not . allocated ( this % pixels )) allocate ( this % pixels ( this % height , this % width )) case ( 'P3' ) if (. not . allocated ( this % pixels )) allocate ( this % pixels ( this % height , 3 * this % width )) end select end subroutine allocate_pixels","tags":"","loc":"proc/allocate_pixels.html"},{"title":"set_magicnumber – forimage","text":"private pure elemental subroutine set_magicnumber(this, magic_number) Type Bound format_pnm Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: magic_number Called by proc~~set_magicnumber~~CalledByGraph proc~set_magicnumber forimage::format_pnm%set_magicnumber proc~set_header forimage::format_pnm%set_header proc~set_header->proc~set_magicnumber proc~set_pnm forimage::format_pnm%set_pnm proc~set_pnm->proc~set_header Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code set_magicnumber Source Code elemental pure subroutine set_magicnumber ( this , magic_number ) class ( format_pnm ), intent ( inout ) :: this character ( * ), intent ( in ) :: magic_number this % magic_number = magic_number end subroutine set_magicnumber","tags":"","loc":"proc/set_magicnumber.html"},{"title":"set_width – forimage","text":"private pure elemental subroutine set_width(this, width) Type Bound format_pnm Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this integer, intent(in) :: width Called by proc~~set_width~~CalledByGraph proc~set_width forimage::format_pnm%set_width proc~set_header forimage::format_pnm%set_header proc~set_header->proc~set_width proc~set_pnm forimage::format_pnm%set_pnm proc~set_pnm->proc~set_header Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code set_width Source Code elemental pure subroutine set_width ( this , width ) class ( format_pnm ), intent ( inout ) :: this integer , intent ( in ) :: width this % width = width end subroutine set_width","tags":"","loc":"proc/set_width.html"},{"title":"set_height – forimage","text":"private pure elemental subroutine set_height(this, height) Type Bound format_pnm Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this integer, intent(in) :: height Called by proc~~set_height~~CalledByGraph proc~set_height forimage::format_pnm%set_height proc~set_header forimage::format_pnm%set_header proc~set_header->proc~set_height proc~set_pnm forimage::format_pnm%set_pnm proc~set_pnm->proc~set_header Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code set_height Source Code elemental pure subroutine set_height ( this , height ) class ( format_pnm ), intent ( inout ) :: this integer , intent ( in ) :: height this % height = height end subroutine set_height","tags":"","loc":"proc/set_height.html"},{"title":"set_comment – forimage","text":"private pure elemental subroutine set_comment(this, comment) Type Bound format_pnm Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: comment Called by proc~~set_comment~~CalledByGraph proc~set_comment forimage::format_pnm%set_comment proc~set_header forimage::format_pnm%set_header proc~set_header->proc~set_comment proc~set_pnm forimage::format_pnm%set_pnm proc~set_pnm->proc~set_header Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code set_comment Source Code elemental pure subroutine set_comment ( this , comment ) class ( format_pnm ), intent ( inout ) :: this character ( * ), intent ( in ) :: comment this % comment = comment end subroutine set_comment","tags":"","loc":"proc/set_comment.html"},{"title":"set_max_color – forimage","text":"private pure elemental subroutine set_max_color(this, max_color) Type Bound format_pnm Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this integer, intent(in) :: max_color Called by proc~~set_max_color~~CalledByGraph proc~set_max_color forimage::format_pnm%set_max_color proc~set_header forimage::format_pnm%set_header proc~set_header->proc~set_max_color proc~set_pnm forimage::format_pnm%set_pnm proc~set_pnm->proc~set_header Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code set_max_color Source Code elemental pure subroutine set_max_color ( this , max_color ) class ( format_pnm ), intent ( inout ) :: this integer , intent ( in ) :: max_color this % max_color = max_color end subroutine set_max_color","tags":"","loc":"proc/set_max_color.html"},{"title":"set_header – forimage","text":"private pure elemental subroutine set_header(this, magic_number, width, height, comment, max_color) Type Bound format_pnm Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: magic_number integer, intent(in) :: width integer, intent(in) :: height character(len=*), intent(in) :: comment integer, intent(in), optional :: max_color Calls proc~~set_header~~CallsGraph proc~set_header forimage::format_pnm%set_header proc~set_comment forimage::format_pnm%set_comment proc~set_header->proc~set_comment proc~set_height forimage::format_pnm%set_height proc~set_header->proc~set_height proc~set_magicnumber forimage::format_pnm%set_magicnumber proc~set_header->proc~set_magicnumber proc~set_max_color forimage::format_pnm%set_max_color proc~set_header->proc~set_max_color proc~set_width forimage::format_pnm%set_width proc~set_header->proc~set_width Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Called by proc~~set_header~~CalledByGraph proc~set_header forimage::format_pnm%set_header proc~set_pnm forimage::format_pnm%set_pnm proc~set_pnm->proc~set_header Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code set_header Source Code elemental pure subroutine set_header ( this , magic_number , width , height , comment , max_color ) class ( format_pnm ), intent ( inout ) :: this character ( * ), intent ( in ) :: magic_number integer , intent ( in ) :: width integer , intent ( in ) :: height character ( * ), intent ( in ) :: comment integer , optional , intent ( in ) :: max_color call this % set_magicnumber ( magic_number ) call this % set_width ( height ) call this % set_height ( width ) call this % set_comment ( comment ) if ( this % file_format /= 'pbm' ) call this % set_max_color ( max_color ) end subroutine set_header","tags":"","loc":"proc/set_header.html"},{"title":"set_pixels – forimage","text":"private pure subroutine set_pixels(this, pixels) Type Bound format_pnm Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this integer, intent(in), dimension(:,:) :: pixels Called by proc~~set_pixels~~CalledByGraph proc~set_pixels forimage::format_pnm%set_pixels proc~set_pnm forimage::format_pnm%set_pnm proc~set_pnm->proc~set_pixels Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code set_pixels Source Code pure subroutine set_pixels ( this , pixels ) class ( format_pnm ), intent ( inout ) :: this integer , dimension (:,:), intent ( in ) :: pixels this % pixels = pixels end subroutine set_pixels","tags":"","loc":"proc/set_pixels.html"},{"title":"set_pixel – forimage","text":"private pure elemental subroutine set_pixel(this, grey, r, g, b, i, j) Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this integer, intent(in), optional :: grey integer, intent(in), optional :: r integer, intent(in), optional :: g integer, intent(in), optional :: b integer, intent(in) :: i integer, intent(in) :: j Contents Source Code set_pixel Source Code elemental pure subroutine set_pixel ( this , grey , r , g , b , i , j ) class ( format_pnm ), intent ( inout ) :: this integer , intent ( in ), optional :: grey integer , intent ( in ), optional :: r , g , b integer , intent ( in ) :: i , j select case ( this % magic_number ) case ( 'P1' ) this % pixels ( i , j ) = grey case ( 'P2' ) this % pixels ( i , j ) = grey case ( 'P3' ) this % pixels ( i , 3 * j - 2 ) = r this % pixels ( i , 3 * j - 1 ) = g this % pixels ( i , 3 * j - 0 ) = b end select end subroutine set_pixel","tags":"","loc":"proc/set_pixel.html"},{"title":"export_pnm – forimage","text":"private impure subroutine export_pnm(this, file_name) Type Bound format_pnm Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: file_name Calls proc~~export_pnm~~CallsGraph proc~export_pnm forimage::format_pnm%export_pnm pixels pixels proc~export_pnm->pixels Help × Graph Key Nodes of different colours represent the following: Graph Key Subroutine Subroutine Function Function Interface Interface Unknown Procedure Type Unknown Procedure Type Program Program This Page's Entity This Page's Entity Solid arrows point from a procedure to one which it calls. Dashed \narrows point from an interface to procedures which implement that interface.\nThis could include the module procedures in a generic interface or the\nimplementation in a submodule of an interface in a parent module. Where possible, edges connecting nodes are\ngiven different colours to make them easier to distinguish in\nlarge graphs. Contents Source Code export_pnm Source Code impure subroutine export_pnm ( this , file_name ) class ( format_pnm ), intent ( inout ) :: this character ( * ), intent ( in ) :: file_name integer :: nunit , i open ( newunit = nunit , file = file_name // '.' // this % file_format , status = 'replace' ) write ( nunit , '(a)' ) this % magic_number write ( nunit , '(a,a)' ) '# ' , this % comment write ( nunit , '(g0,1x,g0)' ) this % width , this % height if ( this % file_format /= 'pbm' ) write ( nunit , '(g0)' ) this % max_color do i = 1 , size ( this % pixels , 1 ) write ( nunit , '(*(g0,1x))' ) this % pixels ( i ,:) end do close ( nunit ) end subroutine export_pnm","tags":"","loc":"proc/export_pnm.html"},{"title":"forimage – forimage","text":"Contents Derived Types format_pnm Subroutines set_file_format set_format deallocate_pnm import_pnm set_pnm allocate_pixels set_magicnumber set_width set_height set_comment set_max_color set_header set_pixels set_pixel export_pnm Derived Types type, public :: format_pnm Components Type Visibility Attributes Name Initial character(len=2), public :: magic_number integer, public :: width integer, public :: height character(len=70), public :: comment integer, public :: max_color integer, public, dimension(:,:), allocatable :: pixels character(len=3), public :: file_format character(len=5), public :: encoding Type-Bound Procedures procedure\n                    ,                  public\n,                   :: set_format Subroutine procedure\n                    ,                  public\n,                   :: set_file_format Subroutine procedure\n                    ,                  public\n,                   :: set_magicnumber Subroutine procedure\n                    ,                  public\n,                   :: set_width Subroutine procedure\n                    ,                  public\n,                   :: set_height Subroutine procedure\n                    ,                  public\n,                   :: set_comment Subroutine procedure\n                    ,                  public\n,                   :: set_max_color Subroutine procedure\n                    ,                  public\n,                   :: set_header Subroutine procedure\n                    ,                  public\n,                   :: allocate_pixels Subroutine procedure\n                    ,                  public\n,                   :: set_pixels Subroutine procedure\n                    ,                  public\n,                   :: export_pnm Subroutine procedure\n                    ,                  public\n,                   :: set_pnm Subroutine procedure\n                    ,                  public\n,                   :: import_pnm Subroutine procedure\n                    ,                  public\n,                   :: dlloc => deallocate_pnm Subroutine Subroutines private pure elemental subroutine set_file_format (this, file_format) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=3), intent(in) :: file_format private pure elemental subroutine set_format (this, encoding) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: encoding private pure elemental subroutine deallocate_pnm (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this private impure subroutine import_pnm (this, file_name, file_format, encoding) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: file_name character(len=3), intent(in) :: file_format character(len=*), intent(in) :: encoding private pure subroutine set_pnm (this, encoding, file_format, width, height, max_color, comment, pixels) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: encoding character(len=3), intent(in) :: file_format integer, intent(in) :: width integer, intent(in) :: height integer, intent(in), optional :: max_color character(len=*), intent(in) :: comment integer, intent(in), dimension(:,:) :: pixels private pure elemental subroutine allocate_pixels (this) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this private pure elemental subroutine set_magicnumber (this, magic_number) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: magic_number private pure elemental subroutine set_width (this, width) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this integer, intent(in) :: width private pure elemental subroutine set_height (this, height) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this integer, intent(in) :: height private pure elemental subroutine set_comment (this, comment) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: comment private pure elemental subroutine set_max_color (this, max_color) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this integer, intent(in) :: max_color private pure elemental subroutine set_header (this, magic_number, width, height, comment, max_color) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: magic_number integer, intent(in) :: width integer, intent(in) :: height character(len=*), intent(in) :: comment integer, intent(in), optional :: max_color private pure subroutine set_pixels (this, pixels) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this integer, intent(in), dimension(:,:) :: pixels private pure elemental subroutine set_pixel (this, grey, r, g, b, i, j) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this integer, intent(in), optional :: grey integer, intent(in), optional :: r integer, intent(in), optional :: g integer, intent(in), optional :: b integer, intent(in) :: i integer, intent(in) :: j private impure subroutine export_pnm (this, file_name) Author Seyed Ali Ghasemi Arguments Type Intent Optional Attributes Name class( format_pnm ), intent(inout) :: this character(len=*), intent(in) :: file_name","tags":"","loc":"module/forimage.html"},{"title":"forimage.f90 – forimage","text":"Contents Modules forimage Source Code forimage.f90 Source Code module forimage implicit none private public format_pnm !=============================================================================== type format_pnm character ( 2 ) :: magic_number integer :: width integer :: height character ( 70 ) :: comment integer :: max_color integer , dimension (:,:), allocatable :: pixels character ( 3 ) :: file_format character ( 5 ) :: encoding contains procedure :: set_format procedure :: set_file_format procedure :: set_magicnumber procedure :: set_width procedure :: set_height procedure :: set_comment procedure :: set_max_color procedure :: set_header procedure :: allocate_pixels procedure :: set_pixels procedure :: export_pnm procedure :: set_pnm procedure :: import_pnm procedure :: dlloc => deallocate_pnm end type format_pnm !=============================================================================== contains !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_file_format ( this , file_format ) class ( format_pnm ), intent ( inout ) :: this character ( 3 ), intent ( in ) :: file_format this % file_format = file_format end subroutine set_file_format !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_format ( this , encoding ) class ( format_pnm ), intent ( inout ) :: this character ( * ), intent ( in ) :: encoding this % encoding = encoding end subroutine set_format !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine deallocate_pnm ( this ) class ( format_pnm ), intent ( inout ) :: this if ( allocated ( this % pixels )) deallocate ( this % pixels ) end subroutine deallocate_pnm !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi impure subroutine import_pnm ( this , file_name , file_format , encoding ) class ( format_pnm ), intent ( inout ) :: this character ( * ), intent ( in ) :: file_name character ( * ), intent ( in ) :: encoding character ( 3 ), intent ( in ) :: file_format integer :: nunit , i character :: temp this % file_format = file_format this % encoding = encoding select case ( encoding ) case ( 'binary' , 'raw' ) print * , 'Error: not implementet yet!' select case ( file_format ) case ( 'pbm' ) case ( 'pgm' ) case ( 'ppm' ) end select case ( 'ascii' , 'plain' ) select case ( file_format ) case ( 'pbm' ) open ( newunit = nunit , file = file_name // '.' // file_format ) read ( nunit , * ) this % magic_number read ( nunit , * ) temp , this % comment read ( nunit , * ) this % width , this % height call this % allocate_pixels () do i = 1 , size ( this % pixels , 1 ) read ( nunit , * ) this % pixels ( i ,:) end do close ( nunit ) case ( 'pgm' ) open ( newunit = nunit , file = file_name // '.' // file_format ) read ( nunit , * ) this % magic_number read ( nunit , * ) temp , this % comment read ( nunit , * ) this % width , this % height read ( nunit , * ) this % max_color call this % allocate_pixels () do i = 1 , size ( this % pixels , 1 ) read ( nunit , * ) this % pixels ( i ,:) end do close ( nunit ) case ( 'ppm' ) open ( newunit = nunit , file = file_name // '.' // file_format ) read ( nunit , * ) this % magic_number read ( nunit , * ) temp , this % comment read ( nunit , * ) this % width , this % height read ( nunit , * ) this % max_color call this % allocate_pixels () do i = 1 , size ( this % pixels , 1 ) read ( nunit , * ) this % pixels ( i ,:) end do close ( nunit ) end select end select end subroutine import_pnm !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi pure subroutine set_pnm ( this , encoding , file_format , width , height , max_color , comment , pixels ) class ( format_pnm ), intent ( inout ) :: this integer , intent ( in ) :: width integer , intent ( in ) :: height character ( * ), intent ( in ) :: comment integer , optional , intent ( in ) :: max_color integer , dimension (:,:), intent ( in ) :: pixels character ( * ), intent ( in ) :: encoding character ( 3 ), intent ( in ) :: file_format character ( 2 ) :: magic_number select case ( encoding ) case ( 'ascii' , 'plain' ) select case ( file_format ) case ( 'pbm' ) magic_number = 'P1' case ( 'pgm' ) magic_number = 'P2' case ( 'ppm' ) magic_number = 'P3' end select case ( 'binary' , 'raw' ) error stop 'Error: not implementet yet!' select case ( file_format ) case ( 'pbm' ) magic_number = 'P4' case ( 'pgm' ) magic_number = 'P5' case ( 'ppm' ) magic_number = 'P6' end select end select call this % set_format ( encoding ) call this % set_file_format ( file_format ) call this % set_header ( magic_number , width , height , comment , max_color ) call this % allocate_pixels () call this % set_pixels ( pixels ) end subroutine set_pnm !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine allocate_pixels ( this ) class ( format_pnm ), intent ( inout ) :: this select case ( this % magic_number ) case ( 'P1' ) if (. not . allocated ( this % pixels )) allocate ( this % pixels ( this % height , this % width )) case ( 'P2' ) if (. not . allocated ( this % pixels )) allocate ( this % pixels ( this % height , this % width )) case ( 'P3' ) if (. not . allocated ( this % pixels )) allocate ( this % pixels ( this % height , 3 * this % width )) end select end subroutine allocate_pixels !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_magicnumber ( this , magic_number ) class ( format_pnm ), intent ( inout ) :: this character ( * ), intent ( in ) :: magic_number this % magic_number = magic_number end subroutine set_magicnumber !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_width ( this , width ) class ( format_pnm ), intent ( inout ) :: this integer , intent ( in ) :: width this % width = width end subroutine set_width !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_height ( this , height ) class ( format_pnm ), intent ( inout ) :: this integer , intent ( in ) :: height this % height = height end subroutine set_height !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_comment ( this , comment ) class ( format_pnm ), intent ( inout ) :: this character ( * ), intent ( in ) :: comment this % comment = comment end subroutine set_comment !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_max_color ( this , max_color ) class ( format_pnm ), intent ( inout ) :: this integer , intent ( in ) :: max_color this % max_color = max_color end subroutine set_max_color !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_header ( this , magic_number , width , height , comment , max_color ) class ( format_pnm ), intent ( inout ) :: this character ( * ), intent ( in ) :: magic_number integer , intent ( in ) :: width integer , intent ( in ) :: height character ( * ), intent ( in ) :: comment integer , optional , intent ( in ) :: max_color call this % set_magicnumber ( magic_number ) call this % set_width ( height ) call this % set_height ( width ) call this % set_comment ( comment ) if ( this % file_format /= 'pbm' ) call this % set_max_color ( max_color ) end subroutine set_header !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi pure subroutine set_pixels ( this , pixels ) class ( format_pnm ), intent ( inout ) :: this integer , dimension (:,:), intent ( in ) :: pixels this % pixels = pixels end subroutine set_pixels !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi elemental pure subroutine set_pixel ( this , grey , r , g , b , i , j ) class ( format_pnm ), intent ( inout ) :: this integer , intent ( in ), optional :: grey integer , intent ( in ), optional :: r , g , b integer , intent ( in ) :: i , j select case ( this % magic_number ) case ( 'P1' ) this % pixels ( i , j ) = grey case ( 'P2' ) this % pixels ( i , j ) = grey case ( 'P3' ) this % pixels ( i , 3 * j - 2 ) = r this % pixels ( i , 3 * j - 1 ) = g this % pixels ( i , 3 * j - 0 ) = b end select end subroutine set_pixel !=============================================================================== !=============================================================================== !> author: Seyed Ali Ghasemi impure subroutine export_pnm ( this , file_name ) class ( format_pnm ), intent ( inout ) :: this character ( * ), intent ( in ) :: file_name integer :: nunit , i open ( newunit = nunit , file = file_name // '.' // this % file_format , status = 'replace' ) write ( nunit , '(a)' ) this % magic_number write ( nunit , '(a,a)' ) '# ' , this % comment write ( nunit , '(g0,1x,g0)' ) this % width , this % height if ( this % file_format /= 'pbm' ) write ( nunit , '(g0)' ) this % max_color do i = 1 , size ( this % pixels , 1 ) write ( nunit , '(*(g0,1x))' ) this % pixels ( i ,:) end do close ( nunit ) end subroutine export_pnm !=============================================================================== end module forimage","tags":"","loc":"sourcefile/forimage.f90.html"}]}